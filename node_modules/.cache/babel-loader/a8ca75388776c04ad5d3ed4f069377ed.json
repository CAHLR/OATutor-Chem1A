{"ast":null,"code":"/*! KAS | https://github.com/Khan/KAS */ // This is a @generated file\nvar _,KAS={};if(typeof module===\"object\"&&module.exports){_=require(\"underscore\");module.exports=KAS;}else{_=window._;window.KAS=KAS;}(function(KAS){/* parser generated by jison 0.4.15 */ /*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/var parser=function(){var o=function o(k,v,_o,l){for(_o=_o||{},l=k.length;l--;_o[k[l]]=v){;}return _o;},$V0=[1,7],$V1=[1,17],$V2=[1,13],$V3=[1,14],$V4=[1,15],$V5=[1,32],$V6=[1,22],$V7=[1,23],$V8=[1,24],$V9=[1,25],$Va=[1,26],$Vb=[1,33],$Vc=[1,27],$Vd=[1,28],$Ve=[1,29],$Vf=[1,30],$Vg=[1,20],$Vh=[1,36],$Vi=[1,37],$Vj=[5,6,8,10,33,35,41,43,45],$Vk=[1,39],$Vl=[1,40],$Vm=[5,6,8,10,12,14,16,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],$Vn=[10,16,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],$Vo=[5,6,8,10,12,14,16,18,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46];var parser={trace:function trace(){},yy:{},symbols_:{\"error\":2,\"equation\":3,\"expression\":4,\"SIGN\":5,\"EOF\":6,\"additive\":7,\"+\":8,\"multiplicative\":9,\"-\":10,\"triglog\":11,\"*\":12,\"negative\":13,\"/\":14,\"trig\":15,\"TRIG\":16,\"trigfunc\":17,\"^\":18,\"TRIGINV\":19,\"logbase\":20,\"ln\":21,\"log\":22,\"_\":23,\"subscriptable\":24,\"power\":25,\"primitive\":26,\"variable\":27,\"VAR\":28,\"CONST\":29,\"INT\":30,\"FLOAT\":31,\"{\":32,\"}\":33,\"(\":34,\")\":35,\"function\":36,\"FUNC\":37,\"invocation\":38,\"sqrt\":39,\"[\":40,\"]\":41,\"abs\":42,\"|\":43,\"LEFT|\":44,\"RIGHT|\":45,\"FRAC\":46,\"$accept\":0,\"$end\":1},terminals_:{2:\"error\",5:\"SIGN\",6:\"EOF\",8:\"+\",10:\"-\",12:\"*\",14:\"/\",16:\"TRIG\",18:\"^\",19:\"TRIGINV\",21:\"ln\",22:\"log\",23:\"_\",28:\"VAR\",29:\"CONST\",30:\"INT\",31:\"FLOAT\",32:\"{\",33:\"}\",34:\"(\",35:\")\",37:\"FUNC\",39:\"sqrt\",40:\"[\",41:\"]\",42:\"abs\",43:\"|\",44:\"LEFT|\",45:\"RIGHT|\",46:\"FRAC\"},productions_:[0,[3,4],[3,2],[3,1],[4,1],[7,3],[7,3],[7,1],[9,2],[9,3],[9,3],[9,1],[13,2],[13,1],[15,1],[17,1],[17,3],[17,1],[20,1],[20,1],[20,3],[11,2],[11,2],[11,1],[25,3],[25,1],[27,1],[24,3],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[36,1],[38,4],[38,4],[38,7],[38,4],[38,3],[38,3],[38,4],[26,1],[26,1],[26,7]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate/* action[1] */,$$/* vstack */,_$/* lstack */){/* this === yyval */var $0=$$.length-1;switch(yystate){case 1:return new yy.Eq($$[$0-3],$$[$0-2],$$[$0-1]);break;case 2:return $$[$0-1];break;case 3:return new yy.Add([]);break;case 4:case 7:case 11:case 13:case 15:case 20:case 23:case 25:case 42:case 43:this.$=$$[$0];break;case 5:this.$=yy.Add.createOrAppend($$[$0-2],$$[$0]);break;case 6:this.$=yy.Add.createOrAppend($$[$0-2],yy.Mul.handleNegative($$[$0],\"subtract\"));break;case 8:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-1],$$[$0]));break;case 9:this.$=yy.Mul.fold(yy.Mul.createOrAppend($$[$0-2],$$[$0]));break;case 10:this.$=yy.Mul.fold(yy.Mul.handleDivide($$[$0-2],$$[$0]));break;case 12:this.$=yy.Mul.handleNegative($$[$0]);break;case 14:case 17:this.$=[yytext];break;case 16:this.$=$$[$0-2].concat($$[$0]);break;case 18:this.$=yy.Log.natural();break;case 19:this.$=yy.Log.common();break;case 21:this.$=yy.Trig.create($$[$0-1],$$[$0]);break;case 22:this.$=yy.Log.create($$[$0-1],$$[$0]);break;case 24:this.$=new yy.Pow($$[$0-2],$$[$0]);break;case 26:case 34:this.$=yytext;break;case 27:this.$=new yy.Var($$[$0-2],$$[$0]);break;case 28:this.$=new yy.Var($$[$0]);break;case 29:this.$=new yy.Const(yytext.toLowerCase());break;case 30:this.$=yy.Int.create(Number(yytext));break;case 31:this.$=yy.Float.create(Number(yytext));break;case 32:this.$=$$[$0-1].completeParse();break;case 33:this.$=$$[$0-1].completeParse().addHint('parens');break;case 35:case 36:this.$=yy.Pow.sqrt($$[$0-1]);break;case 37:this.$=new yy.Pow.nthroot($$[$0-1],$$[$0-4]);break;case 38:case 39:case 40:this.$=new yy.Abs($$[$0-1]);break;case 41:this.$=new yy.Func($$[$0-3],$$[$0-1]);break;case 44:this.$=yy.Mul.handleDivide($$[$0-4],$$[$0-1]);break;}},table:[{3:1,4:2,6:[1,3],7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[3]},{5:[1,34],6:[1,35]},{1:[2,3]},o([5,6],[2,4],{8:$Vh,10:$Vi}),o($Vj,[2,7],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,11]),{10:$V0,11:8,13:41,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,13]),{10:$V0,11:8,13:42,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:43,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,23]),o($Vn,[2,15],{18:[1,44]}),o($Vn,[2,17]),o($Vn,[2,18]),o($Vn,[2,19],{23:[1,45]}),o($Vm,[2,25],{18:[1,46]}),o([10,16,18,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],[2,14]),o($Vo,[2,42]),o($Vo,[2,43]),{32:[1,47]},o($Vo,[2,28],{23:[1,48]}),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),{7:49,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:50,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{32:[1,52],34:[1,51],40:[1,53]},{34:[1,54]},{7:55,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:56,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{34:[1,57]},o([5,6,8,10,12,14,16,18,19,21,22,23,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],[2,26]),{34:[2,34]},{4:58,7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[2,2]},{9:59,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{9:60,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,8]),{10:$V0,11:8,13:61,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:62,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,12]),o($Vm,[2,21]),o($Vm,[2,22]),{10:$V0,11:8,13:63,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:64,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{10:$V0,11:8,13:65,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:66,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:67,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{8:$Vh,10:$Vi,33:[1,68]},{8:$Vh,10:$Vi,35:[1,69]},{7:70,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:71,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:72,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:73,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,43:[1,74]},{8:$Vh,10:$Vi,45:[1,75]},{7:76,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{6:[1,77]},o($Vj,[2,5],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vj,[2,6],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,9]),o($Vm,[2,10]),o($Vn,[2,16]),o($Vn,[2,20]),o($Vm,[2,24]),{8:$Vh,10:$Vi,33:[1,78]},o($Vo,[2,27]),o($Vo,[2,32]),o($Vo,[2,33]),{8:$Vh,10:$Vi,35:[1,79]},{8:$Vh,10:$Vi,33:[1,80]},{8:$Vh,10:$Vi,41:[1,81]},{8:$Vh,10:$Vi,35:[1,82]},o($Vo,[2,39]),o($Vo,[2,40]),{8:$Vh,10:$Vi,35:[1,83]},{1:[2,1]},{32:[1,84]},o($Vo,[2,35]),o($Vo,[2,36]),{32:[1,85]},o($Vo,[2,38]),o($Vo,[2,41]),{7:86,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:87,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,33:[1,88]},{8:$Vh,10:$Vi,33:[1,89]},o($Vo,[2,44]),o($Vo,[2,37])],defaultActions:{3:[2,3],33:[2,34],35:[2,2],77:[2,1]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str);}else{throw new Error(str);}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext='',yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k];}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc==='undefined'){lexer.yylloc={};}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==='function'){this.parseError=sharedState.yy.parseError;}else{this.parseError=Object.getPrototypeOf(this).parseError;}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n;}//_token_stack:\nfunction lex(){var token;token=lexer.lex()||EOF;if(typeof token!=='number'){token=self.symbols_[token]||token;}return token;}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state];}else{if(symbol==null||typeof symbol==='undefined'){symbol=lex();}action=table[state]&&table[state][symbol];}if(typeof action==='undefined'||!action.length||!action[0]){var errStr='';expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push('\\''+this.terminals_[p]+'\\'');}}if(lexer.showPosition){errStr='Parse error on line '+(yylineno+1)+':\\n'+lexer.showPosition()+'\\nExpecting '+expected.join(', ')+', got \\''+(this.terminals_[symbol]||symbol)+'\\'';}else{errStr='Parse error on line '+(yylineno+1)+': Unexpected '+(symbol===EOF?'end of input':'\\''+(this.terminals_[symbol]||symbol)+'\\'');}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected});}if(action[0]instanceof Array&&action.length>1){throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--;}}else{symbol=preErrorSymbol;preErrorSymbol=null;}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]];}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=='undefined'){return r;}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len);}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true;}}return true;}};/* generated by jison-lex 0.3.4 */var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash);}else{throw new Error(str);}},// resets the lexer, sets new input\nsetInput:function setInput(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match='';this.conditionStack=['INITIAL'];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0];}this.offset=0;return this;},// consumes and returns one char from the input\ninput:function input(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++;}else{this.yylloc.last_column++;}if(this.options.ranges){this.yylloc.range[1]++;}this._input=this._input.slice(1);return ch;},// unshifts one char (or a string) into the input\nunput:function unput(ch){var len=ch.length;var lines=ch.split(/(?:\\r\\n?|\\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);//this.yyleng -= len;\nthis.offset-=len;var oldLines=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1;}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len];}this.yyleng=this.yytext.length;return this;},// When called from action, caches matched text and appends it on next action\nmore:function more(){this._more=true;return this;},// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function reject(){if(this.options.backtrack_lexer){this._backtrack=true;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n'+this.showPosition(),{text:\"\",token:null,line:this.yylineno});}return this;},// retain first n characters of the match\nless:function less(n){this.unput(this.match.slice(n));},// displays already matched input, i.e. for error messages\npastInput:function pastInput(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?'...':'')+past.substr(-20).replace(/\\n/g,\"\");},// displays upcoming input, i.e. for error messages\nupcomingInput:function upcomingInput(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length);}return(next.substr(0,20)+(next.length>20?'...':'')).replace(/\\n/g,\"\");},// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function showPosition(){var pre=this.pastInput();var c=new Array(pre.length+1).join(\"-\");return pre+this.upcomingInput()+\"\\n\"+c+\"^\";},// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function test_match(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){// save context\nbackup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0);}}lines=match[0].match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno+=lines.length;}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng];}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false;}if(token){return token;}else if(this._backtrack){// recover context\nfor(var k in backup){this[k]=backup[k];}return false;// rule action called reject() implying the next rule should be tested instead.\n}return false;},// return next match in input\nnext:function next(){if(this.done){return this.EOF;}if(!this._input){this.done=true;}var token,match,tempMatch,index;if(!this._more){this.yytext='';this.match='';}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token;}else if(this._backtrack){match=false;continue;// rule action called reject() implying a rule MISmatch.\n}else{// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\nreturn false;}}else if(!this.options.flex){break;}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token;}// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\nreturn false;}if(this._input===\"\"){return this.EOF;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),{text:\"\",token:null,line:this.yylineno});}},// return next match that has a token\nlex:function lex(){var r=this.next();if(r){return r;}else{return this.lex();}},// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition){this.conditionStack.push(condition);},// pop the previously active lexer condition state off the condition stack\npopState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop();}else{return this.conditionStack[0];}},// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;}else{return this.conditions[\"INITIAL\"].rules;}},// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n];}else{return\"INITIAL\";}},// alias for begin(condition)\npushState:function pushState(condition){this.begin(condition);},// return the number of states currently on the stack\nstateStackSize:function stateStackSize(){return this.conditionStack.length;},options:{\"flex\":true},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:/* skip whitespace */break;case 1:/* skip \\space */break;case 2:/* skip '\\ ' */break;case 3:return\"INT\";break;case 4:return\"FLOAT\";break;case 5:return\"^\";break;case 6:return\"*\";break;case 7:return\"*\";break;case 8:return\"*\";break;case 9:return\"*\";break;case 10:return\"/\";break;case 11:return\"/\";break;case 12:return\"-\";break;case 13:return\"-\";break;case 14:return\"+\";break;case 15:return\"^\";break;case 16:return\"(\";break;case 17:return\")\";break;case 18:return\"(\";break;case 19:return\")\";break;case 20:return\"[\";break;case 21:return\"]\";break;case 22:return\"{\";break;case 23:return\"}\";break;case 24:return\"{\";break;case 25:return\"}\";break;case 26:return\"_\";break;case 27:return\"|\";break;case 28:return\"LEFT|\";break;case 29:return\"RIGHT|\";break;case 30:return\"!\";break;case 31:return\"SIGN\";break;case 32:yy_.yytext=\"<=\";return\"SIGN\";break;case 33:yy_.yytext=\">=\";return\"SIGN\";break;case 34:yy_.yytext=\"<=\";return\"SIGN\";break;case 35:yy_.yytext=\">=\";return\"SIGN\";break;case 36:yy_.yytext=\"<>\";return\"SIGN\";break;case 37:yy_.yytext=\"<>\";return\"SIGN\";break;case 38:yy_.yytext=\"<>\";return\"SIGN\";break;case 39:yy_.yytext=\"<>\";return\"SIGN\";break;case 40:yy_.yytext=\"<=\";return\"SIGN\";break;case 41:yy_.yytext=\">=\";return\"SIGN\";break;case 42:return\"FRAC\";break;case 43:return\"FRAC\";break;case 44:return\"sqrt\";break;case 45:return\"abs\";break;case 46:return\"ln\";break;case 47:return\"log\";break;case 48:return\"TRIG\";break;case 49:return\"TRIG\";break;case 50:return\"TRIG\";break;case 51:return\"TRIG\";break;case 52:yy_.yytext=\"sin\";return\"TRIG\";break;case 53:yy_.yytext=\"cos\";return\"TRIG\";break;case 54:yy_.yytext=\"tan\";return\"TRIG\";break;case 55:yy_.yytext=\"csc\";return\"TRIG\";break;case 56:yy_.yytext=\"sec\";return\"TRIG\";break;case 57:yy_.yytext=\"cot\";return\"TRIG\";break;case 58:yy_.yytext=\"arcsin\";return\"TRIG\";break;case 59:yy_.yytext=\"arccos\";return\"TRIG\";break;case 60:yy_.yytext=\"arctan\";return\"TRIG\";break;case 61:yy_.yytext=\"arccsc\";return\"TRIG\";break;case 62:yy_.yytext=\"arcsec\";return\"TRIG\";break;case 63:yy_.yytext=\"arccot\";return\"TRIG\";break;case 64:return\"TRIGINV\";break;case 65:return\"TRIGINV\";break;case 66:yy_.yytext=\"sinh\";return\"TRIG\";break;case 67:yy_.yytext=\"cosh\";return\"TRIG\";break;case 68:yy_.yytext=\"tanh\";return\"TRIG\";break;case 69:yy_.yytext=\"csch\";return\"TRIG\";break;case 70:yy_.yytext=\"sech\";return\"TRIG\";break;case 71:yy_.yytext=\"tanh\";return\"TRIG\";break;case 72:return\"CONST\";break;case 73:yy_.yytext=\"pi\";return\"CONST\";break;case 74:yy_.yytext=\"pi\";return\"CONST\";break;case 75:return\"VAR\";break;case 76:yy_.yytext=\"theta\";return\"VAR\";break;case 77:yy_.yytext=\"theta\";return\"VAR\";break;case 78:return\"VAR\";break;case 79:yy_.yytext=\"phi\";return\"VAR\";break;case 80:yy_.yytext=\"phi\";return\"VAR\";break;case 81:return yy.symbolLexer(yy_.yytext);break;case 82:return\"EOF\";break;case 83:return\"INVALID\";break;case 84:console.log(yy_.yytext);break;}},rules:[/^(?:\\s+)/,/^(?:\\\\space)/,/^(?:\\\\ )/,/^(?:[0-9]+\\.?)/,/^(?:([0-9]+)?\\.[0-9]+)/,/^(?:\\*\\*)/,/^(?:\\*)/,/^(?:\\\\cdot|·)/,/^(?:\\\\times|×)/,/^(?:\\\\ast)/,/^(?:\\/)/,/^(?:\\\\div|÷)/,/^(?:-)/,/^(?:−)/,/^(?:\\+)/,/^(?:\\^)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\\\left\\()/,/^(?:\\\\right\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\\\left\\{)/,/^(?:\\\\right\\})/,/^(?:_)/,/^(?:\\|)/,/^(?:\\\\left\\|)/,/^(?:\\\\right\\|)/,/^(?:\\!)/,/^(?:<=|>=|<>|<|>|=)/,/^(?:\\\\le)/,/^(?:\\\\ge)/,/^(?:\\\\leq)/,/^(?:\\\\geq)/,/^(?:=\\/=)/,/^(?:\\\\ne)/,/^(?:\\\\neq)/,/^(?:≠)/,/^(?:≤)/,/^(?:≥)/,/^(?:\\\\frac)/,/^(?:\\\\dfrac)/,/^(?:sqrt|\\\\sqrt)/,/^(?:abs|\\\\abs)/,/^(?:ln|\\\\ln)/,/^(?:log|\\\\log)/,/^(?:sin|cos|tan)/,/^(?:csc|sec|cot)/,/^(?:sinh|cosh|tanh)/,/^(?:csch|sech|coth)/,/^(?:\\\\sin)/,/^(?:\\\\cos)/,/^(?:\\\\tan)/,/^(?:\\\\csc)/,/^(?:\\\\sec)/,/^(?:\\\\cot)/,/^(?:\\\\arcsin)/,/^(?:\\\\arccos)/,/^(?:\\\\arctan)/,/^(?:\\\\arccsc)/,/^(?:\\\\arcsec)/,/^(?:\\\\arccot)/,/^(?:arcsin|arccos|arctan)/,/^(?:arccsc|arcsec|arccot)/,/^(?:\\\\sinh)/,/^(?:\\\\cosh)/,/^(?:\\\\tanh)/,/^(?:\\\\csch)/,/^(?:\\\\sech)/,/^(?:\\\\coth)/,/^(?:pi)/,/^(?:π)/,/^(?:\\\\pi)/,/^(?:theta)/,/^(?:θ)/,/^(?:\\\\theta)/,/^(?:phi)/,/^(?:φ)/,/^(?:\\\\phi)/,/^(?:[a-zA-Z])/,/^(?:$)/,/^(?:.)/,/^(?:.)/],conditions:{\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],\"inclusive\":true}}};return lexer;}();parser.lexer=lexer;function Parser(){this.yy={};}Parser.prototype=parser;parser.Parser=Parser;return new Parser();}();KAS.parser=parser;})(KAS);// this is a @generated file\n(function(KAS){/* parser generated by jison 0.4.15 */ /*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/var parser=function(){var o=function o(k,v,_o2,l){for(_o2=_o2||{},l=k.length;l--;_o2[k[l]]=v){;}return _o2;},$V0=[1,11],$V1=[1,9],$V2=[8,17],$V3=[6,11],$V4=[6,11,13,17];var parser={trace:function trace(){},yy:{},symbols_:{\"error\":2,\"unitvalue\":3,\"magnitude\":4,\"unit\":5,\"EOF\":6,\"float\":7,\"POW\":8,\"int\":9,\"multatoms\":10,\"DIV\":11,\"expatom\":12,\"MUL\":13,\"atom\":14,\"^\":15,\"nat\":16,\"ATOM\":17,\"FLOAT\":18,\"NAT\":19,\"NEG\":20,\"$accept\":0,\"$end\":1},terminals_:{2:\"error\",6:\"EOF\",8:\"POW\",11:\"DIV\",13:\"MUL\",15:\"^\",17:\"ATOM\",18:\"FLOAT\",19:\"NAT\",20:\"NEG\"},productions_:[0,[3,3],[3,2],[4,3],[4,1],[5,3],[5,1],[10,3],[10,2],[10,1],[12,3],[12,1],[14,1],[7,1],[7,1],[16,1],[9,2],[9,1]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate/* action[1] */,$$/* vstack */,_$/* lstack */){/* this === yyval */var $0=$$.length-1;switch(yystate){case 1:return{type:\"unitMagnitude\",magnitude:$$[$0-2],unit:$$[$0-1]};break;case 2:return{type:\"unitStandalone\",unit:$$[$0-1]};break;case 3:this.$=$$[$0-2]+\"e\"+$$[$0];break;case 4:case 13:case 14:case 15:case 17:this.$=$$[$0];break;case 5:this.$={num:$$[$0-2],denom:$$[$0]};break;case 6:this.$={num:$$[$0],denom:null};break;case 7:this.$=[$$[$0-2]].concat($$[$0]);break;case 8:this.$=[$$[$0-1]].concat($$[$0]);break;case 9:this.$=[$$[$0]];break;case 10:this.$={name:$$[$0-2],pow:$$[$0]};break;case 11:this.$={name:$$[$0],pow:1};break;case 12:this.$=yytext;break;case 16:this.$=\"-\"+$$[$0];break;}},table:[{3:1,4:2,5:3,7:4,10:5,12:8,14:10,16:7,17:$V0,18:[1,6],19:$V1},{1:[3]},{5:12,10:5,12:8,14:10,17:$V0},{6:[1,13]},{8:[1,14],17:[2,4]},{6:[2,6],11:[1,15]},o($V2,[2,13]),o($V2,[2,14]),o($V3,[2,9],{12:8,14:10,10:17,13:[1,16],17:$V0}),o([6,8,11,13,17],[2,15]),o($V4,[2,11],{15:[1,18]}),o([6,11,13,15,17],[2,12]),{6:[1,19]},{1:[2,2]},{9:20,19:[1,22],20:[1,21]},{10:23,12:8,14:10,17:$V0},{10:24,12:8,14:10,17:$V0},o($V3,[2,8]),{16:25,19:$V1},{1:[2,1]},{17:[2,3]},{19:[1,26]},{17:[2,17]},{6:[2,5]},o($V3,[2,7]),o($V4,[2,10]),{17:[2,16]}],defaultActions:{13:[2,2],19:[2,1],20:[2,3],22:[2,17],23:[2,5],26:[2,16]},parseError:function parseError(str,hash){if(hash.recoverable){this.trace(str);}else{throw new Error(str);}},parse:function parse(input){var self=this,stack=[0],tstack=[],vstack=[null],lstack=[],table=this.table,yytext='',yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1;var args=lstack.slice.call(arguments,1);var lexer=Object.create(this.lexer);var sharedState={yy:{}};for(var k in this.yy){if(Object.prototype.hasOwnProperty.call(this.yy,k)){sharedState.yy[k]=this.yy[k];}}lexer.setInput(input,sharedState.yy);sharedState.yy.lexer=lexer;sharedState.yy.parser=this;if(typeof lexer.yylloc==='undefined'){lexer.yylloc={};}var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;if(typeof sharedState.yy.parseError==='function'){this.parseError=sharedState.yy.parseError;}else{this.parseError=Object.getPrototypeOf(this).parseError;}function popStack(n){stack.length=stack.length-2*n;vstack.length=vstack.length-n;lstack.length=lstack.length-n;}//_token_stack:\nfunction lex(){var token;token=lexer.lex()||EOF;if(typeof token!=='number'){token=self.symbols_[token]||token;}return token;}var symbol,preErrorSymbol,state,action,a,r,yyval={},p,len,newState,expected;while(true){state=stack[stack.length-1];if(this.defaultActions[state]){action=this.defaultActions[state];}else{if(symbol==null||typeof symbol==='undefined'){symbol=lex();}action=table[state]&&table[state][symbol];}if(typeof action==='undefined'||!action.length||!action[0]){var errStr='';expected=[];for(p in table[state]){if(this.terminals_[p]&&p>TERROR){expected.push('\\''+this.terminals_[p]+'\\'');}}if(lexer.showPosition){errStr='Parse error on line '+(yylineno+1)+':\\n'+lexer.showPosition()+'\\nExpecting '+expected.join(', ')+', got \\''+(this.terminals_[symbol]||symbol)+'\\'';}else{errStr='Parse error on line '+(yylineno+1)+': Unexpected '+(symbol===EOF?'end of input':'\\''+(this.terminals_[symbol]||symbol)+'\\'');}this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected:expected});}if(action[0]instanceof Array&&action.length>1){throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);}switch(action[0]){case 1:stack.push(symbol);vstack.push(lexer.yytext);lstack.push(lexer.yylloc);stack.push(action[1]);symbol=null;if(!preErrorSymbol){yyleng=lexer.yyleng;yytext=lexer.yytext;yylineno=lexer.yylineno;yyloc=lexer.yylloc;if(recovering>0){recovering--;}}else{symbol=preErrorSymbol;preErrorSymbol=null;}break;case 2:len=this.productions_[action[1]][1];yyval.$=vstack[vstack.length-len];yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column};if(ranges){yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]];}r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args));if(typeof r!=='undefined'){return r;}if(len){stack=stack.slice(0,-1*len*2);vstack=vstack.slice(0,-1*len);lstack=lstack.slice(0,-1*len);}stack.push(this.productions_[action[1]][0]);vstack.push(yyval.$);lstack.push(yyval._$);newState=table[stack[stack.length-2]][stack[stack.length-1]];stack.push(newState);break;case 3:return true;}}return true;}};/* generated by jison-lex 0.3.4 */var lexer=function(){var lexer={EOF:1,parseError:function parseError(str,hash){if(this.yy.parser){this.yy.parser.parseError(str,hash);}else{throw new Error(str);}},// resets the lexer, sets new input\nsetInput:function setInput(input,yy){this.yy=yy||this.yy||{};this._input=input;this._more=this._backtrack=this.done=false;this.yylineno=this.yyleng=0;this.yytext=this.matched=this.match='';this.conditionStack=['INITIAL'];this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0};if(this.options.ranges){this.yylloc.range=[0,0];}this.offset=0;return this;},// consumes and returns one char from the input\ninput:function input(){var ch=this._input[0];this.yytext+=ch;this.yyleng++;this.offset++;this.match+=ch;this.matched+=ch;var lines=ch.match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno++;this.yylloc.last_line++;}else{this.yylloc.last_column++;}if(this.options.ranges){this.yylloc.range[1]++;}this._input=this._input.slice(1);return ch;},// unshifts one char (or a string) into the input\nunput:function unput(ch){var len=ch.length;var lines=ch.split(/(?:\\r\\n?|\\n)/g);this._input=ch+this._input;this.yytext=this.yytext.substr(0,this.yytext.length-len);//this.yyleng -= len;\nthis.offset-=len;var oldLines=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1);this.matched=this.matched.substr(0,this.matched.length-1);if(lines.length-1){this.yylineno-=lines.length-1;}var r=this.yylloc.range;this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:lines?(lines.length===oldLines.length?this.yylloc.first_column:0)+oldLines[oldLines.length-lines.length].length-lines[0].length:this.yylloc.first_column-len};if(this.options.ranges){this.yylloc.range=[r[0],r[0]+this.yyleng-len];}this.yyleng=this.yytext.length;return this;},// When called from action, caches matched text and appends it on next action\nmore:function more(){this._more=true;return this;},// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function reject(){if(this.options.backtrack_lexer){this._backtrack=true;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n'+this.showPosition(),{text:\"\",token:null,line:this.yylineno});}return this;},// retain first n characters of the match\nless:function less(n){this.unput(this.match.slice(n));},// displays already matched input, i.e. for error messages\npastInput:function pastInput(){var past=this.matched.substr(0,this.matched.length-this.match.length);return(past.length>20?'...':'')+past.substr(-20).replace(/\\n/g,\"\");},// displays upcoming input, i.e. for error messages\nupcomingInput:function upcomingInput(){var next=this.match;if(next.length<20){next+=this._input.substr(0,20-next.length);}return(next.substr(0,20)+(next.length>20?'...':'')).replace(/\\n/g,\"\");},// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function showPosition(){var pre=this.pastInput();var c=new Array(pre.length+1).join(\"-\");return pre+this.upcomingInput()+\"\\n\"+c+\"^\";},// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function test_match(match,indexed_rule){var token,lines,backup;if(this.options.backtrack_lexer){// save context\nbackup={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done};if(this.options.ranges){backup.yylloc.range=this.yylloc.range.slice(0);}}lines=match[0].match(/(?:\\r\\n?|\\n).*/g);if(lines){this.yylineno+=lines.length;}this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:lines?lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+match[0].length};this.yytext+=match[0];this.match+=match[0];this.matches=match;this.yyleng=this.yytext.length;if(this.options.ranges){this.yylloc.range=[this.offset,this.offset+=this.yyleng];}this._more=false;this._backtrack=false;this._input=this._input.slice(match[0].length);this.matched+=match[0];token=this.performAction.call(this,this.yy,this,indexed_rule,this.conditionStack[this.conditionStack.length-1]);if(this.done&&this._input){this.done=false;}if(token){return token;}else if(this._backtrack){// recover context\nfor(var k in backup){this[k]=backup[k];}return false;// rule action called reject() implying the next rule should be tested instead.\n}return false;},// return next match in input\nnext:function next(){if(this.done){return this.EOF;}if(!this._input){this.done=true;}var token,match,tempMatch,index;if(!this._more){this.yytext='';this.match='';}var rules=this._currentRules();for(var i=0;i<rules.length;i++){tempMatch=this._input.match(this.rules[rules[i]]);if(tempMatch&&(!match||tempMatch[0].length>match[0].length)){match=tempMatch;index=i;if(this.options.backtrack_lexer){token=this.test_match(tempMatch,rules[i]);if(token!==false){return token;}else if(this._backtrack){match=false;continue;// rule action called reject() implying a rule MISmatch.\n}else{// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\nreturn false;}}else if(!this.options.flex){break;}}}if(match){token=this.test_match(match,rules[index]);if(token!==false){return token;}// else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\nreturn false;}if(this._input===\"\"){return this.EOF;}else{return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),{text:\"\",token:null,line:this.yylineno});}},// return next match that has a token\nlex:function lex(){var r=this.next();if(r){return r;}else{return this.lex();}},// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition){this.conditionStack.push(condition);},// pop the previously active lexer condition state off the condition stack\npopState:function popState(){var n=this.conditionStack.length-1;if(n>0){return this.conditionStack.pop();}else{return this.conditionStack[0];}},// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules(){if(this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;}else{return this.conditions[\"INITIAL\"].rules;}},// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n){n=this.conditionStack.length-1-Math.abs(n||0);if(n>=0){return this.conditionStack[n];}else{return\"INITIAL\";}},// alias for begin(condition)\npushState:function pushState(condition){this.begin(condition);},// return the number of states currently on the stack\nstateStackSize:function stateStackSize(){return this.conditionStack.length;},options:{},performAction:function anonymous(yy,yy_,$avoiding_name_collisions,YY_START){var YYSTATE=YY_START;switch($avoiding_name_collisions){case 0:return 11;break;case 1:return'(';break;case 2:return')';break;case 3:return 8;break;case 4:return 15;break;case 5:return 13;break;case 6:return 18;break;case 7:return 19;break;case 8:return 20;break;case 9:return 17;break;case 10:return 17;break;case 11:return 17;break;case 12:/* skip whitespace */break;case 13:return 6;break;}},rules:[/^(?:\\/)/,/^(?:\\()/,/^(?:\\))/,/^(?:(\\*|x|\\u00d7|\\u2219|\\u22c5|\\u00b7)\\s*10\\s*\\^)/,/^(?:\\^)/,/^(?:\\*)/,/^(?:[0-9]+\\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:-)/,/^(?:\\u00b0( ?)[cCfF])/,/^(?:fl\\.? oz\\.?)/,/^(?:[\\u00b5]?([A-Za-z-]+|[\\u2103\\u2109\\u212b]))/,/^(?:\\s+)/,/^(?:$)/],conditions:{\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}};return lexer;}();parser.lexer=lexer;function Parser(){this.yy={};}Parser.prototype=parser;parser.Parser=Parser;return new Parser();}();KAS.unitParser=parser;})(KAS);/* TODO(charlie): fix these lint errors (http://eslint.org/docs/rules): */ /* eslint-disable indent, no-undef, no-var, one-var, no-dupe-keys, no-new-func, no-redeclare, no-unused-vars, comma-dangle, max-len, prefer-spread, space-infix-ops, space-unary-ops */(function(KAS){/*  The node hierarcy is as follows:\n\n    (Expr)\n        (Seq)           2+ children\n            Add\n            Mul\n        Pow             2 children\n        Log             2 children\n        Eq              2 children\n        Trig            1 child\n        Abs             1 child\n        (Symbol)\n            Func        1 child     e.g. f(x)\n            Var         leaf node   e.g. x, x_n\n            Const       leaf node   e.g. pi, e, <i>\n            Unit        leaf node   e.g. kg\n        (Num)           leaf node\n            Rational                e.g. 2/3\n                Int\n            Float\n\n    (abstract, not meant to be instantiated)\n\n    === Key design concepts ==\n    Functional: All methods return new nodes - nodes are never mutated.\n    Ignore commutativity: Commutative inputs should be parsed equivalently.\n    Exploit commutativity: Output should take advantage of ordering.\n*/ /* non user-facing functions */ // assert that all abstract methods have been overridden\nvar abstract=function abstract(){// Try to give people a bit of information when this happens\nthrow new Error(\"Abstract method - must override for expr: \"+this.print());};// throw an error that is meant to be caught by the test suite (not user facing)\nvar error=function error(message){throw new Error(message);};// reliably detect NaN\nvar isNaN=function isNaN(object){return object!==object;};// return a random float between min (inclusive) and max (exclusive),\n// not that inclusivity means much, probabilistically, on floats\nvar randomFloat=function randomFloat(min,max){var extent=max-min;return Math.random()*extent+min;};/* constants */var ITERATIONS=12;var TOLERANCE=9;// decimal places\n/* abstract base expression node */function Expr(){}_.extend(Expr.prototype,{// this node's immediate constructor\nfunc:abstract,// an array of the arguments to this node's immediate constructor\nargs:abstract,// make a new node with the given arguments\nconstruct:function construct(args){var instance=new this.func();this.func.apply(instance,args);return instance;},// an abstraction for chainable, bottom-up recursion\nrecurse:function recurse(method){var passed=Array.prototype.slice.call(arguments,1);var args=_.map(this.args(),function(arg){return _.isString(arg)?arg:arg[method].apply(arg,passed);});return this.construct(args);},// evaluate numerically with given variable mapping\neval:abstract,codegen:abstract,compile:function compile(){var code=this.codegen();try{return new Function(\"vars\",\"return \"+code+\";\");}catch(e){throw new Error(\"Function did not compile: \"+code);}},// returns a string unambiguously representing the expression\n// should be valid as input\n// e.g. this.equals(parse(this.print())) === true\nprint:abstract,// returns a TeX string representing the expression\ntex:abstract,// returns a TeX string, modified by the given options\nasTex:function asTex(options){options=options||{};_.defaults(options,{display:true,dynamic:true,times:false});var tex=this.tex();if(options.display){tex=\"\\\\displaystyle \"+tex;}if(options.dynamic){tex=tex.replace(/\\(/g,\"\\\\left(\");tex=tex.replace(/\\)/g,\"\\\\right)\");}if(options.times){tex=tex.replace(/\\\\cdot/g,\"\\\\times\");}return tex;},// returns the name of this expression's constructor as a string\n// only used for testing and debugging (the ugly regex is for IE8)\nname:function name(){if(this.func.name){return this.func.name;}else{return this.func.toString().match(/^function\\s*([^\\s(]+)/)[1];}},// returns a string representing current node structure\nrepr:function repr(){return this.name()+\"(\"+_.map(this.args(),function(arg){return _.isString(arg)?arg:arg.repr();}).join(\",\")+\")\";},// removes all negative signs\nstrip:function strip(){return this.recurse(\"strip\");},// canonically reorders all commutative elements\nnormalize:function normalize(){return this.recurse(\"normalize\");},// expands the expression\nexpand:function expand(){return this.recurse(\"expand\");},// naively factors out like terms\nfactor:function factor(options){return this.recurse(\"factor\",options);},// collect all like terms\ncollect:function collect(options){return this.recurse(\"collect\",options);},// strict syntactic equality check\nequals:function equals(other){return this.normalize().print()===other.normalize().print();},// expand and collect until the expression no longer changes\nsimplify:function simplify(options){options=_.extend({once:false},options);// Attempt to factor and collect\nvar step1=this.factor(options);var step2=step1.collect(options);// Rollback if collect didn't do anything\nif(step1.equals(step2)){step2=this.collect(options);}// Attempt to expand and collect\nvar step3=step2.expand(options);var step4=step3.collect(options);// Rollback if collect didn't do anything\nif(step3.equals(step4)){step4=step2.collect(options);}// One round of simplification complete\nvar simplified=step4;if(options.once||this.equals(simplified)){return simplified;}else{return simplified.simplify(options);}},// check whether this expression is simplified\nisSimplified:function isSimplified(){return this.equals(this.simplify());},// return the child nodes of this node\nexprArgs:function exprArgs(){return _.filter(this.args(),function(arg){return arg instanceof Expr;});},// return the variables (function and non) within the expression\ngetVars:function getVars(excludeFunc){return _.uniq(_.flatten(_.invoke(this.exprArgs(),\"getVars\",excludeFunc))).sort();},getConsts:function getConsts(){return _.uniq(_.flatten(_.invoke(this.exprArgs(),\"getConsts\"))).sort();},getUnits:function getUnits(){return _.flatten(_.invoke(this.exprArgs(),\"getUnits\"));},// check whether this expression node is of a particular type\nis:function is(func){return this instanceof func;},// check whether this expression has a particular node type\nhas:function has(func){if(this instanceof func){return true;}return _.any(this.exprArgs(),function(arg){return arg.has(func);});},// raise this expression to a given exponent\n// most useful for eventually implementing i^3 = -i, etc.\nraiseToThe:function raiseToThe(exp){return new Pow(this,exp);},// does this expression have a specific rendering hint?\n// rendering hints are picked up while parsing, but are lost during transformations\nisSubtract:function isSubtract(){return false;},isDivide:function isDivide(){return false;},isRoot:function isRoot(){return false;},// whether this node needs an explicit multiplication sign if following a Num\nneedsExplicitMul:function needsExplicitMul(){return this.args()[0].needsExplicitMul();},// check that the variables in both expressions are the same\nsameVars:function sameVars(other){var vars1=this.getVars();var vars2=other.getVars();// the other Expr can have more variables than this one\n// this lets you multiply equations by other variables\nvar same=function same(array1,array2){return!_.difference(array1,array2).length;};var lower=function lower(array){return _.uniq(_.invoke(array,\"toLowerCase\")).sort();};var equal=same(vars1,vars2);var equalIgnoringCase=same(lower(vars1),lower(vars2));return{equal:equal,equalIgnoringCase:equalIgnoringCase};},// semantic equality check, call after sameVars() to avoid potential false positives\n// plug in random numbers for the variables in both expressions\n// if they both consistently evaluate the same, then they're the same\ncompare:function compare(other){// equation comparisons are handled by Eq.compare()\nif(other instanceof Eq){return false;}var varList=_.union(this.getVars(/* excludeFunc */true),other.getVars(/* excludeFunc */true));// If the numbers are large we would like to do a relative comparison\n// rather than an absolute one, but if they're small enough then an\n// absolute comparison makes more sense\nvar getDelta=function getDelta(num1,num2){if(Math.abs(num1)<1||Math.abs(num2)<1){return Math.abs(num1-num2);}else{return Math.abs(1-num1/num2);}};var equalNumbers=function equalNumbers(num1,num2){var delta=getDelta(num1,num2);return num1===num2||/* needed if either is +/- Infinity */isNaN(num1)&&isNaN(num2)||delta<Math.pow(10,-TOLERANCE);};// if no variables, only need to evaluate once\nif(!varList.length&&!this.has(Unit)&&!other.has(Unit)){return equalNumbers(this.eval(),other.eval());}// collect here to avoid sometimes dividing by zero, and sometimes not\n// it is better to be deterministic, e.g. x/x -> 1\n// TODO(alex): may want to keep track of assumptions as they're made\nvar expr1=this.collect();var expr2=other.collect();var unitList1=this.getUnits();var unitList2=other.getUnits();if(!_.isEqual(unitList1,unitList2)){return false;}// Compare at a set number (currently 12) of points to determine\n// equality.\n//\n// `range` (and `vars`) is the only variable that varies through the\n// iterations. For each of range = 10, 100, and 1000, each random\n// variable is picked from (-range, range).\n//\n// Note that because there are 12 iterations and three ranges, each\n// range is checked four times.\nfor(var i=0;i<ITERATIONS;i++){var vars={};// One third total iterations each with range 10, 100, and 1000\nvar range=Math.pow(10,1+Math.floor(3*i/ITERATIONS));// Half of the iterations should only use integer values.\n// This is because expressions like (-2)^x are common but result\n// in NaN when evaluated in JS with non-integer values of x.\n// Without this, (-2)^x and (-2)^(x+1) both end up always being NaN\n// and thus equivalent. With this, the most common failure case is\n// avoided. However, less common cases such as (-2)^(x+0.1) and\n// (-2)^(x+1.1) will still both evaluate to NaN and result in a\n// false positive.\n//\n// Note that the above is only true in vanilla JS Number-land,\n// which has no concept of complex numbers. The solution is simple:\n// Integrate a library for handling complex numbers.\n//\n// TODO(alex): Add support for complex numbers, then remove this.\nvar useFloats=i%2===0;_.each(varList,function(v){vars[v]=useFloats?randomFloat(-range,range):_.random(-range,range);});var equal;if(expr1.has(Func)||expr2.has(Func)||expr1.has(Unit)||expr2.has(Unit)){var result1=expr1.partialEval(vars);var result2=expr2.partialEval(vars);equal=result1.simplify().equals(result2.simplify());}else{var result1=expr1.eval(vars);var result2=expr2.eval(vars);equal=equalNumbers(result1,result2);}if(!equal){return false;}}return true;},// evaluate as much of the expression as possible\npartialEval:function partialEval(vars){if(this instanceof Unit){return this;}else if(!this.has(Func)){return new Float(this.eval(vars).toFixed(TOLERANCE)).collect();}else if(this instanceof Func){return new Func(this.symbol,this.arg.partialEval(vars));}else{return this.recurse(\"partialEval\",vars);}},// check that the structure of both expressions is the same\n// should only be done after compare() returns true to avoid false positives\nsameForm:function sameForm(other){return this.tex()===other.tex();},// returns the GCD of this expression and the given factor\nfindGCD:function findGCD(factor){return this.equals(factor)?factor:Num.One;},// return this expression's denominator\ngetDenominator:function getDenominator(){return Num.One;},// return this expression as a Mul\nasMul:function asMul(){return new Mul(Num.One,this);},// TODO(alex): rename to isDefinitePositive or similar?\n// return whether this expression is 100% positive\nisPositive:abstract,// TODO(alex): rename to hasNegativeSign or similar?\n// return whether this expression has a negative sign\nisNegative:function isNegative(){return false;},// return a factor of this expression that is 100% positive\nasPositiveFactor:function asPositiveFactor(){return this.isPositive()?this:Num.One;},// return a copy of the expression with a new hint set (preserves hints)\naddHint:function addHint(hint){if(!hint){return this;}var expr=this.construct(this.args());expr.hints=_.clone(this.hints);expr.hints[hint]=true;return expr;},hints:{parens:false},// currently unused!\nasExpr:function asExpr(){return this;},// complete parse by performing a few necessary transformations\ncompleteParse:function completeParse(){return this.recurse(\"completeParse\");},abs:abstract,negate:function negate(){return new Mul(Num.Neg,this);}});/* abstract sequence node */function Seq(){}Seq.prototype=new Expr();_.extend(Seq.prototype,{args:function args(){return this.terms;},normalize:function normalize(){var terms=_.sortBy(_.invoke(this.terms,\"normalize\"),function(term){return term.print();});return new this.func(terms);},expand:function expand(){return this.recurse(\"expand\").flatten();},// partition the sequence into its numeric and non-numeric parts\n// makes no guarantees about the validity of either part!\npartition:function partition(){var terms=_.groupBy(this.terms,function(term){return term instanceof Num;});// XXX using a boolean as a key just converts it to a string. I don't\n// think this code was written with that in mind. Probably doesn't\n// matter except for readability.\nvar numbers=terms[true]||[];var others=terms[false]||[];return[new this.func(numbers),new this.func(others)];},// ensure that sequences have 2+ terms and no nested sequences of the same type\n// this is a shallow flattening and will return a non-Seq if terms.length <= 1\nflatten:function flatten(){var type=this;var terms=_.reject(this.terms,function(term){return term.equals(type.identity);});if(terms.length===0){return type.identity;}if(terms.length===1){return terms[0];}var grouped=_.groupBy(terms,function(term){return term instanceof type.func;});// same contains the children which are Seqs of the same type as this Seq\nvar same=grouped[true]||[];var others=grouped[false]||[];var flattened=others.concat(_.flatten(_.pluck(same,\"terms\"),/* shallow: */true));return new type.func(flattened);},// the identity associated with the sequence\nidentity:undefined,// reduce a numeric sequence to a Num\nreduce:abstract,isPositive:function isPositive(){var terms=_.invoke(this.terms,\"collect\");return _.all(_.invoke(terms,\"isPositive\"));},// return a new Seq with a given term replaced by a different term\n// (or array of terms). given term can be passed directly, or by index\n// if no new term is provided, the old one is simply removed\nreplace:function replace(oldTerm,newTerm){var index;if(oldTerm instanceof Expr){index=_.indexOf(this.terms,oldTerm);}else{index=oldTerm;}var newTerms=[];if(_.isArray(newTerm)){newTerms=newTerm;}else if(newTerm){newTerms=[newTerm];}var terms=this.terms.slice(0,index).concat(newTerms).concat(this.terms.slice(index+1));return new this.func(terms);},// syntactic sugar for replace()\nremove:function remove(term){return this.replace(term);},getDenominator:function getDenominator(){// TODO(alex): find and return LCM\nreturn new Mul(_.invoke(this.terms,\"getDenominator\")).flatten();}});/* sequence of additive terms */function Add(){if(arguments.length===1){this.terms=arguments[0];}else{this.terms=_.toArray(arguments);}}Add.prototype=new Seq();_.extend(Add.prototype,{func:Add,eval:function _eval(vars,options){return _.reduce(this.terms,function(memo,term){return memo+term.eval(vars,options);},0);},codegen:function codegen(){return _.map(this.terms,function(term){return\"(\"+term.codegen()+\")\";}).join(\" + \")||\"0\";},print:function print(){return _.invoke(this.terms,\"print\").join(\"+\");},tex:function tex(){var tex=\"\";_.each(this.terms,function(term){if(!tex||term.isSubtract()){tex+=term.tex();}else{tex+=\"+\"+term.tex();}});return tex;},collect:function collect(options){var terms=_.invoke(this.terms,\"collect\",options);// [Expr expr, Num coefficient]\nvar pairs=[];_.each(terms,function(term){if(term instanceof Mul){var muls=term.partition();pairs.push([muls[1].flatten(),muls[0].reduce(options)]);}else if(term instanceof Num){pairs.push([Num.One,term]);}else{pairs.push([term,Num.One]);}});// { (Expr expr).print(): [[Expr expr, Num coefficient]] }\nvar grouped=_.groupBy(pairs,function(pair){return pair[0].normalize().print();});var collected=_.compact(_.map(grouped,function(pairs){var expr=pairs[0][0];var sum=new Add(_.zip.apply(_,pairs)[1]);var coefficient=sum.reduce(options);return new Mul(coefficient,expr).collect(options);}));// TODO(alex): use the Pythagorean identity here\n// e.g. x*sin^2(y) + x*cos^2(y) -> x\nreturn new Add(collected).flatten();},// naively factor out anything that is common to all terms\n// if options.keepNegative is specified, won't factor out a common -1\nfactor:function factor(options){options=_.extend({keepNegative:false},options);var terms=_.invoke(this.terms,\"collect\");var factors;if(terms[0]instanceof Mul){factors=terms[0].terms;}else{factors=[terms[0]];}_.each(_.rest(this.terms),function(term){factors=_.map(factors,function(factor){return term.findGCD(factor);});});if(!options.keepNegative&&this.isNegative()){factors.push(Num.Neg);}factors=new Mul(factors).flatten().collect();var remainder=_.map(terms,function(term){return Mul.handleDivide(term,factors).simplify();});remainder=new Add(remainder).flatten();return Mul.createOrAppend(factors,remainder).flatten();},reduce:function reduce(options){return _.reduce(this.terms,function(memo,term){return memo.add(term,options);},this.identity);},needsExplicitMul:function needsExplicitMul(){return false;},isNegative:function isNegative(){var terms=_.invoke(this.terms,\"collect\");return _.all(_.invoke(terms,\"isNegative\"));},negate:function negate(){return new Add(_.invoke(this.terms,\"negate\"));}});/* sequence of multiplicative terms */function Mul(){if(arguments.length===1){this.terms=arguments[0];}else{this.terms=_.toArray(arguments);}}Mul.prototype=new Seq();_.extend(Mul.prototype,{func:Mul,eval:function _eval(vars,options){return _.reduce(this.terms,function(memo,term){return memo*term.eval(vars,options);},1);},codegen:function codegen(){return _.map(this.terms,function(term){return\"(\"+term.codegen()+\")\";}).join(\" * \")||\"0\";},print:function print(){return _.map(this.terms,function(term){return term instanceof Add?\"(\"+term.print()+\")\":term.print();}).join(\"*\");},getUnits:function getUnits(){var tmUnits=_.chain(this.terms).map(function(term){return term.getUnits();}).flatten().value();tmUnits.sort(function(a,b){return a.unit<b.unit;});return tmUnits;},// since we don't care about commutativity, we can render a Mul any way we choose\n// so we follow convention: first any negatives, then any numbers, then everything else\ntex:function tex(){var cdot=\" \\\\cdot \";var terms=_.groupBy(this.terms,function(term){if(term.isDivide()){return\"inverse\";}else if(term instanceof Num){return\"number\";}else{return\"other\";}});var inverses=terms.inverse||[];var numbers=terms.number||[];var others=terms.other||[];var negatives=\"\";var numerator;// check all the numbers to see if there is a rational we can extract,\n// since we would like 1/2x/y to come out as \\frac{1}{2}\\frac{x}{y},\n// and not \\frac{1x}{2y}.\nfor(var i=0;i<numbers.length;i++){var isRational=numbers[i]instanceof Rational&&!(numbers[i]instanceof Int);if(isRational&&others.length>0&&inverses.length>0){var withThisRemoved=numbers.slice();withThisRemoved.splice(i,1);var newTerms=withThisRemoved.concat(inverses).concat(others);return numbers[i].tex()+new Mul(newTerms).tex();}}numbers=_.compact(_.map(numbers,function(term){var hasDenom=term instanceof Rational&&!(term instanceof Int);var shouldPushDown=!term.hints.fraction||inverses.length>0;if(hasDenom&&shouldPushDown){// e.g. 3x/4 -> 3/4*x (internally) -> 3x/4 (rendered)\ninverses.push(new Pow(new Int(term.d),Num.Div));var number=new Int(term.n);number.hints=term.hints;return _.any(term.hints)?number:null;}else{return term;}}));if(numbers.length===0&&others.length===1){// e.g. (x+y)/z -> \\frac{x+y}{z}\nnumerator=others[0].tex();}else{var tex=\"\";_.each(numbers,function(term){if(term.hints.subtract&&term.hints.entered){negatives+=\"-\";tex+=(tex?cdot:\"\")+term.abs().tex();}else if(term instanceof Int&&term.n===-1&&(term.hints.negate||term.hints.subtract)){// e.g. -1*-1 -> --1\n// e.g. -1*x -> -x\nnegatives+=\"-\";}else{// e.g. 2*3 -> 2(dot)3\ntex+=(tex?cdot:\"\")+term.tex();}});_.each(others,function(term){if(term.needsExplicitMul()){// e.g. 2*2^3 -> 2(dot)2^3\ntex+=(tex?cdot:\"\")+term.tex();}else if(term instanceof Add){// e.g. (a+b)*c -> (a+b)c\ntex+=\"(\"+term.tex()+\")\";}else{// e.g. a*b*c -> abc\ntex+=term.tex();}});numerator=tex?tex:\"1\";}if(!inverses.length){return negatives+numerator;}else{var denominator=new Mul(_.invoke(inverses,\"asDivide\")).flatten().tex();return negatives+\"\\\\frac{\"+numerator+\"}{\"+denominator+\"}\";}},strip:function strip(){var terms=_.map(this.terms,function(term){return term instanceof Num?term.abs():term.strip();});return new Mul(terms).flatten();},// expand numerator and denominator separately\nexpand:function expand(){var isAdd=function isAdd(term){return term instanceof Add;};var isInverse=function isInverse(term){return term instanceof Pow&&term.exp.isNegative();};var isInverseAdd=function isInverseAdd(term){return isInverse(term)&&isAdd(term.base);};var mul=this.recurse(\"expand\").flatten();var hasAdd=_.any(mul.terms,isAdd);var hasInverseAdd=_.any(mul.terms,isInverseAdd);if(!(hasAdd||hasInverseAdd)){return mul;}var terms=_.groupBy(mul.terms,isInverse);var normals=terms[false]||[];var inverses=terms[true]||[];if(hasAdd){var grouped=_.groupBy(normals,isAdd);var adds=grouped[true]||[];var others=grouped[false]||[];// loop over each additive sequence\nvar expanded=_.reduce(adds,function(expanded,add){// loop over each expanded array of terms\nreturn _.reduce(expanded,function(temp,array){// loop over each additive sequence's terms\nreturn temp.concat(_.map(add.terms,function(term){return array.concat(term);}));},[]);},[[]]);// join each fully expanded array of factors with remaining multiplicative factors\nvar muls=_.map(expanded,function(array){return new Mul(others.concat(array)).flatten();});normals=[new Add(muls)];}if(hasInverseAdd){var denominator=new Mul(_.invoke(inverses,\"getDenominator\")).flatten();inverses=[new Pow(denominator.expand(),Num.Div)];}return new Mul(normals.concat(inverses)).flatten();},factor:function factor(options){var factored=this.recurse(\"factor\",options).flatten();if(!(factored instanceof Mul)){return factored;}// Combine any factored out Rationals into one, but don't collect\nvar grouped=_.groupBy(factored.terms,function(term){return term instanceof Rational;});// Could also accomplish this by passing a new option\n// e.g. return  memo.mul(term, {autocollect: false});\n// TODO(alex): Decide whether this is a good use of options or not\nvar rational=_.reduce(grouped[true],function(memo,term){return{n:memo.n*term.n,d:memo.d*term.d};},{n:1,d:1});if(rational.d===1){rational=new Int(rational.n);}else{rational=new Rational(rational.n,rational.d);}return new Mul((grouped[false]||[]).concat(rational)).flatten();},collect:function collect(options){var partitioned=this.recurse(\"collect\",options).partition();var number=partitioned[0].reduce(options);// e.g. 0*x -> 0\nif(number.eval()===0){return Num.Zero;}var others=partitioned[1].flatten();// e.g. 2*2 -> 4\n// e.g. 2*2*x -> 4*x\nif(!(others instanceof Mul)){return new Mul(number,others).flatten();}others=others.terms;// [Expr base, Expr exp]\nvar pairs=[];_.each(others,function(term){if(term instanceof Pow){pairs.push([term.base,term.exp]);}else{pairs.push([term,Num.One]);}});// {(Expr base).print(): [[Expr base, Expr exp]]}\nvar grouped=_.groupBy(pairs,function(pair){return pair[0].normalize().print();});// [[Expr base, Expr exp]]\nvar summed=_.compact(_.map(grouped,function(pairs){var base=pairs[0][0];var sum=new Add(_.zip.apply(_,pairs)[1]);var exp=sum.collect(options);if(exp instanceof Num&&exp.eval()===0){return null;}else{return[base,exp];}}));// XXX `pairs` is shadowed four or five times in this function\nvar pairs=_.groupBy(summed,function(pair){if(pair[0]instanceof Trig&&pair[0].isBasic()){return\"trig\";}else if(pair[0]instanceof Log){return\"log\";}else{return\"expr\";}});var trigs=pairs.trig||[];var logs=pairs.log||[];var exprs=pairs.expr||[];if(trigs.length>1){// combine sines and cosines into other trig functions\n// {Trig.arg.print(): [[Trig base, Expr exp]]}\nvar byArg=_.groupBy(trigs,function(pair){return pair[0].arg.normalize().print();});trigs=[];_.each(byArg,function(pairs){var arg=pairs[0][0].arg;// {Trig.type: Expr exp}\nvar funcs={sin:Num.Zero,cos:Num.Zero};_.each(pairs,function(pair){funcs[pair[0].type]=pair[1];});if(Mul.handleNegative(funcs.sin).collect(options).equals(funcs.cos)){// e.g. sin^x(y)/cos^x(y) -> tan^x(y)\nif(funcs.cos.isNegative()){funcs={tan:funcs.sin};}else{funcs={cot:funcs.cos};}}// TODO(alex): combine even if exponents not a perfect match\n// TODO(alex): transform 1/sin and 1/cos into csc and sec\n_.each(funcs,function(exp,type){trigs.push([new Trig(type,arg),exp]);});});}if(logs.length>1){// combine logs with the same base\n// {Log.base.print(): [[Log base, Expr exp]]}\nvar byBase=_.groupBy(logs,function(pair){return pair[0].base.normalize().print();});logs=[];_.each(byBase,function(pairs){// only combine two logs of the same base, otherwise commutative\n// differences result in different equally valid output\n// e.g. ln(x)/ln(z)*ln(y) -> log_z(x)*ln(y)\n// e.g. ln(x)*ln(y)/ln(z) -> ln(x)*log_z(y)\nif(pairs.length===2&&Mul.handleNegative(pairs[0][1]).collect(options).equals(pairs[1][1])){// e.g. ln(x)^y/ln(b)^y -> log_b(x)^y\nif(pairs[0][1].isNegative()){logs.push([new Log(pairs[0][0].power,pairs[1][0].power),pairs[1][1]]);}else{logs.push([new Log(pairs[1][0].power,pairs[0][0].power),pairs[0][1]]);}}else{logs=logs.concat(pairs);}});// TODO(alex): combine if all inverses are the same e.g. ln(y)*ln(z)/ln(x)/ln(x)\n}pairs=trigs.concat(logs).concat(exprs);var collected=_.map(pairs,function(pair){return new Pow(pair[0],pair[1]).collect(options);});return new Mul([number].concat(collected)).flatten();},isSubtract:function isSubtract(){return _.any(this.terms,function(term){return term instanceof Num&&term.hints.subtract;});},// factor a single -1 in to the Mul\n// combine with a Num if all Nums are positive, else add as a term\nfactorIn:function factorIn(hint){var partitioned=this.partition();var numbers=partitioned[0].terms;var fold=numbers.length&&_.all(numbers,function(num){return num.n>0;});if(fold){// e.g. - x*2*3 -> x*-2*3\nvar num=numbers[0].negate();num.hints=numbers[0].hints;return this.replace(numbers[0],num.addHint(hint));}else{// e.g. - x*y -> -1*x*y\n// e.g. - x*-2 -> -1*x*-2\nreturn new Mul([Num.negativeOne(hint)].concat(this.terms));}},// factor out a single hinted -1 (assume it is the division hint)\n// TODO(alex): make more general or rename to be more specific\nfactorOut:function factorOut(){var factored=false;var terms=_.compact(_.map(this.terms,function(term,i,list){if(!factored&&term instanceof Num&&term.hints.divide){factored=true;return term.n!==-1?term.negate():null;}else{return term;}}));if(terms.length===1){return terms[0];}else{return new Mul(terms);}},reduce:function reduce(options){return _.reduce(this.terms,function(memo,term){return memo.mul(term,options);},this.identity);},findGCD:function findGCD(factor){return new Mul(_.invoke(this.terms,\"findGCD\",factor)).flatten();},asMul:function asMul(){return this;},asPositiveFactor:function asPositiveFactor(){if(this.isPositive()){return this;}else{var terms=_.invoke(this.collect().terms,\"asPositiveFactor\");return new Mul(terms).flatten();}},isNegative:function isNegative(){return _.any(_.invoke(this.collect().terms,\"isNegative\"));},fold:function fold(){return Mul.fold(this);},negate:function negate(){var isNum=function isNum(expr){return expr instanceof Num;};if(_.any(this.terms,isNum)){var num=_.find(this.terms,isNum);return this.replace(num,num.negate());}else{return new Mul([Num.Neg].concat(this.terms));}}});// static methods for the sequence types\n_.each([Add,Mul],function(type){_.extend(type,{// create a new sequence unless left is already one (returns a copy)\ncreateOrAppend:function createOrAppend(left,right){if(left instanceof type){return new type(left.terms.concat(right));}else{return new type(left,right);}}});});_.extend(Mul,{// negative signs should be folded into numbers whenever possible\n// never fold into a Num that's already negative or a Mul that has a negative Num\n// an optional hint is kept track of to properly render user input\n// an empty hint means negation\nhandleNegative:function handleNegative(expr,hint){if(expr instanceof Num&&expr.n>0){// e.g. - 2 -> -2\nvar negated=expr.negate();// TODO(alex): rework hint system so that this isn't necessary\nnegated.hints=expr.hints;return negated.addHint(hint);}else if(expr instanceof Mul){// e.g. - x*2*3 -> x*-2*3\n// e.g. - x*y -> -1*x*y\n// e.g. - x*-2 -> -1*x*-2\nreturn expr.factorIn(hint);}else{// e.g. - x -> -1*x\nreturn new Mul(Num.negativeOne(hint),expr);}},// division can create either a Rational or a Mul\nhandleDivide:function handleDivide(left,right){// dividing by a Mul is the same as repeated division by its terms\nif(right instanceof Mul){var first=Mul.handleDivide(left,right.terms[0]);var rest=new Mul(_.rest(right.terms)).flatten();return Mul.handleDivide(first,rest);}var isInt=function isInt(expr){return expr instanceof Int;};var isRational=function isRational(expr){return expr instanceof Rational;};// for simplification purposes, fold Ints into Rationals if possible\n// e.g. 3x / 4 -> 3/4 * x (will still render as 3x/4)\nif(isInt(right)&&left instanceof Mul&&_.any(left.terms,isInt)){// search from the right\nvar reversed=left.terms.slice().reverse();var num=_.find(reversed,isRational);if(!isInt(num)){return new Mul(left.terms.concat([new Rational(1,right.n).addHint(\"fraction\")]));}var rational=new Rational(num.n,right.n);rational.hints=num.hints;// in the case of something like 1/3 * 6/8, we want the\n// 6/8 to be considered a fraction, not just a division\nif(num===reversed[0]){rational=rational.addHint(\"fraction\");}var result;if(num.n<0&&right.n<0){rational.d=-rational.d;return left.replace(num,[Num.Neg,rational]);}else{return left.replace(num,rational);}}var divide=function divide(a,b){if(b instanceof Int){if(a instanceof Int){if(a.n<0&&b.n<0){// e.g. -2 / -3 -> -1*-2/3\nreturn[Num.Neg,new Rational(a.n,-b.n).addHint(\"fraction\")];}else{// e.g. 2 / 3 -> 2/3\n// e.g. -2 / 3 -> -2/3\n// e.g. 2 / -3 -> -2/3\nreturn[new Rational(a.n,b.n).addHint(\"fraction\")];}}else{// e.g. x / 3 -> x*1/3\n// e.g. x / -3 -> x*-1/3\nvar inverse=new Rational(1,b.eval());if(b.eval()<0){return[a,inverse.addHint(\"negate\")];}else{return[a,inverse];}}}else{var pow;if(b instanceof Trig&&b.exp){// e.g. sin^2(x) -> sin(x)^2\nvar exp=b.exp;b.exp=undefined;b=new Pow(b,exp);}if(b instanceof Pow){// e.g. (x^2) ^ -1 -> x^-2\n// e.g. (x^y) ^ -1 -> x^(-1*y)\n// e.g. (x^(yz)) ^ -1 -> x^(-1*y*z)\npow=new Pow(b.base,Mul.handleNegative(b.exp,\"divide\"));}else{// e.g. x ^ -1 -> x^-1\npow=new Pow(b,Num.Div);}if(a instanceof Int&&a.n===1){// e.g. 1 / x -> x^-1\nreturn[pow];}else{// e.g. 2 / x -> 2*x^-1\nreturn[a,pow];}}};if(left instanceof Mul){var divided=divide(_.last(left.terms),right);return new Mul(_.initial(left.terms).concat(divided));}else{var divided=divide(left,right);return new Mul(divided).flatten();}},// fold negative signs into numbers if possible\n// negative signs are not the same as multiplying by negative one!\n// e.g. -x      ->  -1*x    simplified\n// e.g. -2*x    ->  -2*x    simplified\n// e.g. -x*2    ->  -1*x*2  not simplified -> x*-2 simplified\n// e.g. -1*x*2  ->  -1*x*2  not simplified\n// also fold multiplicative terms into open Trig and Log nodes\n// e.g. (sin x)*x -> sin(x)*x\n// e.g. sin(x)*x -> sin(x)*x\n// e.g. sin(x)*(x) -> sin(x)*x\n// e.g. sin(x)*sin(y) -> sin(x)*sin(y)\nfold:function fold(expr){if(expr instanceof Mul){// assuming that this will be second to last\nvar trigLog=_.find(_.initial(expr.terms),function(term){return(term instanceof Trig||term instanceof Log)&&term.hints.open;});var index=_.indexOf(expr.terms,trigLog);if(trigLog){var last=_.last(expr.terms);if(trigLog.hints.parens||last.hints.parens||last.has(Trig)||last.has(Log)){trigLog.hints.open=false;}else{var newTrigLog;if(trigLog instanceof Trig){newTrigLog=Trig.create([trigLog.type,trigLog.exp],Mul.createOrAppend(trigLog.arg,last).fold());}else{newTrigLog=Log.create(trigLog.base,Mul.createOrAppend(trigLog.power,last).fold());}if(index===0){return newTrigLog;}else{return new Mul(expr.terms.slice(0,index).concat(newTrigLog)).fold();}}}var partitioned=expr.partition();var numbers=partitioned[0].terms;var pos=function pos(num){return num.n>0;};var neg=function neg(num){return num.n===-1&&num.hints.negate;};var posOrNeg=function posOrNeg(num){return pos(num)||neg(num);};if(numbers.length>1&&_.some(numbers,neg)&&_.some(numbers,pos)&&_.every(numbers,posOrNeg)){var firstNeg=_.indexOf(expr.terms,_.find(expr.terms,neg));var firstNum=_.indexOf(expr.terms,_.find(expr.terms,pos));// e.g. -x*2 -> x*-2\nif(firstNeg<firstNum){return expr.replace(firstNum,expr.terms[firstNum].negate()).remove(firstNeg);}}}// in all other cases, make no change\nreturn expr;}});/* exponentiation */function Pow(base,exp){this.base=base;this.exp=exp;}Pow.prototype=new Expr();_.extend(Pow.prototype,{func:Pow,args:function args(){return[this.base,this.exp];},eval:function _eval(vars,options){var evaledBase=this.base.eval(vars,options);var evaledExp=this.exp.eval(vars,options);// Math.pow unequivocally returns NaN when provided with both a\n// negative base and a fractional exponent. However, in some cases, we\n// know that our exponent is actually valid for use with negative\n// bases (e.g., (-5)^(1/3)).\n//\n// Here, we explicitly check for such cases. We really only handle a\n// limited subset (by requiring that the exponent is rational with an\n// odd denominator), but it's still useful.\n//   See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\nif(evaledBase<0){var simplifiedExp=this.exp.simplify();// If Float, convert to a Rational to enable the logic below\nif(simplifiedExp instanceof Float){var num=simplifiedExp.n;var decimals=(num-num.toFixed()).toString().length-2;var denominator=Math.pow(10,decimals);var rationalExp=new Rational(num*denominator,denominator);simplifiedExp=rationalExp.simplify();}if(simplifiedExp instanceof Rational){var oddDenominator=Math.abs(simplifiedExp.d)%2===1;if(oddDenominator){var oddNumerator=Math.abs(simplifiedExp.n)%2===1;var sign=oddNumerator?-1:1;return sign*Math.pow(-1*evaledBase,evaledExp);}}}return Math.pow(evaledBase,evaledExp);},getUnits:function getUnits(){return this.base.getUnits().map(function(unit){return{unit:unit.unit,pow:unit.pow*this.exp.n};}.bind(this));},codegen:function codegen(){return\"Math.pow(\"+this.base.codegen()+\", \"+this.exp.codegen()+\")\";},print:function print(){var base=this.base.print();if(this.base instanceof Seq||this.base instanceof Pow){base=\"(\"+base+\")\";}return base+\"^(\"+this.exp.print()+\")\";},tex:function tex(){if(this.isDivide()){// e.g. x ^ -1 w/hint -> 1/x\nreturn\"\\\\frac{1}{\"+this.asDivide().tex()+\"}\";}else if(this.isRoot()){if(this.exp.n!==1){error(\"Node marked with hint 'root' does not have exponent \"+\"of form 1/x.\");}if(this.exp.d===2){// e.g. x ^ 1/2 w/hint -> sqrt{x}\nreturn\"\\\\sqrt{\"+this.base.tex()+\"}\";}else{// e.g. x ^ 1/y w/hint -> sqrt[y]{x}\nreturn\"\\\\sqrt[\"+this.exp.d+\"]{\"+this.base.tex()+\"}\";}}else if(this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&this.exp.isSimple()&&this.exp.eval()>=0){// e.g sin(x) ^ 2 -> sin^2(x)\nvar split=this.base.tex({split:true});return split[0]+\"^{\"+this.exp.tex()+\"}\"+split[1];}else{// e.g. x ^ y -> x^y\nvar base=this.base.tex();if(this.base instanceof Seq||this.base instanceof Pow||this.base instanceof Num&&!this.base.isSimple()){// e.g. a+b ^ c -> (a+b)^c\nbase=\"(\"+base+\")\";}else if(this.base instanceof Trig||this.base instanceof Log){// e.g. ln(x) ^ 2 -> [ln(x)]^2\nbase=\"[\"+base+\"]\";}return base+\"^{\"+this.exp.tex()+\"}\";}},needsExplicitMul:function needsExplicitMul(){return this.isRoot()?false:this.base.needsExplicitMul();},expand:function expand(){var pow=this.recurse(\"expand\");if(pow.base instanceof Mul){// e.g. (ab)^c -> a^c*b^c\nvar terms=_.map(pow.base.terms,function(term){return new Pow(term,pow.exp);});return new Mul(terms).expand();}else if(pow.base instanceof Add&&pow.exp instanceof Int&&pow.exp.abs().eval()>1){// e.g. (a+b)^2 -> a*a+a*b+a*b+b*b\n// e.g. (a+b)^-2 -> (a*a+a*b+a*b+b*b)^-1\nvar positive=pow.exp.eval()>0;var n=pow.exp.abs().eval();var signed=function signed(mul){return positive?mul:new Pow(mul,Num.Div);};// compute and cache powers of 2 up to n\nvar cache={1:pow.base};for(var i=2;i<=n;i*=2){var mul=new Mul(cache[i/2],cache[i/2]);cache[i]=mul.expand().collect();}// if n is a power of 2, you're done!\nif(_.has(cache,n)){return signed(cache[n]);}// otherwise decompose n into powers of 2 ...\nvar indices=_.map(n.toString(2).split(\"\"),function(str,i,list){return Number(str)*Math.pow(2,list.length-i-1);});indices=_.without(indices,0);// ... then combine\nvar mul=new Mul(_.pick(cache,indices)).expand().collect();return signed(mul);}else if(pow.exp instanceof Add){// DEFINITELY want behind super-simplify() flag\n// e.g. x^(a+b) -> x^a*x^b\nvar terms=_.map(pow.exp.terms,function(term){return new Pow(pow.base,term).expand();});return new Mul(terms).expand();}else{return pow;}},factor:function factor(){var pow=this.recurse(\"factor\");if(pow.base instanceof Mul){var terms=_.map(pow.base.terms,function(term){if(term instanceof Int&&pow.exp.equals(Num.Div)){// Anything that can be a Rational should be a Rational\n// e.g. 2^(-1) -> 1/2\nreturn new Rational(1,term.n);}else{return new Pow(term,pow.exp);}});return new Mul(terms);}else{return pow;}},collect:function collect(options){if(this.base instanceof Pow){// collect this first to avoid having to deal with float precision\n// e.g. sqrt(2)^2 -> 2, not 2.0000000000000004\n// e.g. (x^y)^z -> x^(yz)\nvar base=this.base.base;var exp=Mul.createOrAppend(this.base.exp,this.exp);return new Pow(base,exp).collect(options);}var pow=this.recurse(\"collect\",options);var isSimilarLog=function isSimilarLog(term){return term instanceof Log&&term.base.equals(pow.base);};if(pow.exp instanceof Num&&pow.exp.eval()===0){// e.g. x^0 -> 1\nreturn Num.One;}else if(pow.exp instanceof Num&&pow.exp.eval()===1){// e.g. x^1 -> x\nreturn pow.base;}else if(isSimilarLog(pow.exp)){// e.g. b^(log_b(x)) -> x\nreturn pow.exp.power;}else if(pow.exp instanceof Mul&&_.any(pow.exp.terms,isSimilarLog)){// e.g. b^(2*y*log_b(x)) -> x^(2*y)\nvar log=_.find(pow.exp.terms,isSimilarLog);var base=log.power;var exp=pow.exp.remove(log).flatten();return new Pow(base,exp).collect(options);}else if(pow.base instanceof Num&&pow.exp instanceof Num){// TODO(alex): Consider encapsualting this logic (and similar logic\n// elsewhere) into a separate Decimal class for user-entered floats\nif(options&&options.preciseFloats){// Avoid creating an imprecise float\n// e.g. 23^1.5 -> 12167^0.5, not ~110.304\n// If you take the root as specified by the denominator and\n// end up with more digits after the decimal point,\n// the result is imprecise. This works for rationals as well\n// as floats, but ideally rationals should be pre-processed\n// e.g. (1/27)^(1/3) -> 1/3 to avoid most cases.\n// TODO(alex): Catch such cases and avoid converting to floats.\nvar exp=pow.exp.asRational();var decimalsInBase=pow.base.getDecimalPlaces();var root=new Pow(pow.base,new Rational(1,exp.d));var decimalsInRoot=root.collect().getDecimalPlaces();if(decimalsInRoot>decimalsInBase){// Collecting over this denominator would result in an\n// imprecise float, so avoid doing so.\nvar newBase=new Pow(pow.base,new Int(exp.n)).collect();return new Pow(newBase,new Rational(1,exp.d));}}// e.g. 4^1.5 -> 8\nreturn pow.base.raiseToThe(pow.exp,options);}else{return pow;}},// checks whether this Pow represents user-entered division\nisDivide:function isDivide(){var isDiv=function isDiv(arg){return arg instanceof Num&&arg.hints.divide;};return isDiv(this.exp)||this.exp instanceof Mul&&_.any(this.exp.terms,isDiv);},// assuming this Pow represents user-entered division, returns the denominator\nasDivide:function asDivide(){if(this.exp instanceof Num){if(this.exp.eval()===-1){return this.base;}else{var negated=this.exp.negate();negated.hints=_.clone(this.exp.hints);negated.hints.divide=false;return new Pow(this.base,negated);}}else if(this.exp instanceof Mul){return new Pow(this.base,this.exp.factorOut());}else{error(\"called asDivide() on an Expr that wasn't a Num or Mul\");}},isRoot:function isRoot(){return this.exp instanceof Rational&&this.exp.hints.root;},isSquaredTrig:function isSquaredTrig(){return this.base instanceof Trig&&!this.base.isInverse()&&this.exp instanceof Num&&this.exp.eval()===2;},// extract whatever denominator makes sense, ignoring hints\n// if negative exponent, will recursively include the base's denominator as well\ngetDenominator:function getDenominator(){if(this.exp instanceof Num&&this.exp.eval()===-1){return Mul.createOrAppend(this.base,this.base.getDenominator()).flatten();}else if(this.exp.isNegative()){var pow=new Pow(this.base,Mul.handleNegative(this.exp).collect());return Mul.createOrAppend(pow,pow.collect().getDenominator()).flatten();}else if(this.base instanceof Num){return new Pow(this.base.getDenominator(),this.exp).collect();}else{return Num.One;}},findGCD:function findGCD(factor){var base,exp;if(factor instanceof Pow){base=factor.base;exp=factor.exp;}else{base=factor;exp=Num.One;}// GCD is only relevant if same base\nif(this.base.equals(base)){if(this.exp.equals(exp)){// exact match\n// e.g. GCD(x^y^z, x^y^z) -> x^y^z\nreturn this;}else if(this.exp instanceof Num&&exp instanceof Num){// two numerical exponents\n// e.g. GCD(x^3, x^2) -> x^2\nreturn new Pow(this.base,Num.min(this.exp,exp)).collect();}else if(this.exp instanceof Num||exp instanceof Num){// one numerical exponent\n// e.g. GCD(x^2, x^y) -> 1\nreturn Num.One;}var expA=this.exp.asMul().partition();var expB=exp.asMul().partition();if(expA[1].equals(expB[1])){// exponents match except for coefficient\n// e.g. GCD(x^3y, x^y) -> x^y\nvar coefficient=Num.min(expA[0].reduce(),expB[0].reduce());var mul=new Mul(coefficient,expA[1].flatten()).flatten();return new Pow(base,mul).collect();}}return Num.One;},isPositive:function isPositive(){if(this.base.isPositive()){return true;}var exp=this.exp.simplify();return exp instanceof Int&&exp.eval()%2===0;},asPositiveFactor:function asPositiveFactor(){if(this.isPositive()){return this;}else{var exp=this.exp.simplify();if(exp instanceof Int){var n=exp.eval();if(n>2){// e.g. x^3 -> x^2\nreturn new Pow(this.base,new Int(n-1));}else if(n<-2){// e.g. x^-3 -> x^-2\nreturn new Pow(this.base,new Int(n+1));}}return Num.One;}}});_.extend(Pow,{sqrt:function sqrt(arg){return new Pow(arg,Num.Sqrt);},nthroot:function nthroot(radicand,degree){var exp=Mul.fold(Mul.handleDivide(new Int(1),degree));// FIXME(johnsullivan): If oneOverDegree ends up being a pow object,\n//     this \"root\" hint is lost between here and when tex() is called.\nreturn new Pow(radicand,exp.addHint(\"root\"));}});/* logarithm */function Log(base,power){this.base=base;this.power=power;}Log.prototype=new Expr();_.extend(Log.prototype,{func:Log,args:function args(){return[this.base,this.power];},eval:function _eval(vars,options){return Math.log(this.power.eval(vars,options))/Math.log(this.base.eval(vars,options));},codegen:function codegen(){return\"(Math.log(\"+this.power.codegen()+\") / Math.log(\"+this.base.codegen()+\"))\";},print:function print(){var power=\"(\"+this.power.print()+\")\";if(this.isNatural()){return\"ln\"+power;}else{return\"log_(\"+this.base.print()+\") \"+power;}},tex:function tex(){var power=\"(\"+this.power.tex()+\")\";if(this.isNatural()){return\"\\\\ln\"+power;}else{return\"\\\\log_{\"+this.base.tex()+\"}\"+power;}},collect:function collect(options){var log=this.recurse(\"collect\",options);if(log.power instanceof Num&&log.power.eval()===1){// e.g. ln(1) -> 0\nreturn Num.Zero;}else if(log.base.equals(log.power)){// e.g. log_b(b) -> 1\nreturn Num.One;}else if(log.power instanceof Pow&&log.power.base.equals(log.base)){// e.g. log_b(b^x) -> x\nreturn log.power.exp;}else{return log;}},expand:function expand(){var log=this.recurse(\"expand\");if(log.power instanceof Mul){// might want behind super-simplify() flag\n// e.g. ln(xy) -> ln(x) + ln(y)\nvar terms=_.map(log.power.terms,function(term){// need to expand again in case new log powers are Pows\nreturn new Log(log.base,term).expand();});return new Add(terms);}else if(log.power instanceof Pow){// e.g. ln(x^y) -> y*ln(x)\nreturn new Mul(log.power.exp,new Log(log.base,log.power.base).expand()).flatten();}else if(!log.isNatural()){// e.g. log_b(x) -> ln(x)/ln(b)\nreturn Mul.handleDivide(new Log(Const.e,log.power),new Log(Const.e,log.base));}else{return log;}},hints:_.extend(Log.prototype.hints,{open:false}),isPositive:function isPositive(){var log=this.collect();if(log.base instanceof Num&&log.power instanceof Num){return this.eval()>0;}else{return false;}},needsExplicitMul:function needsExplicitMul(){return false;},isNatural:function isNatural(){return this.base.equals(Const.e);}});_.extend(Log,{natural:function natural(){return Const.e;},common:function common(){return Num.Ten;},create:function create(base,power){var log=new Log(base,power);if(!power.hints.parens){log=log.addHint(\"open\");}return log;}});/* trigonometric functions */function Trig(type,arg){this.type=type;this.arg=arg;}Trig.prototype=new Expr();_.extend(Trig.prototype,{func:Trig,args:function args(){return[this.type,this.arg];},functions:{sin:{eval:Math.sin,codegen:\"Math.sin((\",tex:\"\\\\sin\",expand:function expand(){return this;}},cos:{eval:Math.cos,codegen:\"Math.cos((\",tex:\"\\\\cos\",expand:function expand(){return this;}},tan:{eval:Math.tan,codegen:\"Math.tan((\",tex:\"\\\\tan\",expand:function expand(){return Mul.handleDivide(Trig.sin(this.arg),Trig.cos(this.arg));}},csc:{eval:function _eval(arg){return 1/Math.sin(arg);},codegen:\"(1/Math.sin(\",tex:\"\\\\csc\",expand:function expand(){return Mul.handleDivide(Num.One,Trig.sin(this.arg));}},sec:{eval:function _eval(arg){return 1/Math.cos(arg);},codegen:\"(1/Math.cos(\",tex:\"\\\\sec\",expand:function expand(){return Mul.handleDivide(Num.One,Trig.cos(this.arg));}},cot:{eval:function _eval(arg){return 1/Math.tan(arg);},codegen:\"(1/Math.tan(\",tex:\"\\\\cot\",expand:function expand(){return Mul.handleDivide(Trig.cos(this.arg),Trig.sin(this.arg));}},arcsin:{eval:Math.asin,codegen:\"Math.asin((\",tex:\"\\\\arcsin\"},arccos:{eval:Math.acos,codegen:\"Math.acos((\",tex:\"\\\\arccos\"},arctan:{eval:Math.atan,codegen:\"Math.atan((\",tex:\"\\\\arctan\"},arccsc:{eval:function _eval(arg){return Math.asin(1/arg);},codegen:\"Math.asin(1/(\",tex:\"\\\\operatorname{arccsc}\"},arcsec:{eval:function _eval(arg){return Math.acos(1/arg);},codegen:\"Math.acos(1/(\",tex:\"\\\\operatorname{arcsec}\"},arccot:{eval:function _eval(arg){return Math.atan(1/arg);},codegen:\"Math.atan(1/(\",tex:\"\\\\operatorname{arccot}\"},sinh:{eval:function _eval(arg){return(Math.exp(arg)-Math.exp(-arg))/2;},codegen:function codegen(argStr){return\"((Math.exp(\"+argStr+\") - Math.exp(-(\"+argStr+\"))) / 2)\";},tex:\"\\\\sinh\",expand:function expand(){return this;}},cosh:{eval:function _eval(arg){return(Math.exp(arg)+Math.exp(-arg))/2;},codegen:function codegen(argStr){return\"((Math.exp(\"+argStr+\") + Math.exp(-(\"+argStr+\"))) / 2)\";},tex:\"\\\\cosh\",expand:function expand(){return this;}},tanh:{eval:function _eval(arg){return(Math.exp(arg)-Math.exp(-arg))/(Math.exp(arg)+Math.exp(-arg));},codegen:function codegen(argStr){return\"(\"+\"(Math.exp(\"+argStr+\") - Math.exp(-(\"+argStr+\")))\"+\" / \"+\"(Math.exp(\"+argStr+\") + Math.exp(-(\"+argStr+\")))\"+\")\";},tex:\"\\\\tanh\",expand:function expand(){return Mul.handleDivide(Trig.sinh(this.arg),Trig.cosh(this.arg));}},csch:{eval:function _eval(arg){return 2/(Math.exp(arg)-Math.exp(-arg));},codegen:function codegen(argStr){return\"(2 / (Math.exp(\"+argStr+\") - Math.exp(-(\"+argStr+\"))))\";},tex:\"\\\\csch\",expand:function expand(){return Mul.handleDivide(Num.One,Trig.sinh(this.arg));}},sech:{eval:function _eval(arg){return 2/(Math.exp(arg)+Math.exp(-arg));},codegen:function codegen(argStr){return\"(2 / (Math.exp(\"+argStr+\") + Math.exp(-(\"+argStr+\"))))\";},tex:\"\\\\sech\",expand:function expand(){return Mul.handleDivide(Num.One,Trig.cosh(this.arg));}},coth:{eval:function _eval(arg){return(Math.exp(arg)+Math.exp(-arg))/(Math.exp(arg)-Math.exp(-arg));},codegen:function codegen(argStr){return\"(\"+\"(Math.exp(\"+argStr+\") + Math.exp(-(\"+argStr+\")))\"+\" / \"+\"(Math.exp(\"+argStr+\") - Math.exp(-(\"+argStr+\")))\"+\")\";},tex:\"\\\\coth\",expand:function expand(){return Mul.handleDivide(Trig.cosh(this.arg),Trig.sinh(this.arg));}}},isEven:function isEven(){return _.contains([\"cos\",\"sec\"],this.type);},isInverse:function isInverse(){return this.type.indexOf(\"arc\")===0;},isBasic:function isBasic(){return _.contains([\"sin\",\"cos\"],this.type);},eval:function _eval(vars,options){var func=this.functions[this.type].eval;var arg=this.arg.eval(vars,options);return func(arg);},codegen:function codegen(){var func=this.functions[this.type].codegen;if(typeof func===\"function\"){return func(this.arg.codegen());}else if(typeof func===\"string\"){return func+this.arg.codegen()+\"))\";}else{throw new Error(\"codegen not implemented for \"+this.type);}},print:function print(){return this.type+\"(\"+this.arg.print()+\")\";},tex:function tex(options){var func=this.functions[this.type].tex;var arg=\"(\"+this.arg.tex()+\")\";return options&&options.split?[func,arg]:func+arg;},hints:_.extend(Trig.prototype.hints,{open:false}),isPositive:function isPositive(){var trig=this.collect();if(trig.arg instanceof Num){return this.eval()>0;}else{return false;}},completeParse:function completeParse(){if(this.exp){var pow=new Pow(this,this.exp);this.exp=undefined;return pow;}else{return this;}},// TODO(alex): does every new node type need to redefine these?\nneedsExplicitMul:function needsExplicitMul(){return false;},expand:function expand(){var trig=this.recurse(\"expand\");if(!trig.isInverse()){// e.g. tan(x) -> sin(x)/cos(x)\nvar expand=trig.functions[trig.type].expand;return _.bind(expand,trig)();}else{return trig;}},collect:function collect(options){var trig=this.recurse(\"collect\",options);if(!trig.isInverse()&&trig.arg.isNegative()){var arg;if(trig.arg instanceof Num){arg=trig.arg.abs();}else{arg=Mul.handleDivide(trig.arg,Num.Neg).collect(options);}if(trig.isEven()){// e.g. cos(-x) -> cos(x)\nreturn new Trig(trig.type,arg);}else{// e.g. sin(-x) -> -sin(x)\nreturn new Mul(Num.Neg,new Trig(trig.type,arg));}}else{return trig;}}});_.extend(Trig,{create:function create(pair,arg){var type=pair[0];var exp=pair[1];if(exp&&exp.equals(Num.Neg)){// e.g. sin^-1(x) -> arcsin(x)\ntype=\"arc\"+type;exp=undefined;}var trig=new Trig(type,arg);if(!arg.hints.parens){trig=trig.addHint(\"open\");}if(exp){trig.exp=exp;}return trig;},sin:function sin(arg){return new Trig(\"sin\",arg);},cos:function cos(arg){return new Trig(\"cos\",arg);},sinh:function sinh(arg){return new Trig(\"sinh\",arg);},cosh:function cosh(arg){return new Trig(\"cosh\",arg);}});function Abs(arg){this.arg=arg;}Abs.prototype=new Expr();_.extend(Abs.prototype,{func:Abs,args:function args(){return[this.arg];},eval:function _eval(vars,options){return Math.abs(this.arg.eval(vars,options));},codegen:function codegen(){return\"Math.abs(\"+this.arg.codegen()+\")\";},print:function print(){return\"abs(\"+this.arg.print()+\")\";},tex:function tex(){return\"\\\\left|\"+this.arg.tex()+\"\\\\right|\";},collect:function collect(options){var abs=this.recurse(\"collect\",options);if(abs.arg.isPositive()){// e.g. |2^x| -> 2^x\nreturn abs.arg;}else if(abs.arg instanceof Num){// e.g. |-2| -> 2\nreturn abs.arg.abs();}else if(abs.arg instanceof Mul){// e.g. |-2*pi*x| -> 2*pi*|x|\nvar terms=_.groupBy(abs.arg.terms,function(term){if(term.isPositive()){return\"positive\";}else if(term instanceof Num){return\"number\";}else{return\"other\";}});var positives=terms.positive.concat(_.invoke(terms.number,\"abs\"));if(terms.other.length){positives.push(new Abs(new Mul(terms.other).flatten()));}return new Mul(positives).flatten();}else{return abs;}},// this should definitely be behind a super-simplify flag\nexpand:function expand(){var abs=this.recurse(\"expand\");if(abs.arg instanceof Mul){// e.g. |xyz| -> |x|*|y|*|z|\nvar terms=_.map(abs.arg.terms,function(term){return new Abs(term);});return new Mul(terms);}else{return abs;}},isPositive:function isPositive(){return true;}});/* equation */function Eq(left,type,right){this.left=left;this.type=type;this.right=right;}Eq.prototype=new Expr();_.extend(Eq.prototype,{func:Eq,args:function args(){return[this.left,this.type,this.right];},needsExplicitMul:function needsExplicitMul(){return false;},print:function print(){return this.left.print()+this.type+this.right.print();},signs:{\"=\":\" = \",\"<\":\" < \",\">\":\" > \",\"<>\":\" \\\\ne \",\"<=\":\" \\\\le \",\">=\":\" \\\\ge \"},tex:function tex(){return this.left.tex()+this.signs[this.type]+this.right.tex();},normalize:function normalize(){var eq=this.recurse(\"normalize\");if(_.contains([\">\",\">=\"],eq.type)){// inequalities should have the smaller side on the left\nreturn new Eq(eq.right,eq.type.replace(\">\",\"<\"),eq.left);}else{return eq;}},// convert this equation to an expression set to zero\n// the expression is normalized to a canonical form\n// e.g. y/2=x/4 -> y/2-x/4(=0) -> 2y-x(=0)\n// unless unfactored is specified, will then divide through\nasExpr:function asExpr(unfactored){var isZero=function isZero(expr){return expr instanceof Num&&expr.isSimple()&&expr.eval()===0;};// first convert to a sequence of additive terms\nvar terms=[];if(this.left instanceof Add){terms=_.clone(this.left.terms);}else if(!isZero(this.left)){terms=[this.left];}if(this.right instanceof Add){terms=terms.concat(this.right.negate().terms);}else if(!isZero(this.right)){terms.push(this.right.negate());}var isInequality=!this.isEquality();// Collect over each term individually to transform simple expressions\n// into numbers that might have denominators, taking into account\n// float precision. We have to be very careful to not introduce any\n// irrational floats before asExpr() returns, because by definition\n// they do not have exact denominators...\nterms=_.invoke(terms,\"collect\",{preciseFloats:true});// ...and we multiply through by every denominator.\nfor(var i=0;i<terms.length;i++){var denominator=terms[i].getDenominator();// Can't multiply inequalities by non 100% positive factors\nif(isInequality&&!denominator.isPositive()){denominator=denominator.asPositiveFactor();}if(!denominator.equals(Num.One)){terms=_.map(terms,function(term){return Mul.createOrAppend(term,denominator).simplify({once:true,preciseFloats:true});});}}var add=new Add(terms).flatten();return unfactored?add:this.divideThrough(add);},// divide through by every common factor in the expression\n// e.g. 2y-4x(=0) -> y-2x(=0)\n// TODO(alex): Make it an option to only divide by variables/expressions\n// guaranteed to be nonzero\ndivideThrough:function divideThrough(expr){var isInequality=!this.isEquality();var simplified=expr.simplify({once:true});var factored=simplified.factor({keepNegative:isInequality});if(!(factored instanceof Mul)){return expr;}var terms=factored.terms;var isAdd=function isAdd(term){return term instanceof Add;};var hasVar=function hasVar(term){return!!term.getVars().length;};var isOne=function isOne(term){return term.equals(Num.One);};var grouped=_.groupBy(terms,isAdd);var adds=grouped[true]||[];var others=grouped[false]||[];if(adds.length&&this.isEquality()){// keep only Adds\n// e.g. 2xy(z+1)(=0) -> z+1(=0)\nreturn new Mul(adds).flatten();}var denominator=others;if(!adds.length){// if no Adds, keep all variable terms to preserve meaning\n// e.g. 42xyz(=0) -> xyz(=0)\ndenominator=_.reject(denominator,hasVar);}if(isInequality){// can't divide inequalities by non 100% positive factors\n// e.g. 42x^2y(z+1)(=0) -> y(z+1)(=0)\ndenominator=_.invoke(denominator,\"asPositiveFactor\");}// don't need to divide by one\ndenominator=_.reject(denominator,isOne);denominator=_.map(denominator,function(term){return new Pow(term,Num.Div);});var dividedResult=new Mul(terms.concat(denominator)).collect();// If the end result is the same as the original factoring,\n// rollback the factoring and discard all intermediate steps.\nif(dividedResult.equals(factored)){return simplified;}else{return dividedResult;}},isEquality:function isEquality(){return _.contains([\"=\",\"<>\"],this.type);},compare:function compare(other){// expression comparisons are handled by Expr.compare()\nif(!(other instanceof Eq)){return false;}var eq1=this.normalize();var eq2=other.normalize();if(eq1.type!==eq2.type){return false;}// need to collect to properly factor out common factors\n// e.g x+2x=6 -> 3x=6 -> 3x-6(=0) -> x-2(=0)\nvar expr1=eq1.divideThrough(eq1.asExpr(/* unfactored */true).collect());var expr2=eq2.divideThrough(eq2.asExpr(/* unfactored */true).collect());if(eq1.isEquality()){// equals and not-equals can be subtracted either way\nreturn expr1.compare(expr2)||expr1.compare(Mul.handleNegative(expr2));}else{return expr1.compare(expr2);}},// should only be done after compare() returns true to avoid false positives\nsameForm:function sameForm(other){var eq1=this.normalize();var eq2=other.normalize();var same=eq1.left.sameForm(eq2.left)&&eq1.right.sameForm(eq2.right);if(eq1.isEquality()){// equals and not-equals can be commutative with respect to the sign\nreturn same||eq1.left.sameForm(eq2.right)&&eq1.right.sameForm(eq2.left);}else{return same;}},// we don't want to override collect because it would turn y=x into y-x(=0)\n// instead, we ask if the equation was in that form, would it be simplified?\nisSimplified:function isSimplified(){var expr=this.asExpr(/* unfactored */true);var simplified=this.divideThrough(expr).simplify();return expr.equals(simplified)&&this.left.isSimplified()&&this.right.isSimplified();}});_.extend(Eq.prototype,{// Assumptions: Expression is of the form a+bx, and we solve for x\nsolveLinearEquationForVariable:function solveLinearEquationForVariable(variable){var expr=this.asExpr();if(!expr.is(Add)||expr.terms.length!==2){throw new Error(\"Can only handle linear equations of the form \"+\"a + bx (= 0)\");}var hasVar=function hasVar(term){return term.has(Var)&&_.contains(term.getVars(),variable.symbol);};var a,b;if(hasVar(expr.terms[0])){a=Mul.handleNegative(expr.terms[1]);b=Mul.handleDivide(expr.terms[0],variable);}else{a=Mul.handleNegative(expr.terms[0]);b=Mul.handleDivide(expr.terms[1],variable);}return Mul.handleDivide(a,b).simplify();}});/* abstract symbol node */function Symbol(){}Symbol.prototype=new Expr();_.extend(Symbol.prototype,{needsExplicitMul:function needsExplicitMul(){return false;},findGCD:function findGCD(factor){if(factor instanceof Symbol||factor instanceof Num){return this.equals(factor)?this:Num.One;}else{return factor.findGCD(this);}}});/* function variable */function Func(symbol,arg){this.symbol=symbol;this.arg=arg;}Func.prototype=new Symbol();_.extend(Func.prototype,{func:Func,args:function args(){return[this.symbol,this.arg];},print:function print(){return this.symbol+\"(\"+this.arg.print()+\")\";},tex:function tex(){return this.symbol+\"(\"+this.arg.tex()+\")\";},eval:function _eval(vars,options){var arg=this.arg;var func=vars[this.symbol];var newVars=_.extend(_.clone(vars),{x:arg.eval(vars,options)});var parsedFunc=KAS.parse(func,options);if(parsedFunc.parsed){return parsedFunc.expr.eval(newVars,options);}// If parsedFunc isn't actually parsed, return its error\nreturn parsedFunc;},codegen:function codegen(){return'vars[\"'+this.symbol+'\"]('+this.arg.codegen()+')';},getUnits:function getUnits(){return this.arg.getUnits();},getVars:function getVars(excludeFunc){if(excludeFunc){return this.arg.getVars();}else{return _.union(this.arg.getVars(),[this.symbol]).sort();}},getConsts:function getConsts(){return this.arg.getConsts();}});/* variable */function Var(symbol,subscript){this.symbol=symbol;this.subscript=subscript;}Var.prototype=new Symbol();_.extend(Var.prototype,{func:Var,args:function args(){return[this.symbol,this.subscript];},exprArgs:function exprArgs(){return[];},recurse:function recurse(){return this;},print:function print(){var sub=\"\";if(this.subscript){sub=\"_(\"+this.subscript.print()+\")\";}return this.symbol+sub;},// Provide a way to easily evalate expressions with the common case,\n// subscripts that consist of a single number or symbol e.g. x_a or x_42\nprettyPrint:function prettyPrint(){var sub=this.subscript;if(sub&&(sub instanceof Num||sub instanceof Symbol)){return this.symbol+\"_\"+sub.print();}else{return this.print();}},tex:function tex(){var sub=\"\";if(this.subscript){sub=\"_{\"+this.subscript.tex()+\"}\";}var prefix=this.symbol.length>1?\"\\\\\":\"\";return prefix+this.symbol+sub;},repr:function repr(){return\"Var(\"+this.print()+\")\";},eval:function _eval(vars,options){return vars[this.prettyPrint()];},codegen:function codegen(){return'vars[\"'+this.prettyPrint()+'\"]';},getVars:function getVars(){return[this.prettyPrint()];},isPositive:function isPositive(){return false;}});/* constant */function Const(symbol){this.symbol=symbol;}Const.prototype=new Symbol();_.extend(Const.prototype,{func:Const,args:function args(){return[this.symbol];},recurse:function recurse(){return this;},eval:function _eval(vars,options){if(this.symbol===\"pi\"){return Math.PI;}else if(this.symbol===\"e\"){return Math.E;}},codegen:function codegen(){if(this.symbol===\"pi\"){return\"Math.PI\";}else if(this.symbol===\"e\"){return\"Math.E\";}},print:function print(){return this.symbol;},tex:function tex(){if(this.symbol===\"pi\"){return\"\\\\pi \";}else if(this.symbol===\"e\"){return\"e\";}},isPositive:function isPositive(){return this.eval()>0;},abs:function abs(){if(this.eval()>0){return this;}else{return Mul.handleNegative(this);}},getConsts:function getConsts(){return[this.print()];}});Const.e=new Const(\"e\");Const.pi=new Const(\"pi\");/* abstract number node */function Num(){}Num.prototype=new Expr();_.extend(Num.prototype,{repr:function repr(){return this.print();},strip:function strip(){return this.abs();},recurse:function recurse(){return this;},codegen:function codegen(){return this.print();},// takes another Num and returns a new Num\nadd:abstract,mul:abstract,// returns this Num's additive inverse\nnegate:abstract,isSubtract:function isSubtract(){return this.hints.subtract;},// return the absolute value of the number\nabs:abstract,needsExplicitMul:function needsExplicitMul(){return true;},findGCD:abstract,isPositive:function isPositive(){return this.eval()>0;},isNegative:function isNegative(){return this.eval()<0;},asPositiveFactor:function asPositiveFactor(){return this.isPositive()?this:this.abs();},// hints for interpreting and rendering user input\nhints:_.extend(Num.prototype.hints,{negate:false,subtract:false,divide:false,root:false,fraction:false,entered:false}),// whether a number is considered simple (one term)\n// e.g. for reals, ints and floats are simple\nisSimple:abstract,// Based on http://stackoverflow.com/a/10454560/2571482\ngetDecimalPlaces:function getDecimalPlaces(){var match=(\"\"+this.n).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);if(match){return Math.max(0,// Number of digits right of decimal point\n(match[1]?match[1].length:0)-(// Adjust for scientific notation\nmatch[2]?+match[2]:0));}else{return 0;}},asRational:abstract});/* rational number (n: numerator, d: denominator) */function Rational(numerator,denominator){var n=numerator;var d=denominator;if(d<0){n=-n;d=-d;}this.n=n;this.d=d;}Rational.prototype=new Num();_.extend(Rational.prototype,{func:Rational,args:function args(){return[this.n,this.d];},eval:function _eval(){return this.n/this.d;},print:function print(){return this.n.toString()+\"/\"+this.d.toString();},tex:function tex(){var tex=\"\\\\frac{\"+Math.abs(this.n).toString()+\"}{\"+this.d.toString()+\"}\";return this.n<0?\"-\"+tex:tex;},add:function add(num,options){if(num instanceof Rational){return new Rational(this.n*num.d+this.d*num.n,this.d*num.d).collect();}else{return num.add(this,options);}},mul:function mul(num,options){if(num instanceof Rational){return new Rational(this.n*num.n,this.d*num.d).collect();}else{return num.mul(this,options);}},collect:function collect(){var gcd=Num.findGCD(this.n,this.d);var n=this.n/gcd;var d=this.d/gcd;if(d===1){return new Int(n);}else{return new Rational(n,d);}},negate:function negate(){return new Rational(-this.n,this.d);},abs:function abs(){return new Rational(Math.abs(this.n),this.d);},findGCD:function findGCD(factor){// Attempt to factor out common numerators and denominators to return\n// a Rational instead of a Float\nif(factor instanceof Rational){// For more background, see\n// http://math.stackexchange.com/questions/151081/gcd-of-rationals\nvar numerator=Num.findGCD(this.n*factor.d,factor.n*this.d);var denominator=this.d*factor.d;// Create the rational, then call .collect() to simplify it\nreturn new Rational(numerator,denominator).collect();}else if(factor instanceof Int){return new Rational(Num.findGCD(this.n,factor.n),this.d);}else{return factor.findGCD(this);}},// for now, assuming that exp is a Num\nraiseToThe:function raiseToThe(exp){if(exp instanceof Int){var positive=exp.eval()>0;var abs=exp.abs().eval();var n=Math.pow(this.n,abs);var d=Math.pow(this.d,abs);if(positive){return new Rational(n,d).collect();}else{return new Rational(d,n).collect();}}else{return new Float(this.eval()).raiseToThe(exp);}},getDenominator:function getDenominator(){return new Int(this.d);},isSimple:function isSimple(){return false;},asRational:function asRational(){return this;}});/* integer (n: numerator/number) */function Int(number){this.n=number;}Int.prototype=new Rational(0,1);_.extend(Int.prototype,{func:Int,args:function args(){return[this.n];},print:function print(){return this.n.toString();},tex:function tex(){return this.n.toString();},negate:function negate(){return new Int(-this.n);},abs:function abs(){return new Int(Math.abs(this.n));},isSimple:function isSimple(){return true;},findGCD:function findGCD(factor){if(factor instanceof Int){return new Int(Num.findGCD(this.n,factor.n));}else{return factor.findGCD(this);}}});_.extend(Int,{create:function create(n){return new Int(n).addHint(\"entered\");}});/* float (n: number) */function Float(number){this.n=number;}Float.prototype=new Num();_.extend(Float.prototype,{func:Float,args:function args(){return[this.n];},eval:function _eval(){return this.n;},// TODO(alex): when we internationalize number parsing/display\n// we should make sure to use the appropriate decimal mark here\nprint:function print(){return this.n.toString();},tex:function tex(){return this.n.toString();},add:function add(num,options){if(options&&options.preciseFloats){return Float.toDecimalPlaces(this.n+num.eval(),Math.max(this.getDecimalPlaces(),num.getDecimalPlaces()));}else{return new Float(this.n+num.eval()).collect();}},mul:function mul(num,options){if(options&&options.preciseFloats){return Float.toDecimalPlaces(this.n*num.eval(),this.getDecimalPlaces()+num.getDecimalPlaces());}else{return new Float(this.n*num.eval()).collect();}},collect:function collect(){// We used to simplify Floats to Ints here whenever possible, but no\n// longer do so in order to preserve significant figures.\nreturn this;},negate:function negate(){return new Float(-this.n);},abs:function abs(){return new Float(Math.abs(this.n));},findGCD:function findGCD(factor){if(factor instanceof Num){return new Float(Num.findGCD(this.eval(),factor.eval())).collect();}else{return factor.findGCD(this);}},// for now, assuming that exp is a Num\nraiseToThe:function raiseToThe(exp,options){if(options&&options.preciseFloats&&exp instanceof Int&&exp.n>1){return Float.toDecimalPlaces(new Pow(this,exp).eval(),this.getDecimalPlaces()*exp.n);}else{return new Float(new Pow(this,exp).eval()).collect();}},// only to be used on non-repeating decimals (e.g. user-provided)\nasRational:function asRational(){var parts=this.n.toString().split(\".\");if(parts.length===1){return new Rational(this.n,1);}else{var numerator=Number(parts.join(\"\"));var denominator=Math.pow(10,parts[1].length);return new Rational(numerator,denominator).collect();}},getDenominator:function getDenominator(){return this.asRational().getDenominator();},isSimple:function isSimple(){return true;}});_.extend(Float,{create:function create(n){return new Float(n).addHint(\"entered\");},// Account for floating point imprecision by explicitly controlling the\n// number of decimal places in common operations (e.g. +, *, ^)\ntoDecimalPlaces:function toDecimalPlaces(n,places){return new Float(+n.toFixed(Math.min(places,20))).collect();}});// static methods and fields that are best defined on Num\n_.extend(Num,{negativeOne:function negativeOne(hint){if(hint===\"subtract\"){return Num.Sub;}else if(hint===\"divide\"){return Num.Div;}else{return Num.Neg;}},// find the greatest common denominator\nfindGCD:function findGCD(a,b){var mod;a=Math.abs(a);b=Math.abs(b);// Euclid's method doesn't handle non-integers very well. For now\n// we just say we can't pull out a common factor. It might be\n// reasonable to do better than this in the future.\nif(a!==Math.floor(a)||b!==Math.floor(b)){return 1;}while(b){mod=a%b;a=b;b=mod;}return a;},min:function min(){return _.min(_.toArray(arguments),function(num){return num.eval();});},max:function max(){return _.max(_.toArray(arguments),function(num){return num.eval();});}});Num.Neg=new Int(-1).addHint(\"negate\");Num.Sub=new Int(-1).addHint(\"subtract\");Num.Div=new Int(-1).addHint(\"divide\");Num.Sqrt=new Rational(1,2).addHint(\"root\");Num.Zero=new Int(0);Num.One=new Int(1);Num.Ten=new Int(10);// set identities here\nAdd.prototype.identity=Num.Zero;Mul.prototype.identity=Num.One;var parser=KAS.parser;var parseError=function parseError(str,hash){// return int location of parsing error\nthrow new Error(hash.loc.first_column);};// expose concrete nodes to parser scope\n// see http://zaach.github.io/jison/docs/#sharing-scope\nparser.yy={Add:Add,Mul:Mul,Pow:Pow,Log:Log,Trig:Trig,Eq:Eq,Abs:Abs,Func:Func,Const:Const,Var:Var,Int:Int,Float:Float,parseError:parseError,constants:[\"e\"],symbolLexer:function symbolLexer(symbol){if(_.contains(parser.yy.constants,symbol)){return\"CONST\";}else if(_.contains(parser.yy.functions,symbol)){return\"FUNC\";}else{return\"VAR\";}}};KAS.parse=function(input,options){try{if(options&&options.functions){// reserve the symbol \"i\" for complex numbers\nparser.yy.functions=_.without(options.functions,\"i\");}else{parser.yy.functions=[];}// If ',' is the decimal dividor in your country, replace any ','s\n// with '.'s.\n// This isn't perfect, since the output will all still have '.'s.\n// TODO(jack): Fix the output to have ','s in this case\nif(options&&options.decimal_separator){input=input.split(options.decimal_separator).join(\".\");}var expr=parser.parse(input).completeParse();return{parsed:true,expr:expr};}catch(e){return{parsed:false,error:e.message};}};/* unit */function Unit(symbol){this.symbol=symbol;}Unit.prototype=new Symbol();// If possible, replace unit prefixes with a multiplication.\n//\n// \"g\" -> Unit(\"g\")\n// \"kg\" -> 1000 * Unit(\"g\")\nvar unprefixify=function unprefixify(symbol){if(_(baseUnits).has(symbol)||_(derivedUnits).has(symbol)){return new Unit(symbol);}// check for prefix\nvar prefix=_(_(siPrefixes).keys()).find(function(testPrefix){return new RegExp(\"^\"+testPrefix).test(symbol);});if(prefix){var base=symbol.replace(new RegExp(\"^\"+prefix),\"\");// It's okay to be here if either:\n// * `base` is a base unit (the seven units listed in baseUnits)\n// * `base` is a derived unit which allows prefixes\n//\n// Otherwise, we're trying to parse a unit label which is not\n// allowed (mwk, mBTU, etc).\nif(_(baseUnits).has(base)||derivedUnits[base]&&derivedUnits[base].prefixes===hasPrefixes){return new Mul(siPrefixes[prefix],new Unit(base));}else{throw new Error(base+\" does not allow prefixes\");}}else{return new Unit(symbol);}};KAS.unitParse=function(input){try{var parseResult=KAS.unitParser.parse(input);// parseResult looks like:\n// {\n//   magnitude: \"5\",\n//   unit: {\n//     num: [\n//       { name: \"s\", pow: 2 }\n//     ],\n//     denom: [\n//       { name: \"kg\", pow: 1 }\n//     ]\n//   }\n// }\n//\n// denom is optionally null\nvar unitArray=[];_(parseResult.unit.num).each(function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(unitSpec.pow)));});_(parseResult.unit.denom).each(function(unitSpec){unitArray.push(new Pow(unprefixify(unitSpec.name),new Int(-1*unitSpec.pow)));});var unit=new Mul(unitArray).flatten();if(parseResult.type===\"unitMagnitude\"){// in the first case we have a magnitude coefficient as well as the\n// unit itself.\nvar coefArray=[new Float(+parseResult.magnitude)].concat(unitArray);var expr=new Mul(coefArray);return{parsed:true,unit:unit,expr:expr,coefficient:parseResult.magnitude,type:parseResult.type};}else{// in the second case it's just the unit with no magnitude.\nreturn{parsed:true,unit:unit,type:parseResult.type};}}catch(e){return{parsed:false,error:e.message};}};_.extend(Unit.prototype,{func:Unit,args:function args(){return[this.symbol];},recurse:function recurse(){return this;},eval:function _eval(vars,options){// This is called when comparing units. A unit doesn't affect the\n// numerical value of its coefficient, so this needs to be 1.\n//\n// On the other hand, things must not evaluate to the same thing if\n// they don't have the same type. I believe that's also true - form is\n// checked before numerical equivalence. I do not know where, though.\n// However, there are a couple tests checking this.\nreturn 1;},getUnits:function getUnits(){return[{unit:this.symbol,pow:1}];},codegen:function codegen(){return\"1\";},print:function print(){return this.symbol;},tex:function tex(){return this.symbol;},// Simplify units by replacing prefixes with multiplication\ncollect:function collect(options){if(_(baseUnits).has(this.symbol)){return this;}else if(_(derivedUnits).has(this.symbol)){return derivedUnits[this.symbol].conversion;}else{throw new Error(\"could not understand unit: \"+this.symbol);}}});var baseUnits={m:new Unit(\"m\"),// Note: kg is the SI base unit but we use g for consistency\ng:new Unit(\"g\"),s:new Unit(\"s\"),A:new Unit(\"A\"),K:new Unit(\"K\"),mol:new Unit(\"mol\"),cd:new Unit(\"cd\")};var siPrefixes={a:new Pow(new Int(10),new Int(-18)),f:new Pow(new Int(10),new Int(-15)),p:new Pow(new Int(10),new Int(-12)),n:new Pow(new Int(10),new Int(-9)),u:new Pow(new Int(10),new Int(-6)),m:new Pow(new Int(10),new Int(-3)),c:new Pow(new Int(10),new Int(-2)),d:new Pow(new Int(10),new Int(-1)),da:new Int(10),h:new Pow(new Int(10),new Int(2)),k:new Pow(new Int(10),new Int(3)),M:new Pow(new Int(10),new Int(6)),G:new Pow(new Int(10),new Int(9)),T:new Pow(new Int(10),new Int(12)),P:new Pow(new Int(10),new Int(15)),E:new Pow(new Int(10),new Int(18)),// http://en.wikipedia.org/wiki/Metric_prefix#.22Hella.22_prefix_proposal\nhella:new Pow(new Int(10),new Int(27))};// Use these two values to mark a unit as either SI-prefixable or not.\nvar hasPrefixes={};var hasntPrefixes={};var makeAlias=function makeAlias(str,prefixes){var splits=str.split(\"|\");var coefficientStr=splits[0].trim();var unitsStr=splits[1].trim();var coefficient=Num.One;if(coefficientStr!==\"\"){coefficient=KAS.parse(coefficientStr).expr;}var numdenomStr=unitsStr.split(\"/\");var numdenom=[coefficient];if(numdenomStr[0]){numdenomStr[0].split(\" \").filter(function(x){return x!==\"\";}).map(function(x){numdenom.push(new Unit(x));});}if(numdenomStr[1]){numdenomStr[1].split(\" \").filter(function(x){return x!==\"\";}).map(function(x){numdenom.push(new Pow(new Unit(x),Num.Div));});}return{conversion:new Mul(numdenom),prefixes:prefixes};};// This is a mapping of derived units (or different names for a unit) to their\n// definitions. For example, an inch is defined as 0.0254 m.\n//\n// Definitions don't need to be in terms of base units. For example, tsp is\n// defined in terms of tbsp (which is defined in terms of cup -> gal -> L ->\n// m^3). However, units must get simpler. I.e. there's no loop checking.\n//\n// makeAlias takes two parameters:\n// * a string specifying the simplification to perform\n//   - a required pipe separates the constant factor from the base units\n//   - the constant factor is parsed by KAS\n//   - the base units are in a simple format which disallows exponents and\n//     requires multiplicands to be space-separated (\"m m\" rather than \"m^2)\n//     with an optional \"/\" separating numerator and denominator\n//   - prefixes are not allowed to be used in the converted to units\n//     (note that this restriction, the format of the string, and the choice to\n//     use a string in the first place are made out of laziness to minimize\n//     both typing and parsing)\n// * a boolean specifying whether or not it's acceptable to use SI units\n//\n// Where possible, these units are taken from \"The International System of\n// Units (SI)\" 8th edition (2006).\nvar derivedUnits={// mass\n// The atomic mass unit / dalton.\nDa:makeAlias(\"1.6605388628 x 10^-24 | g\",hasPrefixes),u:makeAlias(\"| Da\",hasntPrefixes),// length\n\"meter\":makeAlias(\"| m\",hasntPrefixes),\"meters\":makeAlias(\"| m\",hasntPrefixes),\"in\":makeAlias(\"254 / 10000 | m\",hasntPrefixes),\"ft\":makeAlias(\"3048  / 10000 | m\",hasntPrefixes),\"yd\":makeAlias(\"9144  / 10000 | m\",hasntPrefixes),\"mi\":makeAlias(\"1609344 / 1000 | m\",hasntPrefixes),\"ly\":makeAlias(\"9.4607 x 10^15 | m\",hasntPrefixes),\"nmi\":makeAlias(\"1852 | m\",hasntPrefixes),\"Å\":makeAlias(\"10^-10 | m\",hasntPrefixes),\"pc\":makeAlias(\"3.0857 x 10^16 | m\",hasntPrefixes),// time\n\"min\":makeAlias(\"60 | s\",hasntPrefixes),\"hr\":makeAlias(\"3600 | s\",hasntPrefixes),\"sec\":makeAlias(\"| s\",hasntPrefixes),// TODO(joel) make day work\n\"day\":makeAlias(\"86400 | s\",hasntPrefixes),\"wk\":makeAlias(\"604800 | s\",hasntPrefixes),\"fortnight\":makeAlias(\"14 | day\",hasntPrefixes),\"shake\":makeAlias(\"10^-8 | s\",hasntPrefixes),\"olympiad\":makeAlias(\"126200000 | s\",hasntPrefixes),// temperature\n\"°C\":makeAlias(\"1 | K\",hasntPrefixes),\"°F\":makeAlias(\"5/9 | K\",hasntPrefixes),\"°R\":makeAlias(\"5/9 | K\",hasntPrefixes),// electric charge\n\"e\":makeAlias(\"1.6021765314 x 10^-19 | C\",hasntPrefixes),// speed\n\"c\":makeAlias(\"299792458 | m / s\",hasntPrefixes),\"kn\":makeAlias(\"514/1000 | m / s\",hasntPrefixes),\"kt\":makeAlias(\"| kn\",hasntPrefixes),\"knot\":makeAlias(\"| kn\",hasntPrefixes),// energy\n\"J\":makeAlias(\"| N m\",hasPrefixes),\"BTU\":makeAlias(\"1060 | J\",hasntPrefixes),\"cal\":makeAlias(\"4184 / 1000 | J\",hasPrefixes),\"eV\":makeAlias(\"1.602176514 x 10^-19 | J\",hasPrefixes),\"erg\":makeAlias(\"10^−7 | J\",hasPrefixes),// power\n\"W\":makeAlias(\"| J / s\",hasPrefixes),\"H-e\":makeAlias(\"80 | W\",hasntPrefixes),// force\n\"N\":makeAlias(\"1000 | g m / s s\",hasPrefixes),// \"lb\": makeAlias(\"4448 / 1000 | N\", hasntPrefixes),\n// 4.4482216152605\n\"lb\":makeAlias(\"4448221615 / 1000000000 | N\",hasntPrefixes),\"dyn\":makeAlias(\"10^-5 | N\",hasntPrefixes),// pressure\n\"Pa\":makeAlias(\"1 | N / m m m\",hasPrefixes),\"bar\":makeAlias(\"10^5 | Pa\",hasPrefixes),\"㏔\":makeAlias(\"1/1000 | bar\",hasntPrefixes),\"㍴\":makeAlias(\"| bar\",hasntPrefixes),\"atm\":makeAlias(\"101325 | Pa\",hasntPrefixes),\"Torr\":makeAlias(\"1/760 | atm\",hasntPrefixes),\"mmHg\":makeAlias(\"| Torr\",hasntPrefixes),// area\n\"ha\":makeAlias(\"10^4 | m m\",hasntPrefixes),\"b\":makeAlias(\"10^−28 | m m\",hasPrefixes),\"barn\":makeAlias(\"| b\",hasPrefixes),\"acre\":makeAlias(\"4046.87 | m m\",hasntPrefixes),\"skilodge\":makeAlias(\"10^-31 | m m\",hasntPrefixes),\"outhouse\":makeAlias(\"10^-34 | m m\",hasntPrefixes),\"shed\":makeAlias(\"10^-52 | m m\",hasntPrefixes),// volume\n\"L\":makeAlias(\"1/1000 | m m m\",hasPrefixes),\"gal\":makeAlias(\"3785/1000 | L\",hasPrefixes),\"cup\":makeAlias(\"1/16 | gal\",hasntPrefixes),\"qt\":makeAlias(\"1/4 | gal\",hasntPrefixes),\"quart\":makeAlias(\"| qt\",hasntPrefixes),\"p\":makeAlias(\"1/8 | gal\",hasntPrefixes),\"pt\":makeAlias(\"| p\",hasntPrefixes),\"pint\":makeAlias(\"| p\",hasntPrefixes),\"fl oz\":makeAlias(\"1/8 | cup\",hasntPrefixes),\"fl. oz.\":makeAlias(\"1/8 | cup\",hasntPrefixes),\"tbsp\":makeAlias(\"1/16 | cup\",hasntPrefixes),\"tsp\":makeAlias(\"1/3 | tbsp\",hasntPrefixes),// rotational\n// \"rad\":\n\"rev\":makeAlias(\"2 pi | rad\",hasntPrefixes),\"deg\":makeAlias(\"180 pi | rad\",hasntPrefixes),\"°\":makeAlias(\"| deg\",hasntPrefixes),\"arcminute\":makeAlias(\"1/60 | deg\",hasntPrefixes),\"arcsec\":makeAlias(\"1/3600 | deg\",hasntPrefixes),// dimensionless\n// \"B\": makeAlias(\"10 | dB\", hasntPrefixes), // XXX danger - logarithmic\n// \"dB\"\n// \"nP\"\n\"Hu\":makeAlias(\"1000 | dB\",hasPrefixes),\"dozen\":makeAlias(\"12 |\",hasntPrefixes),// XXX\n\"mol\":makeAlias(\"6.0221412927 x 10^23 |\",hasPrefixes),\"%\":makeAlias(\"1/100 |\",hasntPrefixes),\"percent\":makeAlias(\"| %\",hasntPrefixes),\"ppm\":makeAlias(\"1/1000000 |\",hasntPrefixes),// electric / magnetic\n\"V\":makeAlias(\"1000 | g m m / s s C\",hasPrefixes),\"C\":makeAlias(\"| A s\",hasPrefixes),\"ampere\":makeAlias(\"| A\",hasntPrefixes),\"Ω\":makeAlias(\"| V / A\",hasPrefixes),\"ohm\":makeAlias(\"| Ω\",hasntPrefixes),\"F\":makeAlias(\"| C / V\",hasPrefixes),\"H\":makeAlias(\"| ohm s\",hasPrefixes),\"T\":makeAlias(\"1000 | g / C s\",hasPrefixes),\"Wb\":makeAlias(\"1000 | g m m / C s\",hasPrefixes),// photometry\n// TODO not sure this is right\n\"lm\":makeAlias(\"pi x 10^4 | cd / m m\",hasntPrefixes),\"lx\":makeAlias(\"| lm / m m\",hasntPrefixes),\"nit\":makeAlias(\"| cd / m m\",hasntPrefixes),\"sb\":makeAlias(\"10^4 | cd / m m\",hasntPrefixes),\"stilb\":makeAlias(\"1 | sb\",hasntPrefixes),\"apostilb\":makeAlias(\"1 / pi x 10^(-4) | sb\",hasntPrefixes),\"blondel\":makeAlias(\"| apostilb\",hasntPrefixes),\"asb\":makeAlias(\"| apostilb\",hasntPrefixes),\"la\":makeAlias(\"| lm\",hasntPrefixes),\"Lb\":makeAlias(\"| lm\",hasntPrefixes),\"sk\":makeAlias(\"10^-7 | lm\",hasntPrefixes),\"skot\":makeAlias(\"| sk\",hasntPrefixes),\"bril\":makeAlias(\"10^-11 | lm\",hasntPrefixes),// other\n\"Hz\":makeAlias(\"| / s\",hasPrefixes)};KAS.Add=Add;KAS.Mul=Mul;KAS.Pow=Pow;KAS.Log=Log;KAS.Eq=Eq;KAS.Trig=Trig;KAS.Abs=Abs;KAS.Func=Func;KAS.Var=Var;KAS.Const=Const;KAS.Unit=Unit;KAS.Rational=Rational;KAS.Int=Int;KAS.Float=Float;KAS.Zero=Num.Zero;KAS.One=Num.One;})(KAS);(function(KAS){// Assumes that both expressions have already been parsed\n// TODO(alex): be able to pass a random() function to compare()\nKAS.compare=function(expr1,expr2,options){var defaults={form:false,// Check that the two expressions have the same form\nsimplify:false// Check that the second expression is simplified\n};/* Options that could be added in the future:\n         * - Allow ratios: e.g. 3/1 and 3 should both be accepted for something\n         *   like slope\n         * - Allow student to choose their own variable names\n         */if(options!==undefined){// eslint-disable-next-line no-undef\noptions=_.extend(defaults,options);}else{options=defaults;}// TODO(CP-1614): Figure out how to make these messages translatable\n// Variable check\nvar vars=expr1.sameVars(expr2);if(!vars.equal){var message;if(vars.equalIgnoringCase){message=\"Check your variables; one or more are using \"+\"the wrong case (upper or lower).\";}else{message=\"Check your variables; you may have used the wrong \"+\"letter for one or more of them.\";}return{equal:false,wrongVariableCase:vars.equalIgnoringCase,wrongVariableNames:!vars.equalIgnoringCase,message:message};}// Semantic check\nif(!expr1.compare(expr2)){return{equal:false,message:null};}// Syntactic check\nif(options.form&&!expr1.sameForm(expr2)){return{equal:false,message:\"Your answer is not in the correct form.\"};}// Syntactic check\nif(options.simplify&&!expr1.isSimplified()){return{equal:false,message:\"Your answer is not fully expanded and simplified.\"};}return{equal:true,message:null};};})(KAS);","map":{"version":3,"names":["_","KAS","module","exports","require","window","parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","Eq","Add","$","createOrAppend","Mul","handleNegative","fold","handleDivide","concat","Log","natural","common","Trig","create","Pow","Var","Const","toLowerCase","Int","Number","Float","completeParse","addHint","sqrt","nthroot","Abs","Func","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","popStack","n","lex","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","symbolLexer","console","log","Parser","type","magnitude","unit","num","denom","name","pow","unitParser","abstract","print","error","message","isNaN","object","randomFloat","min","max","extent","random","ITERATIONS","TOLERANCE","Expr","extend","func","construct","instance","recurse","method","passed","map","arg","isString","eval","codegen","compile","code","Function","e","tex","asTex","defaults","display","dynamic","times","toString","repr","strip","normalize","expand","factor","collect","equals","other","simplify","once","step1","step2","step3","step4","simplified","isSimplified","exprArgs","filter","getVars","excludeFunc","uniq","flatten","invoke","sort","getConsts","getUnits","is","has","any","raiseToThe","exp","isSubtract","isDivide","isRoot","needsExplicitMul","sameVars","vars1","vars2","same","array1","array2","difference","lower","array","equal","equalIgnoringCase","compare","varList","union","getDelta","num1","num2","equalNumbers","delta","Unit","expr1","expr2","unitList1","unitList2","isEqual","vars","floor","useFloats","each","result1","partialEval","result2","toFixed","sameForm","findGCD","Num","One","getDenominator","asMul","isPositive","isNegative","asPositiveFactor","hint","expr","hints","clone","parens","asExpr","negate","Neg","Seq","terms","sortBy","term","partition","groupBy","numbers","others","identity","grouped","flattened","pluck","undefined","reduce","all","oldTerm","newTerm","indexOf","newTerms","isArray","remove","toArray","memo","pairs","muls","pair","collected","compact","sum","zip","coefficient","keepNegative","factors","rest","remainder","add","tmUnits","chain","value","b","cdot","inverses","inverse","number","negatives","numerator","isRational","Rational","withThisRemoved","splice","hasDenom","shouldPushDown","fraction","d","Div","subtract","entered","denominator","isAdd","isInverse","isInverseAdd","base","mul","hasAdd","hasInverseAdd","normals","adds","expanded","temp","factored","rational","partitioned","Zero","summed","isBasic","trigs","trig","logs","exprs","byArg","funcs","sin","cos","tan","cot","byBase","power","factorIn","negativeOne","factorOut","list","divide","isNum","find","left","right","negated","first","isInt","reversed","reverse","result","divided","last","initial","trigLog","open","newTrigLog","pos","neg","posOrNeg","some","every","firstNeg","firstNum","evaledBase","evaledExp","simplifiedExp","decimals","rationalExp","oddDenominator","oddNumerator","sign","bind","asDivide","isSimple","positive","signed","cache","indices","without","pick","isSimilarLog","preciseFloats","asRational","decimalsInBase","getDecimalPlaces","root","decimalsInRoot","newBase","isDiv","isSquaredTrig","expA","expB","Sqrt","radicand","degree","isNatural","Ten","functions","csc","sec","arcsin","asin","arccos","acos","arctan","atan","arccsc","arcsec","arccot","sinh","argStr","cosh","tanh","csch","sech","coth","isEven","contains","positives","signs","eq","unfactored","isZero","isInequality","isEquality","divideThrough","hasVar","isOne","dividedResult","eq1","eq2","solveLinearEquationForVariable","variable","Symbol","newVars","x","parsedFunc","parsed","subscript","sub","prettyPrint","prefix","PI","E","pi","gcd","toDecimalPlaces","parts","places","Sub","mod","constants","decimal_separator","unprefixify","baseUnits","derivedUnits","siPrefixes","keys","testPrefix","RegExp","test","prefixes","hasPrefixes","unitParse","parseResult","unitArray","unitSpec","coefArray","conversion","m","g","s","A","K","mol","cd","f","u","da","h","M","G","T","P","hella","hasntPrefixes","makeAlias","splits","coefficientStr","trim","unitsStr","numdenomStr","numdenom","Da","form","wrongVariableCase","wrongVariableNames"],"sources":["/Users/allisonwang/Downloads/chemistry/OATutor-Chem1A/src/kas.js"],"sourcesContent":["/*! KAS | https://github.com/Khan/KAS */\n// This is a @generated file\nvar _, KAS = {};\n\nif (typeof module === \"object\" && module.exports) {\n    _ = require(\"underscore\");\n    module.exports = KAS;\n} else {\n    _ = window._;\n    window.KAS = KAS;\n}\n\n(function(KAS) {\n\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,17],$V2=[1,13],$V3=[1,14],$V4=[1,15],$V5=[1,32],$V6=[1,22],$V7=[1,23],$V8=[1,24],$V9=[1,25],$Va=[1,26],$Vb=[1,33],$Vc=[1,27],$Vd=[1,28],$Ve=[1,29],$Vf=[1,30],$Vg=[1,20],$Vh=[1,36],$Vi=[1,37],$Vj=[5,6,8,10,33,35,41,43,45],$Vk=[1,39],$Vl=[1,40],$Vm=[5,6,8,10,12,14,16,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],$Vn=[10,16,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],$Vo=[5,6,8,10,12,14,16,18,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"equation\":3,\"expression\":4,\"SIGN\":5,\"EOF\":6,\"additive\":7,\"+\":8,\"multiplicative\":9,\"-\":10,\"triglog\":11,\"*\":12,\"negative\":13,\"/\":14,\"trig\":15,\"TRIG\":16,\"trigfunc\":17,\"^\":18,\"TRIGINV\":19,\"logbase\":20,\"ln\":21,\"log\":22,\"_\":23,\"subscriptable\":24,\"power\":25,\"primitive\":26,\"variable\":27,\"VAR\":28,\"CONST\":29,\"INT\":30,\"FLOAT\":31,\"{\":32,\"}\":33,\"(\":34,\")\":35,\"function\":36,\"FUNC\":37,\"invocation\":38,\"sqrt\":39,\"[\":40,\"]\":41,\"abs\":42,\"|\":43,\"LEFT|\":44,\"RIGHT|\":45,\"FRAC\":46,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"SIGN\",6:\"EOF\",8:\"+\",10:\"-\",12:\"*\",14:\"/\",16:\"TRIG\",18:\"^\",19:\"TRIGINV\",21:\"ln\",22:\"log\",23:\"_\",28:\"VAR\",29:\"CONST\",30:\"INT\",31:\"FLOAT\",32:\"{\",33:\"}\",34:\"(\",35:\")\",37:\"FUNC\",39:\"sqrt\",40:\"[\",41:\"]\",42:\"abs\",43:\"|\",44:\"LEFT|\",45:\"RIGHT|\",46:\"FRAC\"},\nproductions_: [0,[3,4],[3,2],[3,1],[4,1],[7,3],[7,3],[7,1],[9,2],[9,3],[9,3],[9,1],[13,2],[13,1],[15,1],[17,1],[17,3],[17,1],[20,1],[20,1],[20,3],[11,2],[11,2],[11,1],[25,3],[25,1],[27,1],[24,3],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[36,1],[38,4],[38,4],[38,7],[38,4],[38,3],[38,3],[38,4],[26,1],[26,1],[26,7]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this === yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn new yy.Eq($$[$0-3], $$[$0-2], $$[$0-1]);\nbreak;\ncase 2:\nreturn $$[$0-1];\nbreak;\ncase 3:\nreturn new yy.Add([]);\nbreak;\ncase 4: case 7: case 11: case 13: case 15: case 20: case 23: case 25: case 42: case 43:\nthis.$ = $$[$0];\nbreak;\ncase 5:\nthis.$ = yy.Add.createOrAppend($$[$0-2], $$[$0]);\nbreak;\ncase 6:\nthis.$ = yy.Add.createOrAppend($$[$0-2], yy.Mul.handleNegative($$[$0], \"subtract\"));\nbreak;\ncase 8:\nthis.$ = yy.Mul.fold(yy.Mul.createOrAppend($$[$0-1], $$[$0]));\nbreak;\ncase 9:\nthis.$ = yy.Mul.fold(yy.Mul.createOrAppend($$[$0-2], $$[$0]));\nbreak;\ncase 10:\nthis.$ = yy.Mul.fold(yy.Mul.handleDivide($$[$0-2], $$[$0]));\nbreak;\ncase 12:\nthis.$ = yy.Mul.handleNegative($$[$0]);\nbreak;\ncase 14: case 17:\nthis.$ = [yytext];\nbreak;\ncase 16:\nthis.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 18:\nthis.$ = yy.Log.natural();\nbreak;\ncase 19:\nthis.$ = yy.Log.common();\nbreak;\ncase 21:\nthis.$ = yy.Trig.create($$[$0-1], $$[$0]);\nbreak;\ncase 22:\nthis.$ = yy.Log.create($$[$0-1], $$[$0]);\nbreak;\ncase 24:\nthis.$ = new yy.Pow($$[$0-2], $$[$0]);\nbreak;\ncase 26: case 34:\nthis.$ = yytext;\nbreak;\ncase 27:\nthis.$ = new yy.Var($$[$0-2], $$[$0]);\nbreak;\ncase 28:\nthis.$ = new yy.Var($$[$0]);\nbreak;\ncase 29:\nthis.$ = new yy.Const(yytext.toLowerCase());\nbreak;\ncase 30:\nthis.$ = yy.Int.create(Number(yytext));\nbreak;\ncase 31:\nthis.$ = yy.Float.create(Number(yytext));\nbreak;\ncase 32:\nthis.$ = $$[$0-1].completeParse();\nbreak;\ncase 33:\nthis.$ = $$[$0-1].completeParse().addHint('parens');\nbreak;\ncase 35: case 36:\nthis.$ = yy.Pow.sqrt($$[$0-1]);\nbreak;\ncase 37:\nthis.$ = new yy.Pow.nthroot($$[$0-1], $$[$0-4]);\nbreak;\ncase 38: case 39: case 40:\nthis.$ = new yy.Abs($$[$0-1]);\nbreak;\ncase 41:\nthis.$ = new yy.Func($$[$0-3], $$[$0-1]);\nbreak;\ncase 44:\nthis.$ = yy.Mul.handleDivide($$[$0-4], $$[$0-1]);\nbreak;\n}\n},\ntable: [{3:1,4:2,6:[1,3],7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[3]},{5:[1,34],6:[1,35]},{1:[2,3]},o([5,6],[2,4],{8:$Vh,10:$Vi}),o($Vj,[2,7],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,11]),{10:$V0,11:8,13:41,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,13]),{10:$V0,11:8,13:42,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:43,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,23]),o($Vn,[2,15],{18:[1,44]}),o($Vn,[2,17]),o($Vn,[2,18]),o($Vn,[2,19],{23:[1,45]}),o($Vm,[2,25],{18:[1,46]}),o([10,16,18,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],[2,14]),o($Vo,[2,42]),o($Vo,[2,43]),{32:[1,47]},o($Vo,[2,28],{23:[1,48]}),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),{7:49,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:50,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{32:[1,52],34:[1,51],40:[1,53]},{34:[1,54]},{7:55,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:56,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{34:[1,57]},o([5,6,8,10,12,14,16,18,19,21,22,23,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],[2,26]),{34:[2,34]},{4:58,7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[2,2]},{9:59,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{9:60,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,8]),{10:$V0,11:8,13:61,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:62,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,12]),o($Vm,[2,21]),o($Vm,[2,22]),{10:$V0,11:8,13:63,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:64,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{10:$V0,11:8,13:65,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:66,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:67,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{8:$Vh,10:$Vi,33:[1,68]},{8:$Vh,10:$Vi,35:[1,69]},{7:70,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:71,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:72,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:73,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,43:[1,74]},{8:$Vh,10:$Vi,45:[1,75]},{7:76,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{6:[1,77]},o($Vj,[2,5],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vj,[2,6],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,9]),o($Vm,[2,10]),o($Vn,[2,16]),o($Vn,[2,20]),o($Vm,[2,24]),{8:$Vh,10:$Vi,33:[1,78]},o($Vo,[2,27]),o($Vo,[2,32]),o($Vo,[2,33]),{8:$Vh,10:$Vi,35:[1,79]},{8:$Vh,10:$Vi,33:[1,80]},{8:$Vh,10:$Vi,41:[1,81]},{8:$Vh,10:$Vi,35:[1,82]},o($Vo,[2,39]),o($Vo,[2,40]),{8:$Vh,10:$Vi,35:[1,83]},{1:[2,1]},{32:[1,84]},o($Vo,[2,35]),o($Vo,[2,36]),{32:[1,85]},o($Vo,[2,38]),o($Vo,[2,41]),{7:86,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:87,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,33:[1,88]},{8:$Vh,10:$Vi,33:[1,89]},o($Vo,[2,44]),o($Vo,[2,37])],\ndefaultActions: {3:[2,3],33:[2,34],35:[2,2],77:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc === 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    //_token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null || typeof symbol === 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol === EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/* skip \\space */\nbreak;\ncase 2:/* skip '\\ ' */\nbreak;\ncase 3:return \"INT\"\nbreak;\ncase 4:return \"FLOAT\"\nbreak;\ncase 5:return \"^\"\nbreak;\ncase 6:return \"*\"\nbreak;\ncase 7:return \"*\"\nbreak;\ncase 8:return \"*\"\nbreak;\ncase 9:return \"*\"\nbreak;\ncase 10:return \"/\"\nbreak;\ncase 11:return \"/\"\nbreak;\ncase 12:return \"-\"\nbreak;\ncase 13:return \"-\"\nbreak;\ncase 14:return \"+\"\nbreak;\ncase 15:return \"^\"\nbreak;\ncase 16:return \"(\"\nbreak;\ncase 17:return \")\"\nbreak;\ncase 18:return \"(\"\nbreak;\ncase 19:return \")\"\nbreak;\ncase 20:return \"[\"\nbreak;\ncase 21:return \"]\"\nbreak;\ncase 22:return \"{\"\nbreak;\ncase 23:return \"}\"\nbreak;\ncase 24:return \"{\"\nbreak;\ncase 25:return \"}\"\nbreak;\ncase 26:return \"_\"\nbreak;\ncase 27:return \"|\"\nbreak;\ncase 28:return \"LEFT|\"\nbreak;\ncase 29:return \"RIGHT|\"\nbreak;\ncase 30:return \"!\"\nbreak;\ncase 31:return \"SIGN\"\nbreak;\ncase 32:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 33:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 34:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 35:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 36:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 37:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 38:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 39:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 40:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 41:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 42:return \"FRAC\"\nbreak;\ncase 43:return \"FRAC\"\nbreak;\ncase 44:return \"sqrt\"\nbreak;\ncase 45:return \"abs\"\nbreak;\ncase 46:return \"ln\"\nbreak;\ncase 47:return \"log\"\nbreak;\ncase 48:return \"TRIG\"\nbreak;\ncase 49:return \"TRIG\"\nbreak;\ncase 50:return \"TRIG\"\nbreak;\ncase 51:return \"TRIG\"\nbreak;\ncase 52:yy_.yytext = \"sin\"; return \"TRIG\"\nbreak;\ncase 53:yy_.yytext = \"cos\"; return \"TRIG\"\nbreak;\ncase 54:yy_.yytext = \"tan\"; return \"TRIG\"\nbreak;\ncase 55:yy_.yytext = \"csc\"; return \"TRIG\"\nbreak;\ncase 56:yy_.yytext = \"sec\"; return \"TRIG\"\nbreak;\ncase 57:yy_.yytext = \"cot\"; return \"TRIG\"\nbreak;\ncase 58:yy_.yytext = \"arcsin\"; return \"TRIG\"\nbreak;\ncase 59:yy_.yytext = \"arccos\"; return \"TRIG\"\nbreak;\ncase 60:yy_.yytext = \"arctan\"; return \"TRIG\"\nbreak;\ncase 61:yy_.yytext = \"arccsc\"; return \"TRIG\"\nbreak;\ncase 62:yy_.yytext = \"arcsec\"; return \"TRIG\"\nbreak;\ncase 63:yy_.yytext = \"arccot\"; return \"TRIG\"\nbreak;\ncase 64:return \"TRIGINV\"\nbreak;\ncase 65:return \"TRIGINV\"\nbreak;\ncase 66:yy_.yytext = \"sinh\"; return \"TRIG\"\nbreak;\ncase 67:yy_.yytext = \"cosh\"; return \"TRIG\"\nbreak;\ncase 68:yy_.yytext = \"tanh\"; return \"TRIG\"\nbreak;\ncase 69:yy_.yytext = \"csch\"; return \"TRIG\"\nbreak;\ncase 70:yy_.yytext = \"sech\"; return \"TRIG\"\nbreak;\ncase 71:yy_.yytext = \"tanh\"; return \"TRIG\"\nbreak;\ncase 72:return \"CONST\"\nbreak;\ncase 73:yy_.yytext = \"pi\"; return \"CONST\"\nbreak;\ncase 74:yy_.yytext = \"pi\"; return \"CONST\"\nbreak;\ncase 75:return \"VAR\"\nbreak;\ncase 76:yy_.yytext = \"theta\"; return \"VAR\"\nbreak;\ncase 77:yy_.yytext = \"theta\"; return \"VAR\"\nbreak;\ncase 78:return \"VAR\"\nbreak;\ncase 79:yy_.yytext = \"phi\"; return \"VAR\"\nbreak;\ncase 80:yy_.yytext = \"phi\"; return \"VAR\"\nbreak;\ncase 81:return yy.symbolLexer(yy_.yytext)\nbreak;\ncase 82:return \"EOF\"\nbreak;\ncase 83:return \"INVALID\"\nbreak;\ncase 84:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\\\space)/,/^(?:\\\\ )/,/^(?:[0-9]+\\.?)/,/^(?:([0-9]+)?\\.[0-9]+)/,/^(?:\\*\\*)/,/^(?:\\*)/,/^(?:\\\\cdot|·)/,/^(?:\\\\times|×)/,/^(?:\\\\ast)/,/^(?:\\/)/,/^(?:\\\\div|÷)/,/^(?:-)/,/^(?:−)/,/^(?:\\+)/,/^(?:\\^)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\\\left\\()/,/^(?:\\\\right\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\\\left\\{)/,/^(?:\\\\right\\})/,/^(?:_)/,/^(?:\\|)/,/^(?:\\\\left\\|)/,/^(?:\\\\right\\|)/,/^(?:\\!)/,/^(?:<=|>=|<>|<|>|=)/,/^(?:\\\\le)/,/^(?:\\\\ge)/,/^(?:\\\\leq)/,/^(?:\\\\geq)/,/^(?:=\\/=)/,/^(?:\\\\ne)/,/^(?:\\\\neq)/,/^(?:≠)/,/^(?:≤)/,/^(?:≥)/,/^(?:\\\\frac)/,/^(?:\\\\dfrac)/,/^(?:sqrt|\\\\sqrt)/,/^(?:abs|\\\\abs)/,/^(?:ln|\\\\ln)/,/^(?:log|\\\\log)/,/^(?:sin|cos|tan)/,/^(?:csc|sec|cot)/,/^(?:sinh|cosh|tanh)/,/^(?:csch|sech|coth)/,/^(?:\\\\sin)/,/^(?:\\\\cos)/,/^(?:\\\\tan)/,/^(?:\\\\csc)/,/^(?:\\\\sec)/,/^(?:\\\\cot)/,/^(?:\\\\arcsin)/,/^(?:\\\\arccos)/,/^(?:\\\\arctan)/,/^(?:\\\\arccsc)/,/^(?:\\\\arcsec)/,/^(?:\\\\arccot)/,/^(?:arcsin|arccos|arctan)/,/^(?:arccsc|arcsec|arccot)/,/^(?:\\\\sinh)/,/^(?:\\\\cosh)/,/^(?:\\\\tanh)/,/^(?:\\\\csch)/,/^(?:\\\\sech)/,/^(?:\\\\coth)/,/^(?:pi)/,/^(?:π)/,/^(?:\\\\pi)/,/^(?:theta)/,/^(?:θ)/,/^(?:\\\\theta)/,/^(?:phi)/,/^(?:φ)/,/^(?:\\\\phi)/,/^(?:[a-zA-Z])/,/^(?:$)/,/^(?:.)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nKAS.parser = parser;\n})(KAS);\n// this is a @generated file\n(function(KAS) {\n\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,11],$V1=[1,9],$V2=[8,17],$V3=[6,11],$V4=[6,11,13,17];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"unitvalue\":3,\"magnitude\":4,\"unit\":5,\"EOF\":6,\"float\":7,\"POW\":8,\"int\":9,\"multatoms\":10,\"DIV\":11,\"expatom\":12,\"MUL\":13,\"atom\":14,\"^\":15,\"nat\":16,\"ATOM\":17,\"FLOAT\":18,\"NAT\":19,\"NEG\":20,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\"POW\",11:\"DIV\",13:\"MUL\",15:\"^\",17:\"ATOM\",18:\"FLOAT\",19:\"NAT\",20:\"NEG\"},\nproductions_: [0,[3,3],[3,2],[4,3],[4,1],[5,3],[5,1],[10,3],[10,2],[10,1],[12,3],[12,1],[14,1],[7,1],[7,1],[16,1],[9,2],[9,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this === yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n            return {\n                type: \"unitMagnitude\",\n                magnitude: $$[$0-2],\n                unit: $$[$0-1],\n            };\n        \nbreak;\ncase 2:\n\n            return {\n                type: \"unitStandalone\",\n                unit: $$[$0-1],\n            }\n        \nbreak;\ncase 3:\n\n            this.$ = $$[$0-2] + \"e\" + $$[$0];\n        \nbreak;\ncase 4: case 13: case 14: case 15: case 17:\n this.$ = $$[$0]; \nbreak;\ncase 5:\n\n            this.$ = {\n                num: $$[$0-2],\n                denom: $$[$0],\n            };\n        \nbreak;\ncase 6:\n\n            this.$ = {\n                num: $$[$0],\n                denom: null,\n            };\n        \nbreak;\ncase 7:\n this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 8:\n this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 9:\n this.$ = [$$[$0]]; \nbreak;\ncase 10:\n\n            this.$ = {\n                name: $$[$0-2],\n                pow: $$[$0],\n            };\n        \nbreak;\ncase 11:\n\n            this.$ = {\n                name: $$[$0],\n                pow: 1,\n            };\n        \nbreak;\ncase 12:\n this.$ = yytext; \nbreak;\ncase 16:\n this.$ = \"-\" + $$[$0]; \nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,7:4,10:5,12:8,14:10,16:7,17:$V0,18:[1,6],19:$V1},{1:[3]},{5:12,10:5,12:8,14:10,17:$V0},{6:[1,13]},{8:[1,14],17:[2,4]},{6:[2,6],11:[1,15]},o($V2,[2,13]),o($V2,[2,14]),o($V3,[2,9],{12:8,14:10,10:17,13:[1,16],17:$V0}),o([6,8,11,13,17],[2,15]),o($V4,[2,11],{15:[1,18]}),o([6,11,13,15,17],[2,12]),{6:[1,19]},{1:[2,2]},{9:20,19:[1,22],20:[1,21]},{10:23,12:8,14:10,17:$V0},{10:24,12:8,14:10,17:$V0},o($V3,[2,8]),{16:25,19:$V1},{1:[2,1]},{17:[2,3]},{19:[1,26]},{17:[2,17]},{6:[2,5]},o($V3,[2,7]),o($V4,[2,10]),{17:[2,16]}],\ndefaultActions: {13:[2,2],19:[2,1],20:[2,3],22:[2,17],23:[2,5],26:[2,16]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc === 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    //_token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null || typeof symbol === 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol === EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 11;\nbreak;\ncase 1:return '(';\nbreak;\ncase 2:return ')';\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 15;\nbreak;\ncase 5:return 13;\nbreak;\ncase 6:return 18;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 17;\nbreak;\ncase 10:return 17;\nbreak;\ncase 11:return 17;\nbreak;\ncase 12:/* skip whitespace */\nbreak;\ncase 13:return 6;\nbreak;\n}\n},\nrules: [/^(?:\\/)/,/^(?:\\()/,/^(?:\\))/,/^(?:(\\*|x|\\u00d7|\\u2219|\\u22c5|\\u00b7)\\s*10\\s*\\^)/,/^(?:\\^)/,/^(?:\\*)/,/^(?:[0-9]+\\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:-)/,/^(?:\\u00b0( ?)[cCfF])/,/^(?:fl\\.? oz\\.?)/,/^(?:[\\u00b5]?([A-Za-z-]+|[\\u2103\\u2109\\u212b]))/,/^(?:\\s+)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nKAS.unitParser = parser;\n})(KAS);\n/* TODO(charlie): fix these lint errors (http://eslint.org/docs/rules): */\n/* eslint-disable indent, no-undef, no-var, one-var, no-dupe-keys, no-new-func, no-redeclare, no-unused-vars, comma-dangle, max-len, prefer-spread, space-infix-ops, space-unary-ops */\n\n(function(KAS) {\n\n/*  The node hierarcy is as follows:\n\n    (Expr)\n        (Seq)           2+ children\n            Add\n            Mul\n        Pow             2 children\n        Log             2 children\n        Eq              2 children\n        Trig            1 child\n        Abs             1 child\n        (Symbol)\n            Func        1 child     e.g. f(x)\n            Var         leaf node   e.g. x, x_n\n            Const       leaf node   e.g. pi, e, <i>\n            Unit        leaf node   e.g. kg\n        (Num)           leaf node\n            Rational                e.g. 2/3\n                Int\n            Float\n\n    (abstract, not meant to be instantiated)\n\n    === Key design concepts ==\n    Functional: All methods return new nodes - nodes are never mutated.\n    Ignore commutativity: Commutative inputs should be parsed equivalently.\n    Exploit commutativity: Output should take advantage of ordering.\n*/\n\n/* non user-facing functions */\n\n// assert that all abstract methods have been overridden\nvar abstract = function() {\n    // Try to give people a bit of information when this happens\n    throw new Error(\"Abstract method - must override for expr: \" +\n            this.print());\n};\n\n// throw an error that is meant to be caught by the test suite (not user facing)\nvar error = function(message) { throw new Error(message); };\n\n// reliably detect NaN\nvar isNaN = function(object) { return object !== object; };\n\n// return a random float between min (inclusive) and max (exclusive),\n// not that inclusivity means much, probabilistically, on floats\nvar randomFloat = function(min, max) {\n    var extent = max - min;\n    return Math.random() * extent + min;\n};\n\n/* constants */\nvar ITERATIONS = 12;\nvar TOLERANCE = 9; // decimal places\n\n\n/* abstract base expression node */\nfunction Expr() {}\n\n_.extend(Expr.prototype, {\n\n    // this node's immediate constructor\n    func: abstract,\n\n    // an array of the arguments to this node's immediate constructor\n    args: abstract,\n\n    // make a new node with the given arguments\n    construct: function(args) {\n        var instance = new this.func();\n        this.func.apply(instance, args);\n        return instance;\n    },\n\n    // an abstraction for chainable, bottom-up recursion\n    recurse: function(method) {\n        var passed = Array.prototype.slice.call(arguments, 1);\n        var args = _.map(this.args(), function(arg) {\n            return _.isString(arg) ? arg : arg[method].apply(arg, passed);\n        });\n        return this.construct(args);\n    },\n\n    // evaluate numerically with given variable mapping\n    eval: abstract,\n\n    codegen: abstract,\n\n    compile: function() {\n        var code = this.codegen();\n        try {\n            return new Function(\"vars\", \"return \" + code + \";\");\n        } catch (e) {\n            throw new Error(\"Function did not compile: \" + code);\n        }\n    },\n\n    // returns a string unambiguously representing the expression\n    // should be valid as input\n    // e.g. this.equals(parse(this.print())) === true\n    print: abstract,\n\n    // returns a TeX string representing the expression\n    tex: abstract,\n\n    // returns a TeX string, modified by the given options\n    asTex: function(options) {\n\n        options = options || {};\n        _.defaults(options, {\n            display: true,\n            dynamic: true,\n            times: false\n        });\n\n        var tex = this.tex();\n\n        if (options.display) {\n            tex = \"\\\\displaystyle \" + tex;\n        }\n        if (options.dynamic) {\n            tex = tex.replace(/\\(/g, \"\\\\left(\");\n            tex = tex.replace(/\\)/g, \"\\\\right)\");\n        }\n        if (options.times) {\n            tex = tex.replace(/\\\\cdot/g, \"\\\\times\");\n        }\n\n        return tex;\n    },\n\n    // returns the name of this expression's constructor as a string\n    // only used for testing and debugging (the ugly regex is for IE8)\n    name: function() {\n        if (this.func.name) {\n            return this.func.name;\n        } else {\n            return this.func.toString().match(/^function\\s*([^\\s(]+)/)[1];\n        }\n    },\n\n    // returns a string representing current node structure\n    repr: function() {\n        return this.name() + \"(\" + _.map(this.args(), function(arg) {\n            return _.isString(arg) ? arg : arg.repr();\n        }).join(\",\") + \")\";\n    },\n\n    // removes all negative signs\n    strip: function() { return this.recurse(\"strip\"); },\n\n    // canonically reorders all commutative elements\n    normalize: function() { return this.recurse(\"normalize\"); },\n\n    // expands the expression\n    expand: function() { return this.recurse(\"expand\"); },\n\n    // naively factors out like terms\n    factor: function(options) { return this.recurse(\"factor\", options); },\n\n    // collect all like terms\n    collect: function(options) { return this.recurse(\"collect\", options); },\n\n    // strict syntactic equality check\n    equals: function(other) {\n        return this.normalize().print() === other.normalize().print();\n    },\n\n    // expand and collect until the expression no longer changes\n    simplify: function(options) {\n        options = _.extend({\n            once: false\n        }, options);\n\n        // Attempt to factor and collect\n        var step1 = this.factor(options);\n        var step2 = step1.collect(options);\n\n        // Rollback if collect didn't do anything\n        if (step1.equals(step2)) {\n            step2 = this.collect(options);\n        }\n\n        // Attempt to expand and collect\n        var step3 = step2.expand(options);\n        var step4 = step3.collect(options);\n\n        // Rollback if collect didn't do anything\n        if (step3.equals(step4)) {\n            step4 = step2.collect(options);\n        }\n\n        // One round of simplification complete\n        var simplified = step4;\n\n        if (options.once || this.equals(simplified)) {\n            return simplified;\n        } else {\n            return simplified.simplify(options);\n        }\n    },\n\n    // check whether this expression is simplified\n    isSimplified: function() {\n        return this.equals(this.simplify());\n    },\n\n    // return the child nodes of this node\n    exprArgs: function() {\n        return _.filter(this.args(), function(arg) {\n            return arg instanceof Expr;\n        });\n    },\n\n    // return the variables (function and non) within the expression\n    getVars: function(excludeFunc) {\n        return _.uniq(_.flatten(_.invoke(this.exprArgs(), \"getVars\", excludeFunc))).sort();\n    },\n\n    getConsts: function() {\n        return _.uniq(_.flatten(_.invoke(this.exprArgs(), \"getConsts\"))).sort();\n    },\n\n    getUnits: function() {\n        return _.flatten(_.invoke(this.exprArgs(), \"getUnits\"));\n    },\n\n    // check whether this expression node is of a particular type\n    is: function(func) {\n        return this instanceof func;\n    },\n\n    // check whether this expression has a particular node type\n    has: function(func) {\n        if (this instanceof func) {\n            return true;\n        }\n        return _.any(this.exprArgs(), function(arg) { return arg.has(func); });\n    },\n\n    // raise this expression to a given exponent\n    // most useful for eventually implementing i^3 = -i, etc.\n    raiseToThe: function(exp) {\n        return new Pow(this, exp);\n    },\n\n    // does this expression have a specific rendering hint?\n    // rendering hints are picked up while parsing, but are lost during transformations\n    isSubtract: function() { return false; },\n    isDivide:  function() { return false; },\n    isRoot:  function() { return false; },\n\n    // whether this node needs an explicit multiplication sign if following a Num\n    needsExplicitMul: function() {\n        return this.args()[0].needsExplicitMul();\n    },\n\n    // check that the variables in both expressions are the same\n    sameVars: function(other) {\n        var vars1 = this.getVars();\n        var vars2 = other.getVars();\n\n        // the other Expr can have more variables than this one\n        // this lets you multiply equations by other variables\n        var same = function(array1, array2) {\n            return !_.difference(array1, array2).length;\n        };\n\n        var lower = function(array) {\n            return _.uniq(_.invoke(array, \"toLowerCase\")).sort();\n        };\n\n        var equal = same(vars1, vars2);\n        var equalIgnoringCase = same(lower(vars1), lower(vars2));\n\n        return {equal: equal, equalIgnoringCase: equalIgnoringCase};\n    },\n\n    // semantic equality check, call after sameVars() to avoid potential false positives\n    // plug in random numbers for the variables in both expressions\n    // if they both consistently evaluate the same, then they're the same\n    compare: function(other) {\n        // equation comparisons are handled by Eq.compare()\n        if (other instanceof Eq) {\n            return false;\n        }\n\n        var varList = _.union(\n            this.getVars(/* excludeFunc */ true),\n            other.getVars(/* excludeFunc */ true));\n\n        // If the numbers are large we would like to do a relative comparison\n        // rather than an absolute one, but if they're small enough then an\n        // absolute comparison makes more sense\n        var getDelta = function(num1, num2) {\n            if (Math.abs(num1) < 1 || Math.abs(num2) < 1) {\n                return Math.abs(num1 - num2);\n            } else {\n                return Math.abs(1 - num1 / num2);\n            }\n        };\n\n        var equalNumbers = function(num1, num2) {\n            var delta = getDelta(num1, num2);\n            return ((num1 === num2) || /* needed if either is +/- Infinity */\n                    (isNaN(num1) && isNaN(num2)) ||\n                    (delta < Math.pow(10, -TOLERANCE)));\n        };\n\n        // if no variables, only need to evaluate once\n        if (!varList.length && !this.has(Unit) && !other.has(Unit)) {\n            return equalNumbers(this.eval(), other.eval());\n        }\n\n        // collect here to avoid sometimes dividing by zero, and sometimes not\n        // it is better to be deterministic, e.g. x/x -> 1\n        // TODO(alex): may want to keep track of assumptions as they're made\n        var expr1 = this.collect();\n        var expr2 = other.collect();\n\n        var unitList1 = this.getUnits();\n        var unitList2 = other.getUnits();\n        if (!_.isEqual(unitList1, unitList2)) {\n            return false;\n        }\n\n        // Compare at a set number (currently 12) of points to determine\n        // equality.\n        //\n        // `range` (and `vars`) is the only variable that varies through the\n        // iterations. For each of range = 10, 100, and 1000, each random\n        // variable is picked from (-range, range).\n        //\n        // Note that because there are 12 iterations and three ranges, each\n        // range is checked four times.\n        for (var i = 0; i < ITERATIONS; i++) {\n\n            var vars = {};\n\n            // One third total iterations each with range 10, 100, and 1000\n            var range = Math.pow(10, 1 + Math.floor(3 * i / ITERATIONS));\n\n            // Half of the iterations should only use integer values.\n            // This is because expressions like (-2)^x are common but result\n            // in NaN when evaluated in JS with non-integer values of x.\n            // Without this, (-2)^x and (-2)^(x+1) both end up always being NaN\n            // and thus equivalent. With this, the most common failure case is\n            // avoided. However, less common cases such as (-2)^(x+0.1) and\n            // (-2)^(x+1.1) will still both evaluate to NaN and result in a\n            // false positive.\n            //\n            // Note that the above is only true in vanilla JS Number-land,\n            // which has no concept of complex numbers. The solution is simple:\n            // Integrate a library for handling complex numbers.\n            //\n            // TODO(alex): Add support for complex numbers, then remove this.\n            var useFloats = i % 2 === 0;\n\n            _.each(varList, function(v) {\n                vars[v] = useFloats ? randomFloat(-range, range)\n                                    : _.random(-range, range);\n            });\n\n            var equal;\n            if (expr1.has(Func) || expr2.has(Func) ||\n                    expr1.has(Unit) || expr2.has(Unit)) {\n\n                var result1 = expr1.partialEval(vars);\n                var result2 = expr2.partialEval(vars);\n\n                equal = result1.simplify().equals(result2.simplify());\n            } else {\n                var result1 = expr1.eval(vars);\n                var result2 = expr2.eval(vars);\n\n                equal = equalNumbers(result1, result2);\n            }\n\n            if (!equal) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    // evaluate as much of the expression as possible\n    partialEval: function(vars) {\n        if (this instanceof Unit) {\n            return this;\n        } else if (!this.has(Func)) {\n            return new Float(this.eval(vars).toFixed(TOLERANCE)).collect();\n        } else if (this instanceof Func) {\n            return new Func(this.symbol, this.arg.partialEval(vars));\n        } else {\n            return this.recurse(\"partialEval\", vars);\n        }\n    },\n\n    // check that the structure of both expressions is the same\n    // should only be done after compare() returns true to avoid false positives\n    sameForm: function(other) {\n        return this.tex() === other.tex();\n    },\n\n    // returns the GCD of this expression and the given factor\n    findGCD: function(factor) {\n        return this.equals(factor) ? factor : Num.One;\n    },\n\n    // return this expression's denominator\n    getDenominator: function() {\n        return Num.One;\n    },\n\n    // return this expression as a Mul\n    asMul: function() {\n        return new Mul(Num.One, this);\n    },\n\n    // TODO(alex): rename to isDefinitePositive or similar?\n    // return whether this expression is 100% positive\n    isPositive: abstract,\n\n    // TODO(alex): rename to hasNegativeSign or similar?\n    // return whether this expression has a negative sign\n    isNegative: function() { return false; },\n\n    // return a factor of this expression that is 100% positive\n    asPositiveFactor: function() {\n        return this.isPositive() ? this : Num.One;\n    },\n\n    // return a copy of the expression with a new hint set (preserves hints)\n    addHint: function(hint) {\n        if (!hint) {\n            return this;\n        }\n\n        var expr = this.construct(this.args());\n        expr.hints = _.clone(this.hints);\n        expr.hints[hint] = true;\n        return expr;\n    },\n\n    hints: {\n        parens: false\n    },\n\n    // currently unused!\n    asExpr: function() { return this; },\n\n    // complete parse by performing a few necessary transformations\n    completeParse: function() { return this.recurse(\"completeParse\"); },\n\n    abs: abstract,\n\n    negate: function() {\n        return new Mul(Num.Neg, this);\n    }\n});\n\n\n/* abstract sequence node */\nfunction Seq() {}\nSeq.prototype = new Expr();\n\n_.extend(Seq.prototype, {\n    args: function() { return this.terms; },\n\n    normalize: function() {\n        var terms = _.sortBy(_.invoke(this.terms, \"normalize\"), function(term) {\n            return term.print();\n        });\n\n        return new this.func(terms);\n    },\n\n    expand: function() {\n        return this.recurse(\"expand\").flatten();\n    },\n\n    // partition the sequence into its numeric and non-numeric parts\n    // makes no guarantees about the validity of either part!\n    partition: function() {\n        var terms = _.groupBy(this.terms, function(term) {\n            return term instanceof Num;\n        });\n\n        // XXX using a boolean as a key just converts it to a string. I don't\n        // think this code was written with that in mind. Probably doesn't\n        // matter except for readability.\n        var numbers = terms[true] || [];\n        var others = terms[false] || [];\n\n        return [new this.func(numbers), new this.func(others)];\n    },\n\n    // ensure that sequences have 2+ terms and no nested sequences of the same type\n    // this is a shallow flattening and will return a non-Seq if terms.length <= 1\n    flatten: function() {\n        var type = this;\n        var terms = _.reject(this.terms, function(term) {\n            return term.equals(type.identity);\n        });\n\n        if (terms.length === 0) {\n            return type.identity;\n        }\n        if (terms.length === 1) {\n            return terms[0];\n        }\n\n        var grouped = _.groupBy(terms, function(term) {\n            return term instanceof type.func;\n        });\n\n        // same contains the children which are Seqs of the same type as this Seq\n        var same = grouped[true] || [];\n        var others = grouped[false] || [];\n\n        var flattened = others.concat(_.flatten(_.pluck(same, \"terms\"), /* shallow: */ true));\n        return new type.func(flattened);\n    },\n\n    // the identity associated with the sequence\n    identity: undefined,\n\n    // reduce a numeric sequence to a Num\n    reduce: abstract,\n\n    isPositive: function() {\n        var terms = _.invoke(this.terms, \"collect\");\n        return _.all(_.invoke(terms, \"isPositive\"));\n    },\n\n    // return a new Seq with a given term replaced by a different term\n    // (or array of terms). given term can be passed directly, or by index\n    // if no new term is provided, the old one is simply removed\n    replace: function(oldTerm, newTerm) {\n        var index;\n\n        if (oldTerm instanceof Expr) {\n            index = _.indexOf(this.terms, oldTerm);\n        } else {\n            index = oldTerm;\n        }\n\n        var newTerms = [];\n        if (_.isArray(newTerm)) {\n            newTerms = newTerm;\n        } else if (newTerm) {\n            newTerms = [newTerm];\n        }\n\n        var terms = this.terms.slice(0, index)\n                    .concat(newTerms)\n                    .concat(this.terms.slice(index + 1));\n\n        return new this.func(terms);\n    },\n\n    // syntactic sugar for replace()\n    remove: function(term) {\n        return this.replace(term);\n    },\n\n    getDenominator: function() {\n        // TODO(alex): find and return LCM\n        return new Mul(_.invoke(this.terms, \"getDenominator\")).flatten();\n    }\n});\n\n\n/* sequence of additive terms */\nfunction Add() {\n    if (arguments.length === 1) {\n        this.terms = arguments[0];\n    } else {\n        this.terms = _.toArray(arguments);\n    }\n}\nAdd.prototype = new Seq();\n\n_.extend(Add.prototype, {\n    func: Add,\n\n    eval: function(vars, options) {\n        return _.reduce(this.terms, function(memo, term) { return memo + term.eval(vars, options); }, 0);\n    },\n\n    codegen: function() {\n        return _.map(this.terms, function(term) {\n            return \"(\" + term.codegen() + \")\";\n        }).join(\" + \") || \"0\";\n    },\n\n    print: function() {\n        return _.invoke(this.terms, \"print\").join(\"+\");\n    },\n\n    tex: function() {\n        var tex = \"\";\n\n        _.each(this.terms, function(term) {\n            if (!tex || term.isSubtract()) {\n                tex += term.tex();\n            } else {\n                tex += \"+\" + term.tex();\n            }\n        });\n\n        return tex;\n    },\n\n    collect: function(options) {\n        var terms = _.invoke(this.terms, \"collect\", options);\n\n        // [Expr expr, Num coefficient]\n        var pairs = [];\n\n        _.each(terms, function(term) {\n            if (term instanceof Mul) {\n                var muls = term.partition();\n                pairs.push([muls[1].flatten(), muls[0].reduce(options)]);\n            } else if (term instanceof Num) {\n                pairs.push([Num.One, term]);\n            } else {\n                pairs.push([term, Num.One]);\n            }\n        });\n\n        // { (Expr expr).print(): [[Expr expr, Num coefficient]] }\n        var grouped = _.groupBy(pairs, function(pair) {\n            return pair[0].normalize().print();\n        });\n\n        var collected = _.compact(_.map(grouped, function(pairs) {\n            var expr = pairs[0][0];\n            var sum = new Add(_.zip.apply(_, pairs)[1]);\n            var coefficient = sum.reduce(options);\n            return new Mul(coefficient, expr).collect(options);\n        }));\n\n        // TODO(alex): use the Pythagorean identity here\n        // e.g. x*sin^2(y) + x*cos^2(y) -> x\n\n        return new Add(collected).flatten();\n    },\n\n    // naively factor out anything that is common to all terms\n    // if options.keepNegative is specified, won't factor out a common -1\n    factor: function(options) {\n        options = _.extend({\n            keepNegative: false\n        }, options);\n\n        var terms = _.invoke(this.terms, \"collect\");\n        var factors;\n\n        if (terms[0] instanceof Mul) {\n            factors = terms[0].terms;\n        } else {\n            factors = [terms[0]];\n        }\n\n        _.each(_.rest(this.terms), function(term) {\n            factors = _.map(factors, function(factor) {\n                return term.findGCD(factor);\n            });\n        });\n\n        if (!options.keepNegative && this.isNegative()) {\n            factors.push(Num.Neg);\n        }\n\n        factors = new Mul(factors).flatten().collect();\n\n        var remainder = _.map(terms, function(term) {\n            return Mul.handleDivide(term, factors).simplify();\n        });\n        remainder = new Add(remainder).flatten();\n\n        return Mul.createOrAppend(factors, remainder).flatten();\n    },\n\n    reduce: function(options) {\n        return _.reduce(this.terms, function(memo, term) {\n            return memo.add(term, options);\n        }, this.identity);\n    },\n\n    needsExplicitMul: function() { return false; },\n\n    isNegative: function() {\n        var terms = _.invoke(this.terms, \"collect\");\n        return _.all(_.invoke(terms, \"isNegative\"));\n    },\n\n    negate: function() {\n        return new Add(_.invoke(this.terms, \"negate\"));\n    }\n});\n\n\n/* sequence of multiplicative terms */\nfunction Mul() {\n    if (arguments.length === 1) {\n        this.terms = arguments[0];\n    } else {\n        this.terms = _.toArray(arguments);\n    }\n}\nMul.prototype = new Seq();\n\n_.extend(Mul.prototype, {\n    func: Mul,\n\n    eval: function(vars, options) {\n        return _.reduce(this.terms, function(memo, term) { return memo * term.eval(vars, options); }, 1);\n    },\n\n    codegen: function() {\n        return _.map(this.terms, function(term) {\n            return \"(\" + term.codegen() + \")\";\n        }).join(\" * \") || \"0\";\n    },\n\n    print: function() {\n        return _.map(this.terms, function(term) {\n            return (term instanceof Add) ? \"(\" + term.print() + \")\" : term.print();\n        }).join(\"*\");\n    },\n\n    getUnits: function() {\n        var tmUnits = _\n            .chain(this.terms)\n            .map(function(term) {\n                return term.getUnits();\n            })\n            .flatten()\n            .value();\n\n        tmUnits.sort(function(a, b) {\n            return a.unit < b.unit;\n        });\n\n        return tmUnits;\n    },\n\n    // since we don't care about commutativity, we can render a Mul any way we choose\n    // so we follow convention: first any negatives, then any numbers, then everything else\n    tex: function() {\n        var cdot = \" \\\\cdot \";\n\n        var terms = _.groupBy(this.terms, function(term) {\n            if (term.isDivide()) {\n                return \"inverse\";\n            } else if (term instanceof Num) {\n                return \"number\";\n            } else {\n                return \"other\";\n            }\n        });\n\n        var inverses = terms.inverse || [];\n        var numbers = terms.number || [];\n        var others = terms.other || [];\n\n        var negatives = \"\";\n        var numerator;\n\n        // check all the numbers to see if there is a rational we can extract,\n        // since we would like 1/2x/y to come out as \\frac{1}{2}\\frac{x}{y},\n        // and not \\frac{1x}{2y}.\n        for (var i = 0; i < numbers.length; i++) {\n            var isRational = numbers[i] instanceof Rational &&\n                                !(numbers[i] instanceof Int);\n            if (isRational && others.length > 0 && inverses.length > 0) {\n                var withThisRemoved = numbers.slice();\n                withThisRemoved.splice(i, 1);\n                var newTerms = withThisRemoved.concat(inverses).concat(others);\n                return numbers[i].tex() + new Mul(newTerms).tex();\n            }\n        }\n\n        numbers = _.compact(_.map(numbers, function(term) {\n            var hasDenom = (term instanceof Rational) && !(term instanceof Int);\n            var shouldPushDown = !term.hints.fraction || inverses.length > 0;\n            if (hasDenom && shouldPushDown) {\n                // e.g. 3x/4 -> 3/4*x (internally) -> 3x/4 (rendered)\n                inverses.push(new Pow(new Int(term.d), Num.Div));\n                var number = new Int(term.n);\n                number.hints = term.hints;\n                return _.any(term.hints) ? number : null;\n            } else {\n                return term;\n            }\n        }));\n\n        if (numbers.length === 0 && others.length === 1) {\n            // e.g. (x+y)/z -> \\frac{x+y}{z}\n            numerator = others[0].tex();\n        } else {\n            var tex = \"\";\n\n            _.each(numbers, function(term) {\n                if (term.hints.subtract && term.hints.entered) {\n                    negatives += \"-\";\n                    tex += (tex ? cdot : \"\") + term.abs().tex();\n                } else if ((term instanceof Int) && (term.n === -1) &&\n                    (term.hints.negate || term.hints.subtract)) {\n                    // e.g. -1*-1 -> --1\n                    // e.g. -1*x -> -x\n                    negatives += \"-\";\n                } else {\n                    // e.g. 2*3 -> 2(dot)3\n                    tex += (tex ? cdot : \"\") + term.tex();\n                }\n            });\n\n            _.each(others, function(term) {\n                if (term.needsExplicitMul()) {\n                    // e.g. 2*2^3 -> 2(dot)2^3\n                    tex += (tex ? cdot : \"\") + term.tex();\n                } else if (term instanceof Add) {\n                    // e.g. (a+b)*c -> (a+b)c\n                    tex += \"(\" + term.tex() + \")\";\n                } else {\n                    // e.g. a*b*c -> abc\n                    tex += term.tex();\n                }\n            });\n\n            numerator = tex ? tex : \"1\";\n        }\n\n        if (!inverses.length) {\n            return negatives + numerator;\n        } else {\n            var denominator = new Mul(_.invoke(inverses, \"asDivide\")).flatten().tex();\n            return negatives + \"\\\\frac{\" + numerator + \"}{\" + denominator + \"}\";\n        }\n    },\n\n    strip: function() {\n        var terms = _.map(this.terms, function(term) {\n            return term instanceof Num ? term.abs() : term.strip();\n        });\n        return new Mul(terms).flatten();\n    },\n\n    // expand numerator and denominator separately\n    expand: function() {\n\n        var isAdd = function(term) {\n            return term instanceof Add;\n        };\n\n        var isInverse = function(term) {\n            return term instanceof Pow && term.exp.isNegative();\n        };\n\n        var isInverseAdd = function(term) {\n            return isInverse(term) && isAdd(term.base);\n        };\n\n        var mul = this.recurse(\"expand\").flatten();\n\n        var hasAdd = _.any(mul.terms, isAdd);\n        var hasInverseAdd = _.any(mul.terms, isInverseAdd);\n\n        if (!(hasAdd || hasInverseAdd)) {\n            return mul;\n        }\n\n        var terms = _.groupBy(mul.terms, isInverse);\n        var normals = terms[false] || [];\n        var inverses = terms[true] || [];\n\n        if (hasAdd) {\n            var grouped = _.groupBy(normals, isAdd);\n            var adds = grouped[true] || [];\n            var others = grouped[false] || [];\n\n            // loop over each additive sequence\n            var expanded = _.reduce(adds, function(expanded, add) {\n                // loop over each expanded array of terms\n                return _.reduce(expanded, function(temp, array) {\n                    // loop over each additive sequence's terms\n                    return temp.concat(_.map(add.terms, function(term) {\n                        return array.concat(term);\n                    }));\n                }, []);\n            }, [[]]);\n\n            // join each fully expanded array of factors with remaining multiplicative factors\n            var muls = _.map(expanded, function(array) {\n                return new Mul(others.concat(array)).flatten();\n            });\n\n            normals = [new Add(muls)];\n        }\n\n        if (hasInverseAdd) {\n            var denominator = new Mul(_.invoke(inverses, \"getDenominator\")).flatten();\n            inverses = [new Pow(denominator.expand(), Num.Div)];\n        }\n\n        return new Mul(normals.concat(inverses)).flatten();\n    },\n\n    factor: function(options) {\n        var factored = this.recurse(\"factor\", options).flatten();\n        if (! (factored instanceof Mul)) {\n            return factored;\n        }\n\n        // Combine any factored out Rationals into one, but don't collect\n        var grouped = _.groupBy(factored.terms, function(term) {\n            return term instanceof Rational;\n        });\n\n        // Could also accomplish this by passing a new option\n        // e.g. return  memo.mul(term, {autocollect: false});\n        // TODO(alex): Decide whether this is a good use of options or not\n        var rational = _.reduce(grouped[true], function(memo, term) {\n            return {n: memo.n * term.n, d: memo.d * term.d};\n        }, {n: 1, d: 1});\n\n        if (rational.d === 1) {\n            rational = new Int(rational.n);\n        } else {\n            rational = new Rational(rational.n, rational.d);\n        }\n\n        return new Mul((grouped[false] || []).concat(rational)).flatten();\n    },\n\n    collect: function(options) {\n        var partitioned = this.recurse(\"collect\", options).partition();\n        var number = partitioned[0].reduce(options);\n\n        // e.g. 0*x -> 0\n        if (number.eval() === 0) {\n            return Num.Zero;\n        }\n\n        var others = partitioned[1].flatten();\n\n        // e.g. 2*2 -> 4\n        // e.g. 2*2*x -> 4*x\n        if (!(others instanceof Mul)) {\n            return new Mul(number, others).flatten();\n        }\n\n        others = others.terms;\n\n        // [Expr base, Expr exp]\n        var pairs = [];\n\n        _.each(others, function(term) {\n            if (term instanceof Pow) {\n                pairs.push([term.base, term.exp]);\n            } else {\n                pairs.push([term, Num.One]);\n            }\n        });\n\n        // {(Expr base).print(): [[Expr base, Expr exp]]}\n        var grouped = _.groupBy(pairs, function(pair) {\n            return pair[0].normalize().print();\n        });\n\n        // [[Expr base, Expr exp]]\n        var summed = _.compact(_.map(grouped, function(pairs) {\n            var base = pairs[0][0];\n            var sum = new Add(_.zip.apply(_, pairs)[1]);\n            var exp = sum.collect(options);\n\n            if (exp instanceof Num && exp.eval() === 0) {\n                return null;\n            } else {\n                return [base, exp];\n            }\n        }));\n\n        // XXX `pairs` is shadowed four or five times in this function\n        var pairs = _.groupBy(summed, function(pair) {\n            if (pair[0] instanceof Trig && pair[0].isBasic()) {\n                return \"trig\";\n            } else if (pair[0] instanceof Log) {\n                return \"log\";\n            } else {\n                return \"expr\";\n            }\n        });\n        var trigs = pairs.trig || [];\n        var logs = pairs.log || [];\n        var exprs = pairs.expr || [];\n\n        if (trigs.length > 1) {\n            // combine sines and cosines into other trig functions\n\n            // {Trig.arg.print(): [[Trig base, Expr exp]]}\n            var byArg = _.groupBy(trigs, function(pair) {\n                return pair[0].arg.normalize().print();\n            });\n\n            trigs = [];\n            _.each(byArg, function(pairs) {\n                var arg = pairs[0][0].arg;\n\n                // {Trig.type: Expr exp}\n                var funcs = {sin: Num.Zero, cos: Num.Zero};\n                _.each(pairs, function(pair) {\n                    funcs[pair[0].type] = pair[1];\n                });\n\n                if (Mul.handleNegative(funcs.sin).collect(options).equals(funcs.cos)) {\n                    // e.g. sin^x(y)/cos^x(y) -> tan^x(y)\n                    if (funcs.cos.isNegative()) {\n                        funcs = {tan: funcs.sin};\n                    } else {\n                        funcs = {cot: funcs.cos};\n                    }\n                }\n\n                // TODO(alex): combine even if exponents not a perfect match\n                // TODO(alex): transform 1/sin and 1/cos into csc and sec\n\n                _.each(funcs, function(exp, type) {\n                    trigs.push([new Trig(type, arg), exp]);\n                });\n            });\n        }\n\n        if (logs.length > 1) {\n            // combine logs with the same base\n\n            // {Log.base.print(): [[Log base, Expr exp]]}\n            var byBase = _.groupBy(logs, function(pair) {\n                return pair[0].base.normalize().print();\n            });\n\n            logs = [];\n\n            _.each(byBase, function(pairs) {\n                // only combine two logs of the same base, otherwise commutative\n                // differences result in different equally valid output\n                // e.g. ln(x)/ln(z)*ln(y) -> log_z(x)*ln(y)\n                // e.g. ln(x)*ln(y)/ln(z) -> ln(x)*log_z(y)\n                if (pairs.length === 2 &&\n                    Mul.handleNegative(pairs[0][1]).collect(options).equals(pairs[1][1])) {\n                    // e.g. ln(x)^y/ln(b)^y -> log_b(x)^y\n                    if (pairs[0][1].isNegative()) {\n                        logs.push([new Log(pairs[0][0].power, pairs[1][0].power), pairs[1][1]]);\n                    } else {\n                        logs.push([new Log(pairs[1][0].power, pairs[0][0].power), pairs[0][1]]);\n                    }\n                } else {\n                    logs = logs.concat(pairs);\n                }\n            });\n\n            // TODO(alex): combine if all inverses are the same e.g. ln(y)*ln(z)/ln(x)/ln(x)\n        }\n\n        pairs = trigs.concat(logs).concat(exprs);\n\n        var collected = _.map(pairs, function(pair) {\n            return new Pow(pair[0], pair[1]).collect(options);\n        });\n\n        return new Mul([number].concat(collected)).flatten();\n    },\n\n    isSubtract: function() {\n        return _.any(this.terms, function(term) {\n            return term instanceof Num && term.hints.subtract;\n        });\n    },\n\n    // factor a single -1 in to the Mul\n    // combine with a Num if all Nums are positive, else add as a term\n    factorIn: function(hint) {\n        var partitioned = this.partition();\n        var numbers = partitioned[0].terms;\n        var fold = numbers.length && _.all(numbers, function(num) {\n            return num.n > 0;\n        });\n\n        if (fold) {\n            // e.g. - x*2*3 -> x*-2*3\n            var num = numbers[0].negate();\n            num.hints = numbers[0].hints;\n            return this.replace(numbers[0], num.addHint(hint));\n        } else {\n            // e.g. - x*y -> -1*x*y\n            // e.g. - x*-2 -> -1*x*-2\n            return new Mul([Num.negativeOne(hint)].concat(this.terms));\n        }\n    },\n\n    // factor out a single hinted -1 (assume it is the division hint)\n    // TODO(alex): make more general or rename to be more specific\n    factorOut: function() {\n        var factored = false;\n        var terms = _.compact(_.map(this.terms, function(term, i, list) {\n            if (!factored && term instanceof Num && term.hints.divide) {\n                factored = true;\n                return term.n !== -1 ? term.negate() : null;\n            } else {\n                return term;\n            }\n        }));\n\n        if (terms.length === 1) {\n            return terms[0];\n        } else {\n            return new Mul(terms);\n        }\n    },\n\n    reduce: function(options) {\n        return _.reduce(this.terms, function(memo, term) {\n            return memo.mul(term, options);\n        }, this.identity);\n    },\n\n    findGCD: function(factor) {\n        return new Mul(_.invoke(this.terms, \"findGCD\", factor)).flatten();\n    },\n\n    asMul: function() {\n        return this;\n    },\n\n    asPositiveFactor: function() {\n        if (this.isPositive()) {\n            return this;\n        } else {\n            var terms = _.invoke(this.collect().terms, \"asPositiveFactor\");\n            return new Mul(terms).flatten();\n        }\n    },\n\n    isNegative: function() {\n        return _.any(_.invoke(this.collect().terms, \"isNegative\"));\n    },\n\n    fold: function() {\n        return Mul.fold(this);\n    },\n\n    negate: function() {\n        var isNum = function(expr) { return expr instanceof Num; };\n        if (_.any(this.terms, isNum)) {\n            var num = _.find(this.terms, isNum);\n            return this.replace(num, num.negate());\n        } else {\n            return new Mul([Num.Neg].concat(this.terms));\n        }\n    }\n});\n\n// static methods for the sequence types\n_.each([Add, Mul], function(type) {\n    _.extend(type, {\n        // create a new sequence unless left is already one (returns a copy)\n        createOrAppend: function(left, right) {\n            if (left instanceof type) {\n                return new type(left.terms.concat(right));\n            } else {\n                return new type(left, right);\n            }\n        }\n    });\n});\n\n_.extend(Mul, {\n    // negative signs should be folded into numbers whenever possible\n    // never fold into a Num that's already negative or a Mul that has a negative Num\n    // an optional hint is kept track of to properly render user input\n    // an empty hint means negation\n    handleNegative: function(expr, hint) {\n        if (expr instanceof Num && expr.n > 0) {\n            // e.g. - 2 -> -2\n            var negated = expr.negate();\n            // TODO(alex): rework hint system so that this isn't necessary\n            negated.hints = expr.hints;\n            return negated.addHint(hint);\n        } else if (expr instanceof Mul) {\n            // e.g. - x*2*3 -> x*-2*3\n            // e.g. - x*y -> -1*x*y\n            // e.g. - x*-2 -> -1*x*-2\n            return expr.factorIn(hint);\n        } else {\n            // e.g. - x -> -1*x\n            return new Mul(Num.negativeOne(hint), expr);\n        }\n    },\n\n    // division can create either a Rational or a Mul\n    handleDivide: function(left, right) {\n\n        // dividing by a Mul is the same as repeated division by its terms\n        if (right instanceof Mul) {\n            var first = Mul.handleDivide(left, right.terms[0]);\n            var rest = new Mul(_.rest(right.terms)).flatten();\n            return Mul.handleDivide(first, rest);\n        }\n\n        var isInt = function(expr) { return expr instanceof Int; };\n        var isRational = function(expr) { return expr instanceof Rational; };\n\n        // for simplification purposes, fold Ints into Rationals if possible\n        // e.g. 3x / 4 -> 3/4 * x (will still render as 3x/4)\n        if (isInt(right) && left instanceof Mul && _.any(left.terms, isInt)) {\n\n            // search from the right\n            var reversed = left.terms.slice().reverse();\n            var num = _.find(reversed, isRational);\n\n            if (!isInt(num)) {\n                return new Mul(left.terms.concat([new Rational(1, right.n).addHint(\"fraction\")]));\n            }\n\n            var rational = new Rational(num.n, right.n);\n            rational.hints = num.hints;\n\n            // in the case of something like 1/3 * 6/8, we want the\n            // 6/8 to be considered a fraction, not just a division\n            if (num === reversed[0]) {\n                rational = rational.addHint(\"fraction\");\n            }\n\n            var result;\n            if (num.n < 0 && right.n < 0) {\n                rational.d = -rational.d;\n                return left.replace(num, [Num.Neg, rational]);\n            } else {\n                return left.replace(num, rational);\n            }\n        }\n\n        var divide = function(a, b) {\n            if (b instanceof Int) {\n                if (a instanceof Int) {\n                    if (a.n < 0 && b.n < 0) {\n                        // e.g. -2 / -3 -> -1*-2/3\n                        return [Num.Neg, new Rational(a.n, -b.n).addHint(\"fraction\")];\n                    } else {\n                        // e.g. 2 / 3 -> 2/3\n                        // e.g. -2 / 3 -> -2/3\n                        // e.g. 2 / -3 -> -2/3\n                        return [new Rational(a.n, b.n).addHint(\"fraction\")];\n                    }\n                } else {\n                    // e.g. x / 3 -> x*1/3\n                    // e.g. x / -3 -> x*-1/3\n                    var inverse = new Rational(1, b.eval());\n                    if (b.eval() < 0) {\n                        return [a, inverse.addHint(\"negate\")];\n                    } else {\n                        return [a, inverse];\n                    }\n                }\n            } else {\n                var pow;\n\n                if (b instanceof Trig && b.exp) {\n                    // e.g. sin^2(x) -> sin(x)^2\n                    var exp = b.exp;\n                    b.exp = undefined;\n                    b = new Pow(b, exp);\n                }\n\n                if (b instanceof Pow) {\n                    // e.g. (x^2) ^ -1 -> x^-2\n                    // e.g. (x^y) ^ -1 -> x^(-1*y)\n                    // e.g. (x^(yz)) ^ -1 -> x^(-1*y*z)\n                    pow = new Pow(b.base, Mul.handleNegative(b.exp, \"divide\"));\n                } else {\n                    // e.g. x ^ -1 -> x^-1\n                    pow = new Pow(b, Num.Div);\n                }\n\n                if (a instanceof Int && a.n === 1) {\n                    // e.g. 1 / x -> x^-1\n                    return [pow];\n                } else {\n                    // e.g. 2 / x -> 2*x^-1\n                    return [a, pow];\n                }\n            }\n        };\n\n        if (left instanceof Mul) {\n            var divided = divide(_.last(left.terms), right);\n            return new Mul(_.initial(left.terms).concat(divided));\n        } else {\n            var divided = divide(left, right);\n            return new Mul(divided).flatten();\n        }\n    },\n\n    // fold negative signs into numbers if possible\n    // negative signs are not the same as multiplying by negative one!\n    // e.g. -x      ->  -1*x    simplified\n    // e.g. -2*x    ->  -2*x    simplified\n    // e.g. -x*2    ->  -1*x*2  not simplified -> x*-2 simplified\n    // e.g. -1*x*2  ->  -1*x*2  not simplified\n\n    // also fold multiplicative terms into open Trig and Log nodes\n    // e.g. (sin x)*x -> sin(x)*x\n    // e.g. sin(x)*x -> sin(x)*x\n    // e.g. sin(x)*(x) -> sin(x)*x\n    // e.g. sin(x)*sin(y) -> sin(x)*sin(y)\n    fold: function(expr) {\n        if (expr instanceof Mul) {\n            // assuming that this will be second to last\n            var trigLog = _.find(_.initial(expr.terms), function(term) {\n                return (term instanceof Trig || term instanceof Log) && term.hints.open;\n            });\n            var index = _.indexOf(expr.terms, trigLog);\n\n            if (trigLog) {\n                var last = _.last(expr.terms);\n                if (trigLog.hints.parens || last.hints.parens ||\n                          last.has(Trig) || last.has(Log)) {\n                    trigLog.hints.open = false;\n                } else {\n                    var newTrigLog;\n                    if (trigLog instanceof Trig) {\n                        newTrigLog = Trig.create([trigLog.type, trigLog.exp], Mul.createOrAppend(trigLog.arg, last).fold());\n                    } else {\n                        newTrigLog = Log.create(trigLog.base, Mul.createOrAppend(trigLog.power, last).fold());\n                    }\n\n                    if (index === 0) {\n                        return newTrigLog;\n                    } else {\n                        return new Mul(expr.terms.slice(0, index).concat(newTrigLog)).fold();\n                    }\n                }\n            }\n\n            var partitioned = expr.partition();\n            var numbers = partitioned[0].terms;\n\n            var pos = function(num) { return num.n > 0; };\n            var neg = function(num) { return num.n === -1 && num.hints.negate; };\n            var posOrNeg = function(num) { return pos(num) || neg(num); };\n\n            if (numbers.length > 1 &&\n                _.some(numbers, neg) &&\n                _.some(numbers, pos) &&\n                _.every(numbers, posOrNeg)) {\n\n                var firstNeg = _.indexOf(expr.terms, _.find(expr.terms, neg));\n                var firstNum = _.indexOf(expr.terms, _.find(expr.terms, pos));\n\n                // e.g. -x*2 -> x*-2\n                if (firstNeg < firstNum) {\n                    return expr.replace(firstNum,\n                                        expr.terms[firstNum].negate())\n                               .remove(firstNeg);\n                }\n            }\n        }\n\n        // in all other cases, make no change\n        return expr;\n    }\n});\n\n\n/* exponentiation */\nfunction Pow(base, exp) { this.base = base; this.exp = exp; }\nPow.prototype = new Expr();\n\n_.extend(Pow.prototype, {\n    func: Pow,\n    args: function() { return [this.base, this.exp]; },\n\n    eval: function(vars, options) {\n        var evaledBase = this.base.eval(vars, options);\n        var evaledExp = this.exp.eval(vars, options);\n\n        // Math.pow unequivocally returns NaN when provided with both a\n        // negative base and a fractional exponent. However, in some cases, we\n        // know that our exponent is actually valid for use with negative\n        // bases (e.g., (-5)^(1/3)).\n        //\n        // Here, we explicitly check for such cases. We really only handle a\n        // limited subset (by requiring that the exponent is rational with an\n        // odd denominator), but it's still useful.\n        //   See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n        if (evaledBase < 0) {\n            var simplifiedExp = this.exp.simplify();\n\n            // If Float, convert to a Rational to enable the logic below\n            if (simplifiedExp instanceof Float) {\n                var num = simplifiedExp.n;\n                var decimals = (num - num.toFixed()).toString().length - 2;\n                var denominator = Math.pow(10, decimals);\n                var rationalExp = new Rational(num * denominator, denominator);\n                simplifiedExp = rationalExp.simplify();\n            }\n            if (simplifiedExp instanceof Rational) {\n                var oddDenominator = Math.abs(simplifiedExp.d) % 2 === 1;\n                if (oddDenominator) {\n                    var oddNumerator = Math.abs(simplifiedExp.n) % 2 === 1;\n                    var sign = (oddNumerator) ? -1 : 1;\n                    return sign * Math.pow(-1 * evaledBase, evaledExp);\n                }\n            }\n        }\n        return Math.pow(evaledBase, evaledExp);\n    },\n\n    getUnits: function() {\n        return this.base.getUnits().map(function(unit) {\n            return {\n                unit: unit.unit,\n                pow: unit.pow * this.exp.n\n            };\n        }.bind(this));\n    },\n\n    codegen: function() {\n        return \"Math.pow(\" + this.base.codegen() +\n            \", \" + this.exp.codegen() + \")\";\n    },\n\n    print: function() {\n        var base = this.base.print();\n        if (this.base instanceof Seq || this.base instanceof Pow) {\n            base = \"(\" + base + \")\";\n        }\n        return base + \"^(\" + this.exp.print() + \")\";\n    },\n\n    tex: function() {\n        if (this.isDivide()) {\n\n            // e.g. x ^ -1 w/hint -> 1/x\n            return \"\\\\frac{1}{\" + this.asDivide().tex() + \"}\";\n\n        } else if (this.isRoot()) {\n\n            if (this.exp.n !== 1) {\n                error(\"Node marked with hint 'root' does not have exponent \" +\n                      \"of form 1/x.\");\n            }\n\n            if (this.exp.d === 2) {\n                // e.g. x ^ 1/2 w/hint -> sqrt{x}\n                return \"\\\\sqrt{\" + this.base.tex() + \"}\";\n            } else {\n                // e.g. x ^ 1/y w/hint -> sqrt[y]{x}\n                return \"\\\\sqrt[\" + this.exp.d + \"]{\" + this.base.tex() + \"}\";\n            }\n\n        } else if (this.base instanceof Trig && !this.base.isInverse() &&\n            this.exp instanceof Num && this.exp.isSimple() &&\n            this.exp.eval() >= 0) {\n\n            // e.g sin(x) ^ 2 -> sin^2(x)\n            var split = this.base.tex({split: true});\n            return split[0] + \"^{\" + this.exp.tex() + \"}\" + split[1];\n\n        } else {\n\n            // e.g. x ^ y -> x^y\n            var base = this.base.tex();\n            if (this.base instanceof Seq || this.base instanceof Pow ||\n                (this.base instanceof Num && !this.base.isSimple())) {\n                // e.g. a+b ^ c -> (a+b)^c\n                base = \"(\" + base + \")\";\n            } else if (this.base instanceof Trig || this.base instanceof Log) {\n                // e.g. ln(x) ^ 2 -> [ln(x)]^2\n                base = \"[\" + base + \"]\";\n            }\n            return base + \"^{\" + this.exp.tex() + \"}\";\n        }\n    },\n\n    needsExplicitMul: function() {\n        return this.isRoot() ? false : this.base.needsExplicitMul();\n    },\n\n    expand: function() {\n        var pow = this.recurse(\"expand\");\n\n        if (pow.base instanceof Mul) {\n            // e.g. (ab)^c -> a^c*b^c\n\n            var terms = _.map(pow.base.terms, function(term) {\n                return new Pow(term, pow.exp);\n            });\n\n            return new Mul(terms).expand();\n\n        } else if (pow.base instanceof Add && pow.exp instanceof Int && pow.exp.abs().eval() > 1) {\n            // e.g. (a+b)^2 -> a*a+a*b+a*b+b*b\n            // e.g. (a+b)^-2 -> (a*a+a*b+a*b+b*b)^-1\n\n            var positive = pow.exp.eval() > 0;\n            var n = pow.exp.abs().eval();\n\n            var signed = function(mul) {\n                return positive ? mul : new Pow(mul, Num.Div);\n            };\n\n            // compute and cache powers of 2 up to n\n            var cache = { 1: pow.base };\n            for (var i = 2; i <= n; i *= 2) {\n                var mul = new Mul(cache[i / 2], cache[i / 2]);\n                cache[i] = mul.expand().collect();\n            }\n\n            // if n is a power of 2, you're done!\n            if (_.has(cache, n)) {\n                return signed(cache[n]);\n            }\n\n            // otherwise decompose n into powers of 2 ...\n            var indices = _.map(n.toString(2).split(\"\"), function(str, i, list) {\n                return Number(str) * Math.pow(2, list.length - i - 1);\n            });\n            indices = _.without(indices, 0);\n\n            // ... then combine\n            var mul = new Mul(_.pick(cache, indices)).expand().collect();\n            return signed(mul);\n\n        } else if (pow.exp instanceof Add) { // DEFINITELY want behind super-simplify() flag\n            // e.g. x^(a+b) -> x^a*x^b\n\n            var terms = _.map(pow.exp.terms, function(term) {\n                return new Pow(pow.base, term).expand();\n            });\n\n            return new Mul(terms).expand();\n        } else {\n            return pow;\n        }\n    },\n\n    factor: function() {\n        var pow = this.recurse(\"factor\");\n        if (pow.base instanceof Mul) {\n            var terms = _.map(pow.base.terms, function(term) {\n                if (term instanceof Int && pow.exp.equals(Num.Div)) {\n                    // Anything that can be a Rational should be a Rational\n                    // e.g. 2^(-1) -> 1/2\n                    return new Rational(1, term.n);\n                } else {\n                    return new Pow(term, pow.exp);\n                }\n            });\n            return new Mul(terms);\n        } else {\n            return pow;\n        }\n    },\n\n    collect: function(options) {\n\n        if (this.base instanceof Pow) {\n            // collect this first to avoid having to deal with float precision\n            // e.g. sqrt(2)^2 -> 2, not 2.0000000000000004\n            // e.g. (x^y)^z -> x^(yz)\n            var base = this.base.base;\n            var exp = Mul.createOrAppend(this.base.exp, this.exp);\n            return new Pow(base, exp).collect(options);\n        }\n\n        var pow = this.recurse(\"collect\", options);\n\n        var isSimilarLog = function(term) {\n            return term instanceof Log && term.base.equals(pow.base);\n        };\n\n        if (pow.exp instanceof Num &&\n            pow.exp.eval() === 0) {\n\n            // e.g. x^0 -> 1\n            return Num.One;\n\n        } else if (pow.exp instanceof Num &&\n            pow.exp.eval() === 1) {\n\n            // e.g. x^1 -> x\n            return pow.base;\n\n        } else if (isSimilarLog(pow.exp)) {\n\n            // e.g. b^(log_b(x)) -> x\n            return pow.exp.power;\n\n        } else if (pow.exp instanceof Mul &&\n            _.any(pow.exp.terms, isSimilarLog)) {\n\n            // e.g. b^(2*y*log_b(x)) -> x^(2*y)\n            var log = _.find(pow.exp.terms, isSimilarLog);\n            var base = log.power;\n            var exp = pow.exp.remove(log).flatten();\n            return new Pow(base, exp).collect(options);\n\n        } else if (pow.base instanceof Num &&\n            pow.exp instanceof Num) {\n\n            // TODO(alex): Consider encapsualting this logic (and similar logic\n            // elsewhere) into a separate Decimal class for user-entered floats\n            if (options && options.preciseFloats) {\n                // Avoid creating an imprecise float\n                // e.g. 23^1.5 -> 12167^0.5, not ~110.304\n\n                // If you take the root as specified by the denominator and\n                // end up with more digits after the decimal point,\n                // the result is imprecise. This works for rationals as well\n                // as floats, but ideally rationals should be pre-processed\n                // e.g. (1/27)^(1/3) -> 1/3 to avoid most cases.\n                // TODO(alex): Catch such cases and avoid converting to floats.\n                var exp = pow.exp.asRational();\n                var decimalsInBase = pow.base.getDecimalPlaces();\n                var root = new Pow(pow.base, new Rational(1, exp.d));\n                var decimalsInRoot = root.collect().getDecimalPlaces();\n\n                if (decimalsInRoot > decimalsInBase) {\n                    // Collecting over this denominator would result in an\n                    // imprecise float, so avoid doing so.\n                    var newBase = new Pow(pow.base, new Int(exp.n)).collect();\n                    return new Pow(newBase, new Rational(1, exp.d));\n                }\n            }\n\n            // e.g. 4^1.5 -> 8\n            return pow.base.raiseToThe(pow.exp, options);\n        } else {\n            return pow;\n        }\n    },\n\n    // checks whether this Pow represents user-entered division\n    isDivide: function() {\n        var isDiv = function(arg) { return arg instanceof Num && arg.hints.divide; };\n        return isDiv(this.exp) || (this.exp instanceof Mul && _.any(this.exp.terms, isDiv));\n    },\n\n    // assuming this Pow represents user-entered division, returns the denominator\n    asDivide: function() {\n        if (this.exp instanceof Num) {\n            if (this.exp.eval() === -1) {\n                return this.base;\n            } else {\n                var negated = this.exp.negate();\n                negated.hints = _.clone(this.exp.hints);\n                negated.hints.divide = false;\n                return new Pow(this.base, negated);\n            }\n        } else if (this.exp instanceof Mul) {\n            return new Pow(this.base, this.exp.factorOut());\n        } else {\n            error(\"called asDivide() on an Expr that wasn't a Num or Mul\");\n        }\n    },\n\n    isRoot: function() {\n        return this.exp instanceof Rational && this.exp.hints.root;\n    },\n\n    isSquaredTrig: function() {\n        return this.base instanceof Trig && !this.base.isInverse() &&\n            this.exp instanceof Num && this.exp.eval() === 2;\n    },\n\n    // extract whatever denominator makes sense, ignoring hints\n    // if negative exponent, will recursively include the base's denominator as well\n    getDenominator: function() {\n        if (this.exp instanceof Num && this.exp.eval() === -1) {\n            return Mul.createOrAppend(this.base, this.base.getDenominator()).flatten();\n        } else if (this.exp.isNegative()) {\n            var pow = new Pow(this.base, Mul.handleNegative(this.exp).collect());\n            return Mul.createOrAppend(pow, pow.collect().getDenominator()).flatten();\n        } else if (this.base instanceof Num) {\n            return new Pow(this.base.getDenominator(), this.exp).collect();\n        } else {\n            return Num.One;\n        }\n    },\n\n    findGCD: function(factor) {\n        var base, exp;\n        if (factor instanceof Pow) {\n            base = factor.base;\n            exp = factor.exp;\n        } else {\n            base = factor;\n            exp = Num.One;\n        }\n\n        // GCD is only relevant if same base\n        if (this.base.equals(base)) {\n            if (this.exp.equals(exp)) {\n                // exact match\n                // e.g. GCD(x^y^z, x^y^z) -> x^y^z\n                return this;\n            } else if (this.exp instanceof Num && exp instanceof Num) {\n                // two numerical exponents\n                // e.g. GCD(x^3, x^2) -> x^2\n                return new Pow(this.base, Num.min(this.exp, exp)).collect();\n            } else if (this.exp instanceof Num || exp instanceof Num) {\n                // one numerical exponent\n                // e.g. GCD(x^2, x^y) -> 1\n                return Num.One;\n            }\n\n            var expA = this.exp.asMul().partition();\n            var expB = exp.asMul().partition();\n\n            if (expA[1].equals(expB[1])) {\n                // exponents match except for coefficient\n                // e.g. GCD(x^3y, x^y) -> x^y\n                var coefficient = Num.min(expA[0].reduce(), expB[0].reduce());\n                var mul = new Mul(coefficient, expA[1].flatten()).flatten();\n                return new Pow(base, mul).collect();\n            }\n        }\n\n        return Num.One;\n    },\n\n    isPositive: function() {\n        if (this.base.isPositive()) {\n            return true;\n        }\n\n        var exp = this.exp.simplify();\n        return exp instanceof Int && exp.eval() % 2 === 0;\n    },\n\n    asPositiveFactor: function() {\n        if (this.isPositive()) {\n            return this;\n        } else {\n            var exp = this.exp.simplify();\n            if (exp instanceof Int) {\n                var n = exp.eval();\n                if (n > 2) {\n                    // e.g. x^3 -> x^2\n                    return new Pow(this.base, new Int(n-1));\n                } else if (n < -2) {\n                    // e.g. x^-3 -> x^-2\n                    return new Pow(this.base, new Int(n+1));\n                }\n            }\n            return Num.One;\n        }\n    }\n});\n\n_.extend(Pow, {\n    sqrt: function(arg) {\n        return new Pow(arg, Num.Sqrt);\n    },\n\n    nthroot: function(radicand, degree) {\n        var exp = Mul.fold(Mul.handleDivide(new Int(1), degree));\n\n        // FIXME(johnsullivan): If oneOverDegree ends up being a pow object,\n        //     this \"root\" hint is lost between here and when tex() is called.\n        return new Pow(radicand, exp.addHint(\"root\"));\n    },\n});\n\n\n/* logarithm */\nfunction Log(base, power) { this.base = base; this.power = power; }\nLog.prototype = new Expr();\n\n_.extend(Log.prototype, {\n    func: Log,\n    args: function() { return [this.base, this.power]; },\n\n    eval: function(vars, options) {\n        return Math.log(this.power.eval(vars, options)) / Math.log(this.base.eval(vars, options));\n    },\n\n    codegen: function() {\n        return \"(Math.log(\" + this.power.codegen() +\n            \") / Math.log(\" + this.base.codegen() + \"))\";\n    },\n\n    print: function() {\n        var power = \"(\" + this.power.print() + \")\";\n        if (this.isNatural()) {\n            return \"ln\" + power;\n        } else {\n            return \"log_(\" + this.base.print() + \") \" + power;\n        }\n    },\n\n    tex: function() {\n        var power = \"(\" + this.power.tex() + \")\";\n        if (this.isNatural()) {\n            return \"\\\\ln\" + power;\n        } else {\n            return \"\\\\log_{\" + this.base.tex() + \"}\" + power;\n        }\n    },\n\n    collect: function(options) {\n        var log = this.recurse(\"collect\", options);\n\n        if (log.power instanceof Num && log.power.eval() === 1) {\n\n            // e.g. ln(1) -> 0\n            return Num.Zero;\n\n        } else if (log.base.equals(log.power)) {\n\n            // e.g. log_b(b) -> 1\n            return Num.One;\n\n        } else if (log.power instanceof Pow &&\n            log.power.base.equals(log.base)) {\n\n            // e.g. log_b(b^x) -> x\n            return log.power.exp;\n        } else {\n            return log;\n        }\n    },\n\n    expand: function() {\n        var log = this.recurse(\"expand\");\n\n        if (log.power instanceof Mul) {  // might want behind super-simplify() flag\n            // e.g. ln(xy) -> ln(x) + ln(y)\n\n            var terms = _.map(log.power.terms, function(term) {\n                // need to expand again in case new log powers are Pows\n                return new Log(log.base, term).expand();\n            });\n\n            return new Add(terms);\n\n        } else if (log.power instanceof Pow) {\n            // e.g. ln(x^y) -> y*ln(x)\n\n            return new Mul(log.power.exp, new Log(log.base, log.power.base).expand()).flatten();\n        } else if (!log.isNatural()) {\n            // e.g. log_b(x) -> ln(x)/ln(b)\n\n            return Mul.handleDivide(new Log(Const.e, log.power), new Log(Const.e, log.base));\n        } else {\n            return log;\n        }\n    },\n\n    hints: _.extend(Log.prototype.hints, {\n        open: false\n    }),\n\n    isPositive: function() {\n        var log = this.collect();\n\n        if (log.base instanceof Num &&\n            log.power instanceof Num) {\n            return this.eval() > 0;\n        } else {\n            return false;\n        }\n    },\n\n    needsExplicitMul: function() { return false; },\n\n    isNatural: function() { return this.base.equals(Const.e); }\n});\n\n_.extend(Log, {\n    natural: function() { return Const.e; },\n    common: function() { return Num.Ten; },\n\n    create: function(base, power) {\n        var log = new Log(base, power);\n        if (!power.hints.parens) {\n            log = log.addHint(\"open\");\n        }\n        return log;\n    }\n});\n\n\n/* trigonometric functions */\nfunction Trig(type, arg) { this.type = type; this.arg = arg; }\nTrig.prototype = new Expr();\n\n_.extend(Trig.prototype, {\n    func: Trig,\n    args: function() { return [this.type, this.arg]; },\n\n    functions: {\n        sin: {\n            eval: Math.sin,\n            codegen: \"Math.sin((\",\n            tex: \"\\\\sin\",\n            expand: function() { return this; }\n        },\n        cos: {\n            eval: Math.cos,\n            codegen: \"Math.cos((\",\n            tex: \"\\\\cos\",\n            expand: function() { return this; }\n        },\n        tan: {\n            eval: Math.tan,\n            codegen: \"Math.tan((\",\n            tex: \"\\\\tan\",\n            expand: function() {\n                return Mul.handleDivide(Trig.sin(this.arg), Trig.cos(this.arg));\n            }\n        },\n        csc: {\n            eval: function(arg) { return 1 / Math.sin(arg); },\n            codegen: \"(1/Math.sin(\",\n            tex: \"\\\\csc\",\n            expand: function() {\n                return Mul.handleDivide(Num.One, Trig.sin(this.arg));\n            }\n        },\n        sec: {\n            eval: function(arg) { return 1 / Math.cos(arg); },\n            codegen: \"(1/Math.cos(\",\n            tex: \"\\\\sec\",\n            expand: function() {\n                return Mul.handleDivide(Num.One, Trig.cos(this.arg));\n            }\n        },\n        cot: {\n            eval: function(arg) { return 1 / Math.tan(arg); },\n            codegen: \"(1/Math.tan(\",\n            tex: \"\\\\cot\",\n            expand: function() {\n                return Mul.handleDivide(Trig.cos(this.arg), Trig.sin(this.arg));\n            }\n        },\n        arcsin: {\n            eval: Math.asin,\n            codegen: \"Math.asin((\",\n            tex: \"\\\\arcsin\"\n        },\n        arccos: {\n            eval: Math.acos,\n            codegen: \"Math.acos((\",\n            tex: \"\\\\arccos\"\n        },\n        arctan: {\n            eval: Math.atan,\n            codegen: \"Math.atan((\",\n            tex: \"\\\\arctan\"\n        },\n        arccsc: {\n            eval: function(arg) { return Math.asin(1 / arg); },\n            codegen: \"Math.asin(1/(\",\n            tex: \"\\\\operatorname{arccsc}\"\n        },\n        arcsec: {\n            eval: function(arg) { return Math.acos(1 / arg); },\n            codegen: \"Math.acos(1/(\",\n            tex: \"\\\\operatorname{arcsec}\"\n        },\n        arccot: {\n            eval: function(arg) { return Math.atan(1 / arg); },\n            codegen: \"Math.atan(1/(\",\n            tex: \"\\\\operatorname{arccot}\"\n        },\n        sinh: {\n            eval: function(arg) {\n                return (Math.exp(arg) - Math.exp(-arg)) / 2;\n            },\n            codegen: function(argStr) {\n                return \"((Math.exp(\" + argStr + \") - Math.exp(-(\" + argStr + \"))) / 2)\";\n            },\n            tex: \"\\\\sinh\",\n            expand: function() { return this; }\n        },\n        cosh: {\n            eval: function(arg) {\n                return (Math.exp(arg) + Math.exp(-arg)) / 2;\n            },\n            codegen: function(argStr) {\n                return \"((Math.exp(\" + argStr + \") + Math.exp(-(\" + argStr + \"))) / 2)\";\n            },\n            tex: \"\\\\cosh\",\n            expand: function() { return this; }\n        },\n        tanh: {\n            eval: function(arg) {\n                return (Math.exp(arg) - Math.exp(-arg)) / (Math.exp(arg) + Math.exp(-arg));\n            },\n            codegen: function(argStr) {\n                return \"(\" +\n                    \"(Math.exp(\" + argStr + \") - Math.exp(-(\" + argStr + \")))\" +\n                    \" / \" +\n                    \"(Math.exp(\" + argStr + \") + Math.exp(-(\" + argStr + \")))\" +\n                    \")\";\n            },\n            tex: \"\\\\tanh\",\n            expand: function() {\n                return Mul.handleDivide(Trig.sinh(this.arg), Trig.cosh(this.arg));\n            }\n        },\n        csch: {\n            eval: function(arg) { return 2 / (Math.exp(arg) - Math.exp(-arg)); },\n            codegen: function(argStr) {\n                return \"(2 / (Math.exp(\" + argStr + \") - Math.exp(-(\" + argStr + \"))))\";\n            },\n            tex: \"\\\\csch\",\n            expand: function() {\n                return Mul.handleDivide(Num.One, Trig.sinh(this.arg));\n            }\n        },\n        sech: {\n            eval: function(arg) { return 2 / (Math.exp(arg) + Math.exp(-arg)); },\n            codegen: function(argStr) {\n                return \"(2 / (Math.exp(\" + argStr + \") + Math.exp(-(\" + argStr + \"))))\";\n            },\n            tex: \"\\\\sech\",\n            expand: function() {\n                return Mul.handleDivide(Num.One, Trig.cosh(this.arg));\n            }\n        },\n        coth: {\n            eval: function(arg) {\n                return (Math.exp(arg) + Math.exp(-arg)) / (Math.exp(arg) - Math.exp(-arg));\n            },\n            codegen: function(argStr) {\n                return \"(\" +\n                    \"(Math.exp(\" + argStr + \") + Math.exp(-(\" + argStr + \")))\" +\n                    \" / \" +\n                    \"(Math.exp(\" + argStr + \") - Math.exp(-(\" + argStr + \")))\" +\n                    \")\";\n            },\n            tex: \"\\\\coth\",\n            expand: function() {\n                return Mul.handleDivide(Trig.cosh(this.arg), Trig.sinh(this.arg));\n            }\n        },\n    },\n\n    isEven: function() {\n        return _.contains([\"cos\", \"sec\"], this.type);\n    },\n\n    isInverse: function() {\n        return this.type.indexOf(\"arc\") === 0;\n    },\n\n    isBasic: function() {\n        return _.contains([\"sin\", \"cos\"], this.type);\n    },\n\n    eval: function(vars, options) {\n        var func = this.functions[this.type].eval;\n        var arg = this.arg.eval(vars, options);\n        return func(arg);\n    },\n\n    codegen: function() {\n        var func = this.functions[this.type].codegen;\n        if (typeof func === \"function\") {\n            return func(this.arg.codegen());\n        } else if (typeof func === \"string\") {\n            return func + this.arg.codegen() + \"))\";\n        } else {\n            throw new Error(\"codegen not implemented for \" + this.type);\n        }\n    },\n\n    print: function() {\n        return this.type + \"(\" + this.arg.print() + \")\";\n    },\n\n    tex: function(options) {\n        var func = this.functions[this.type].tex;\n        var arg = \"(\" + this.arg.tex() + \")\";\n        return (options && options.split) ? [func, arg] : func + arg;\n    },\n\n    hints: _.extend(Trig.prototype.hints, {\n        open: false\n    }),\n\n    isPositive: function() {\n        var trig = this.collect();\n\n        if (trig.arg instanceof Num) {\n            return this.eval() > 0;\n        } else {\n            return false;\n        }\n    },\n\n    completeParse: function() {\n        if (this.exp) {\n            var pow = new Pow(this, this.exp);\n            this.exp = undefined;\n            return pow;\n        } else {\n            return this;\n        }\n    },\n\n    // TODO(alex): does every new node type need to redefine these?\n    needsExplicitMul: function() { return false; },\n\n    expand: function() {\n        var trig = this.recurse(\"expand\");\n        if (!trig.isInverse()) {\n            // e.g. tan(x) -> sin(x)/cos(x)\n            var expand = trig.functions[trig.type].expand;\n            return _.bind(expand, trig)();\n        } else {\n            return trig;\n        }\n    },\n\n    collect: function(options) {\n        var trig = this.recurse(\"collect\", options);\n        if (!trig.isInverse() && trig.arg.isNegative()) {\n            var arg;\n            if (trig.arg instanceof Num) {\n                arg = trig.arg.abs();\n            } else {\n                arg = Mul.handleDivide(trig.arg, Num.Neg).collect(options);\n            }\n\n            if (trig.isEven()) {\n                // e.g. cos(-x) -> cos(x)\n                return new Trig(trig.type, arg);\n\n            } else {\n                // e.g. sin(-x) -> -sin(x)\n                return new Mul(Num.Neg, new Trig(trig.type, arg));\n            }\n        } else {\n            return trig;\n        }\n    }\n});\n\n_.extend(Trig, {\n    create: function(pair, arg) {\n        var type = pair[0];\n        var exp = pair[1];\n\n        if (exp && exp.equals(Num.Neg)) {\n            // e.g. sin^-1(x) -> arcsin(x)\n            type = \"arc\" + type;\n            exp = undefined;\n        }\n\n        var trig = new Trig(type, arg);\n        if (!arg.hints.parens) {\n            trig = trig.addHint(\"open\");\n        }\n\n        if (exp) {\n            trig.exp = exp;\n        }\n\n        return trig;\n    },\n\n    sin: function(arg) {\n        return new Trig(\"sin\", arg);\n    },\n\n    cos: function(arg) {\n        return new Trig(\"cos\", arg);\n    },\n\n    sinh: function(arg) {\n        return new Trig(\"sinh\", arg);\n    },\n\n    cosh: function(arg) {\n        return new Trig(\"cosh\", arg);\n    }\n});\n\n\nfunction Abs(arg) { this.arg = arg; }\nAbs.prototype = new Expr();\n\n_.extend(Abs.prototype, {\n    func: Abs,\n    args: function() { return [this.arg]; },\n    eval: function(vars, options) { return Math.abs(this.arg.eval(vars, options)); },\n    codegen: function() { return \"Math.abs(\" + this.arg.codegen() + \")\"; },\n    print: function() { return \"abs(\" + this.arg.print() + \")\"; },\n\n    tex: function() {\n        return \"\\\\left|\" + this.arg.tex() + \"\\\\right|\";\n    },\n\n    collect: function(options) {\n        var abs = this.recurse(\"collect\", options);\n\n        if (abs.arg.isPositive()) {\n            // e.g. |2^x| -> 2^x\n            return abs.arg;\n        } else if (abs.arg instanceof Num) {\n            // e.g. |-2| -> 2\n            return abs.arg.abs();\n        } else if (abs.arg instanceof Mul) {\n            // e.g. |-2*pi*x| -> 2*pi*|x|\n            var terms = _.groupBy(abs.arg.terms, function(term) {\n                if (term.isPositive()) {\n                    return \"positive\";\n                } else if (term instanceof Num) {\n                    return \"number\";\n                } else {\n                    return \"other\";\n                }\n            });\n\n            var positives = terms.positive.concat(_.invoke(terms.number, \"abs\"));\n\n            if (terms.other.length) {\n                positives.push(new Abs(new Mul(terms.other).flatten()));\n            }\n\n            return new Mul(positives).flatten();\n        } else {\n            return abs;\n        }\n    },\n\n    // this should definitely be behind a super-simplify flag\n    expand: function() {\n        var abs = this.recurse(\"expand\");\n\n        if (abs.arg instanceof Mul) {\n            // e.g. |xyz| -> |x|*|y|*|z|\n            var terms = _.map(abs.arg.terms, function(term) {\n                return new Abs(term);\n            });\n            return new Mul(terms);\n        } else {\n            return abs;\n        }\n    },\n\n    isPositive: function() { return true; }\n});\n\n\n/* equation */\nfunction Eq(left, type, right) {\n    this.left = left;\n    this.type = type;\n    this.right = right;\n}\nEq.prototype = new Expr();\n\n_.extend(Eq.prototype, {\n    func: Eq,\n    args: function() { return [this.left, this.type, this.right]; },\n\n    needsExplicitMul: function() { return false; },\n\n    print: function() {\n        return this.left.print() + this.type + this.right.print();\n    },\n\n    signs: {\n        \"=\": \" = \",\n        \"<\": \" < \",\n        \">\": \" > \",\n        \"<>\": \" \\\\ne \",\n        \"<=\": \" \\\\le \",\n        \">=\": \" \\\\ge \"\n    },\n\n    tex: function() {\n        return this.left.tex() + this.signs[this.type] + this.right.tex();\n    },\n\n    normalize: function() {\n        var eq = this.recurse(\"normalize\");\n\n        if (_.contains([\">\", \">=\"], eq.type)) {\n            // inequalities should have the smaller side on the left\n            return new Eq(eq.right, eq.type.replace(\">\", \"<\"), eq.left);\n        } else {\n            return eq;\n        }\n    },\n\n    // convert this equation to an expression set to zero\n    // the expression is normalized to a canonical form\n    // e.g. y/2=x/4 -> y/2-x/4(=0) -> 2y-x(=0)\n    // unless unfactored is specified, will then divide through\n    asExpr: function(unfactored) {\n        var isZero = function(expr) {\n            return expr instanceof Num && expr.isSimple() && expr.eval() === 0;\n        };\n\n        // first convert to a sequence of additive terms\n        var terms = [];\n\n        if (this.left instanceof Add) {\n            terms = _.clone(this.left.terms);\n        } else if (!isZero(this.left)) {\n            terms = [this.left];\n        }\n\n        if (this.right instanceof Add) {\n            terms = terms.concat(this.right.negate().terms);\n        } else if (!isZero(this.right)) {\n            terms.push(this.right.negate());\n        }\n\n        var isInequality = !this.isEquality();\n\n        // Collect over each term individually to transform simple expressions\n        // into numbers that might have denominators, taking into account\n        // float precision. We have to be very careful to not introduce any\n        // irrational floats before asExpr() returns, because by definition\n        // they do not have exact denominators...\n        terms = _.invoke(terms, \"collect\", {preciseFloats: true});\n\n        // ...and we multiply through by every denominator.\n        for (var i = 0; i < terms.length; i++) {\n            var denominator = terms[i].getDenominator();\n\n            // Can't multiply inequalities by non 100% positive factors\n            if (isInequality && !denominator.isPositive()) {\n                denominator = denominator.asPositiveFactor();\n            }\n\n            if (!denominator.equals(Num.One)) {\n                terms = _.map(terms, function(term) {\n                    return Mul.createOrAppend(term, denominator).simplify({\n                        once: true,\n                        preciseFloats: true\n                    });\n                });\n            }\n        }\n\n        var add = new Add(terms).flatten();\n        return unfactored ? add : this.divideThrough(add);\n    },\n\n    // divide through by every common factor in the expression\n    // e.g. 2y-4x(=0) -> y-2x(=0)\n    // TODO(alex): Make it an option to only divide by variables/expressions\n    // guaranteed to be nonzero\n    divideThrough: function(expr) {\n        var isInequality = !this.isEquality();\n\n        var simplified = expr.simplify({once: true});\n        var factored = simplified.factor({keepNegative: isInequality});\n\n        if (!(factored instanceof Mul)) {\n            return expr;\n        }\n\n        var terms = factored.terms;\n\n        var isAdd = function(term) { return term instanceof Add; };\n        var hasVar = function(term) { return !!term.getVars().length; };\n        var isOne = function(term) { return term.equals(Num.One); };\n\n        var grouped = _.groupBy(terms, isAdd);\n        var adds = grouped[true] || [];\n        var others = grouped[false] || [];\n\n        if (adds.length && this.isEquality()) {\n            // keep only Adds\n            // e.g. 2xy(z+1)(=0) -> z+1(=0)\n            return new Mul(adds).flatten();\n        }\n\n        var denominator = others;\n\n        if (!adds.length) {\n            // if no Adds, keep all variable terms to preserve meaning\n            // e.g. 42xyz(=0) -> xyz(=0)\n            denominator = _.reject(denominator, hasVar);\n        }\n\n        if (isInequality) {\n            // can't divide inequalities by non 100% positive factors\n            // e.g. 42x^2y(z+1)(=0) -> y(z+1)(=0)\n            denominator = _.invoke(denominator, \"asPositiveFactor\");\n        }\n\n        // don't need to divide by one\n        denominator = _.reject(denominator, isOne);\n\n        denominator = _.map(denominator, function(term) {\n            return new Pow(term, Num.Div);\n        });\n\n        var dividedResult = new Mul(terms.concat(denominator)).collect();\n\n        // If the end result is the same as the original factoring,\n        // rollback the factoring and discard all intermediate steps.\n        if (dividedResult.equals(factored)) {\n            return simplified;\n        } else {\n            return dividedResult;\n        }\n    },\n\n    isEquality: function() {\n        return _.contains([\"=\", \"<>\"], this.type);\n    },\n\n    compare: function(other) {\n        // expression comparisons are handled by Expr.compare()\n        if (!(other instanceof Eq)) {\n            return false;\n        }\n\n        var eq1 = this.normalize();\n        var eq2 = other.normalize();\n\n        if (eq1.type !== eq2.type) {\n            return false;\n        }\n\n        // need to collect to properly factor out common factors\n        // e.g x+2x=6 -> 3x=6 -> 3x-6(=0) -> x-2(=0)\n        var expr1 = eq1.divideThrough(eq1.asExpr(/* unfactored */ true).collect());\n        var expr2 = eq2.divideThrough(eq2.asExpr(/* unfactored */ true).collect());\n\n        if (eq1.isEquality()) {\n            // equals and not-equals can be subtracted either way\n            return expr1.compare(expr2) ||\n                   expr1.compare(Mul.handleNegative(expr2));\n        } else {\n            return expr1.compare(expr2);\n        }\n    },\n\n    // should only be done after compare() returns true to avoid false positives\n    sameForm: function(other) {\n        var eq1 = this.normalize();\n        var eq2 = other.normalize();\n\n        var same = eq1.left.sameForm(eq2.left) && eq1.right.sameForm(eq2.right);\n\n        if (eq1.isEquality()) {\n            // equals and not-equals can be commutative with respect to the sign\n            return same || (eq1.left.sameForm(eq2.right) && eq1.right.sameForm(eq2.left));\n        } else {\n            return same;\n        }\n    },\n\n    // we don't want to override collect because it would turn y=x into y-x(=0)\n    // instead, we ask if the equation was in that form, would it be simplified?\n    isSimplified: function() {\n        var expr = this.asExpr(/* unfactored */ true);\n        var simplified = this.divideThrough(expr).simplify();\n        return expr.equals(simplified) &&\n               this.left.isSimplified() &&\n               this.right.isSimplified();\n    }\n});\n\n_.extend(Eq.prototype, {\n    // Assumptions: Expression is of the form a+bx, and we solve for x\n    solveLinearEquationForVariable: function(variable) {\n        var expr = this.asExpr();\n        if (!expr.is(Add) || expr.terms.length !== 2) {\n            throw new Error(\"Can only handle linear equations of the form \" +\n                            \"a + bx (= 0)\");\n        }\n\n        var hasVar = function(term) {\n            return term.has(Var) && _.contains(term.getVars(), variable.symbol);\n        };\n\n        var a, b;\n\n        if (hasVar(expr.terms[0])) {\n            a = Mul.handleNegative(expr.terms[1]);\n            b = Mul.handleDivide(expr.terms[0], variable);\n        } else {\n            a = Mul.handleNegative(expr.terms[0]);\n            b = Mul.handleDivide(expr.terms[1], variable);\n        }\n\n        return Mul.handleDivide(a, b).simplify();\n    }\n});\n\n\n/* abstract symbol node */\nfunction Symbol() {}\nSymbol.prototype = new Expr();\n\n_.extend(Symbol.prototype, {\n\n    needsExplicitMul: function() { return false; },\n\n    findGCD: function(factor) {\n        if (factor instanceof Symbol || factor instanceof Num) {\n            return this.equals(factor) ? this : Num.One;\n        } else {\n            return factor.findGCD(this);\n        }\n    }\n});\n\n\n/* function variable */\nfunction Func(symbol, arg) {\n    this.symbol = symbol; this.arg = arg;\n}\nFunc.prototype = new Symbol();\n\n_.extend(Func.prototype, {\n    func: Func,\n    args: function() { return [this.symbol, this.arg]; },\n\n    print: function() {\n        return this.symbol + \"(\" + this.arg.print() + \")\";\n    },\n\n    tex: function() {\n        return this.symbol + \"(\" + this.arg.tex() + \")\";\n    },\n\n    eval: function(vars, options) {\n        var arg = this.arg;\n        var func = vars[this.symbol];\n        var newVars = _.extend(_.clone(vars), {\n            x: arg.eval(vars, options)\n        });\n        var parsedFunc = KAS.parse(func, options);\n        if (parsedFunc.parsed) {\n            return parsedFunc.expr.eval(newVars, options);\n        }\n        // If parsedFunc isn't actually parsed, return its error\n        return parsedFunc;\n    },\n\n    codegen: function() {\n        return 'vars[\"' + this.symbol + '\"](' +\n            this.arg.codegen() + ')';\n    },\n\n    getUnits: function() {\n        return this.arg.getUnits();\n    },\n\n    getVars: function(excludeFunc) {\n        if (excludeFunc) {\n            return this.arg.getVars();\n        } else {\n            return _.union(this.arg.getVars(), [this.symbol]).sort();\n        }\n    },\n\n    getConsts: function() {\n        return this.arg.getConsts();\n    },\n});\n\n\n/* variable */\nfunction Var(symbol, subscript) {\n    this.symbol = symbol;\n    this.subscript = subscript;\n}\nVar.prototype = new Symbol();\n\n_.extend(Var.prototype, {\n    func: Var,\n    args: function() { return [this.symbol, this.subscript]; },\n\n    exprArgs: function() { return []; },\n    recurse: function() { return this; },\n\n    print: function() {\n        var sub = \"\";\n        if (this.subscript) {\n            sub = \"_(\" + this.subscript.print() + \")\";\n        }\n        return this.symbol + sub;\n    },\n\n    // Provide a way to easily evalate expressions with the common case,\n    // subscripts that consist of a single number or symbol e.g. x_a or x_42\n    prettyPrint: function() {\n        var sub = this.subscript;\n        if (sub && (sub instanceof Num || sub instanceof Symbol)) {\n            return this.symbol + \"_\" + sub.print();\n        } else {\n            return this.print();\n        }\n    },\n\n    tex: function() {\n        var sub = \"\";\n        if (this.subscript) {\n            sub = \"_{\" + this.subscript.tex() + \"}\";\n        }\n        var prefix = this.symbol.length > 1 ? \"\\\\\" : \"\";\n        return prefix + this.symbol + sub;\n    },\n\n    repr: function() { return \"Var(\" + this.print() + \")\"; },\n\n    eval: function(vars, options) {\n        return vars[this.prettyPrint()];\n    },\n\n    codegen: function() {\n        return 'vars[\"' + this.prettyPrint() + '\"]';\n    },\n\n    getVars: function() { return [this.prettyPrint()]; },\n\n    isPositive: function() { return false; }\n});\n\n\n/* constant */\nfunction Const(symbol) { this.symbol = symbol; }\nConst.prototype = new Symbol();\n\n_.extend(Const.prototype, {\n    func: Const,\n    args: function() { return [this.symbol]; },\n    recurse: function() { return this; },\n\n    eval: function(vars, options) {\n        if (this.symbol === \"pi\") {\n            return Math.PI;\n        } else if (this.symbol === \"e\") {\n            return Math.E;\n        }\n    },\n\n    codegen: function() {\n        if (this.symbol === \"pi\") {\n            return \"Math.PI\";\n        } else if (this.symbol === \"e\") {\n            return \"Math.E\";\n        }\n    },\n\n    print: function() { return this.symbol; },\n\n    tex: function() {\n        if (this.symbol === \"pi\") {\n            return \"\\\\pi \";\n        } else if (this.symbol === \"e\") {\n            return \"e\";\n        }\n    },\n\n    isPositive: function() {\n        return this.eval() > 0;\n    },\n\n    abs: function() {\n        if (this.eval() > 0) {\n            return this;\n        } else {\n            return Mul.handleNegative(this);\n        }\n    },\n\n    getConsts: function() {\n        return [this.print()];\n    },\n});\n\nConst.e = new Const(\"e\");\nConst.pi = new Const(\"pi\");\n\n\n/* abstract number node */\nfunction Num() {}\nNum.prototype = new Expr();\n\n_.extend(Num.prototype, {\n    repr: function() { return this.print(); },\n    strip: function() { return this.abs(); },\n    recurse: function() { return this; },\n    codegen: function() { return this.print(); },\n\n    // takes another Num and returns a new Num\n    add: abstract,\n    mul: abstract,\n\n    // returns this Num's additive inverse\n    negate: abstract,\n\n    isSubtract: function() { return this.hints.subtract; },\n\n    // return the absolute value of the number\n    abs: abstract,\n\n    needsExplicitMul: function() { return true; },\n\n    findGCD: abstract,\n\n    isPositive: function() {\n        return this.eval() > 0;\n    },\n\n    isNegative: function() {\n        return this.eval() < 0;\n    },\n\n    asPositiveFactor: function() {\n        return this.isPositive() ? this : this.abs();\n    },\n\n    // hints for interpreting and rendering user input\n    hints: _.extend(Num.prototype.hints, {\n        negate: false,\n        subtract: false,\n        divide: false,\n        root: false,\n        fraction: false,\n        entered: false\n    }),\n\n    // whether a number is considered simple (one term)\n    // e.g. for reals, ints and floats are simple\n    isSimple: abstract,\n\n    // Based on http://stackoverflow.com/a/10454560/2571482\n    getDecimalPlaces: function() {\n        var match = (\"\" + this.n).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n        if (match) {\n            return Math.max(\n                0,\n                // Number of digits right of decimal point\n                (match[1] ? match[1].length : 0) -\n                // Adjust for scientific notation\n                (match[2] ? +match[2] : 0)\n            );\n        } else {\n            return 0;\n        }\n    },\n\n    asRational: abstract\n});\n\n\n/* rational number (n: numerator, d: denominator) */\nfunction Rational(numerator, denominator) {\n    var n = numerator; var d = denominator;\n    if (d < 0) {\n        n = -n; d = -d;\n    }\n    this.n = n; this.d = d;\n}\nRational.prototype = new Num();\n\n_.extend(Rational.prototype, {\n    func: Rational,\n    args: function() { return [this.n, this.d]; },\n    eval: function() { return this.n / this.d; },\n\n    print: function() {\n        return this.n.toString() + \"/\" + this.d.toString();\n    },\n\n    tex: function() {\n        var tex = \"\\\\frac{\" + Math.abs(this.n).toString() + \"}{\" + this.d.toString() + \"}\";\n        return this.n < 0 ? \"-\" + tex : tex;\n    },\n\n    add: function(num, options) {\n        if (num instanceof Rational) {\n            return new Rational(this.n * num.d + this.d * num.n, this.d * num.d).collect();\n        } else {\n            return num.add(this, options);\n        }\n    },\n\n    mul: function(num, options) {\n        if (num instanceof Rational) {\n            return new Rational(this.n * num.n, this.d * num.d).collect();\n        } else {\n            return num.mul(this, options);\n        }\n    },\n\n    collect: function() {\n        var gcd = Num.findGCD(this.n, this.d);\n\n        var n = this.n / gcd;\n        var d = this.d / gcd;\n\n        if (d === 1) {\n            return new Int(n);\n        } else {\n            return new Rational(n, d);\n        }\n    },\n\n    negate: function() {\n        return new Rational(-this.n, this.d);\n    },\n\n    abs: function() {\n        return new Rational(Math.abs(this.n), this.d);\n    },\n\n    findGCD: function(factor) {\n        // Attempt to factor out common numerators and denominators to return\n        // a Rational instead of a Float\n        if (factor instanceof Rational) {\n            // For more background, see\n            // http://math.stackexchange.com/questions/151081/gcd-of-rationals\n            var numerator = Num.findGCD(this.n * factor.d, factor.n * this.d);\n            var denominator = this.d * factor.d;\n            // Create the rational, then call .collect() to simplify it\n            return new Rational(numerator, denominator).collect();\n        } else if (factor instanceof Int) {\n            return new Rational(Num.findGCD(this.n, factor.n), this.d);\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n\n    // for now, assuming that exp is a Num\n    raiseToThe: function(exp) {\n        if (exp instanceof Int) {\n            var positive = exp.eval() > 0;\n            var abs = exp.abs().eval();\n            var n = Math.pow(this.n, abs);\n            var d = Math.pow(this.d, abs);\n            if (positive) {\n                return new Rational(n, d).collect();\n            } else {\n                return new Rational(d, n).collect();\n            }\n        } else {\n            return new Float(this.eval()).raiseToThe(exp);\n        }\n    },\n\n    getDenominator: function() {\n        return new Int(this.d);\n    },\n\n    isSimple: function() { return false; },\n\n    asRational: function() { return this; }\n});\n\n\n/* integer (n: numerator/number) */\nfunction Int(number) { this.n = number; }\nInt.prototype = new Rational(0, 1);\n\n_.extend(Int.prototype, {\n    func: Int,\n    args: function() { return [this.n]; },\n    print: function() { return this.n.toString(); },\n    tex: function() { return this.n.toString(); },\n    negate: function() { return new Int(-this.n); },\n    abs: function() { return new Int(Math.abs(this.n)); },\n    isSimple: function() { return true; },\n    findGCD: function(factor) {\n        if (factor instanceof Int) {\n            return new Int(Num.findGCD(this.n, factor.n));\n        } else {\n            return factor.findGCD(this);\n        }\n    }\n});\n\n_.extend(Int, {\n    create: function(n) { return new Int(n).addHint(\"entered\"); }\n});\n\n/* float (n: number) */\nfunction Float(number) { this.n = number; }\nFloat.prototype = new Num();\n\n_.extend(Float.prototype, {\n    func: Float,\n    args: function() { return [this.n]; },\n    eval: function() { return this.n; },\n\n    // TODO(alex): when we internationalize number parsing/display\n    // we should make sure to use the appropriate decimal mark here\n    print: function() { return this.n.toString(); },\n    tex: function() { return this.n.toString(); },\n\n    add: function(num, options) {\n        if (options && options.preciseFloats) {\n            return Float.toDecimalPlaces(\n                this.n + num.eval(),\n                Math.max(this.getDecimalPlaces(), num.getDecimalPlaces())\n            );\n        } else {\n            return new Float(this.n + num.eval()).collect();\n        }\n    },\n\n    mul: function(num, options) {\n        if (options && options.preciseFloats) {\n            return Float.toDecimalPlaces(\n                this.n * num.eval(),\n                this.getDecimalPlaces() + num.getDecimalPlaces()\n            );\n        } else {\n            return new Float(this.n * num.eval()).collect();\n        }\n    },\n\n    collect: function() {\n        // We used to simplify Floats to Ints here whenever possible, but no\n        // longer do so in order to preserve significant figures.\n        return this;\n    },\n\n    negate: function() { return new Float(-this.n); },\n    abs: function() { return new Float(Math.abs(this.n)); },\n\n    findGCD: function(factor) {\n        if (factor instanceof Num) {\n            return new Float(Num.findGCD(this.eval(), factor.eval())).collect();\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n\n    // for now, assuming that exp is a Num\n    raiseToThe: function(exp, options) {\n        if (options && options.preciseFloats &&\n                exp instanceof Int && exp.n > 1) {\n            return Float.toDecimalPlaces(\n                new Pow(this, exp).eval(),\n                this.getDecimalPlaces() * exp.n\n            );\n        } else {\n            return new Float(new Pow(this, exp).eval()).collect();\n        }\n    },\n\n    // only to be used on non-repeating decimals (e.g. user-provided)\n    asRational: function() {\n        var parts = this.n.toString().split(\".\");\n        if (parts.length === 1) {\n            return new Rational(this.n, 1);\n        } else {\n            var numerator = Number(parts.join(\"\"));\n            var denominator = Math.pow(10, parts[1].length);\n            return new Rational(numerator, denominator).collect();\n        }\n    },\n\n    getDenominator: function() {\n        return this.asRational().getDenominator();\n    },\n\n    isSimple: function() { return true; }\n});\n\n_.extend(Float, {\n    create: function(n) { return new Float(n).addHint(\"entered\"); },\n\n    // Account for floating point imprecision by explicitly controlling the\n    // number of decimal places in common operations (e.g. +, *, ^)\n    toDecimalPlaces: function(n, places) {\n        return new Float(+n.toFixed(Math.min(places, 20))).collect();\n    }\n});\n\n// static methods and fields that are best defined on Num\n_.extend(Num, {\n    negativeOne: function(hint) {\n        if (hint === \"subtract\") {\n            return Num.Sub;\n        } else if (hint === \"divide\") {\n            return Num.Div;\n        } else {\n            return Num.Neg;\n        }\n    },\n\n    // find the greatest common denominator\n    findGCD: function(a, b) {\n        var mod;\n\n        a = Math.abs(a);\n        b = Math.abs(b);\n\n        // Euclid's method doesn't handle non-integers very well. For now\n        // we just say we can't pull out a common factor. It might be\n        // reasonable to do better than this in the future.\n        if (a !== Math.floor(a) || b !== Math.floor(b)) {\n            return 1;\n        }\n\n        while (b) {\n            mod = a % b;\n            a = b;\n            b = mod;\n        }\n\n        return a;\n    },\n\n    min: function() {\n        return _.min(_.toArray(arguments), function(num) {\n            return num.eval();\n        });\n    },\n\n    max: function() {\n        return _.max(_.toArray(arguments), function(num) {\n            return num.eval();\n        });\n    }\n});\n\nNum.Neg = new Int(-1).addHint(\"negate\");\nNum.Sub = new Int(-1).addHint(\"subtract\");\nNum.Div = new Int(-1).addHint(\"divide\");\n\nNum.Sqrt = new Rational(1, 2).addHint(\"root\");\n\nNum.Zero = new Int(0);\nNum.One = new Int(1);\nNum.Ten = new Int(10);\n\n\n// set identities here\nAdd.prototype.identity = Num.Zero;\nMul.prototype.identity = Num.One;\n\n\nvar parser = KAS.parser;\n\nvar parseError = function(str, hash) {\n    // return int location of parsing error\n    throw new Error(hash.loc.first_column);\n};\n\n// expose concrete nodes to parser scope\n// see http://zaach.github.io/jison/docs/#sharing-scope\nparser.yy = {\n    Add: Add,\n    Mul: Mul,\n    Pow: Pow,\n    Log: Log,\n    Trig: Trig,\n    Eq: Eq,\n    Abs: Abs,\n    Func: Func,\n    Const: Const,\n    Var: Var,\n    Int: Int,\n    Float: Float,\n    parseError: parseError,\n\n    constants: [\"e\"],\n    symbolLexer: function(symbol) {\n        if (_.contains(parser.yy.constants, symbol)) {\n            return \"CONST\";\n        } else if (_.contains(parser.yy.functions, symbol)) {\n            return \"FUNC\";\n        } else {\n            return \"VAR\";\n        }\n    }\n};\n\nKAS.parse = function(input, options) {\n    try {\n        if (options && options.functions) {\n            // reserve the symbol \"i\" for complex numbers\n            parser.yy.functions = _.without(options.functions, \"i\");\n        } else {\n            parser.yy.functions = [];\n        }\n\n        // If ',' is the decimal dividor in your country, replace any ','s\n        // with '.'s.\n        // This isn't perfect, since the output will all still have '.'s.\n        // TODO(jack): Fix the output to have ','s in this case\n        if (options && options.decimal_separator) {\n            input = input.split(options.decimal_separator).join(\".\");\n        }\n\n        var expr = parser.parse(input).completeParse();\n        return { parsed: true, expr: expr };\n    } catch (e) {\n        return { parsed: false, error: e.message };\n    }\n};\n\n/* unit */\nfunction Unit(symbol) {\n    this.symbol = symbol;\n}\nUnit.prototype = new Symbol();\n\n// If possible, replace unit prefixes with a multiplication.\n//\n// \"g\" -> Unit(\"g\")\n// \"kg\" -> 1000 * Unit(\"g\")\nvar unprefixify = function(symbol) {\n    if (_(baseUnits).has(symbol) || _(derivedUnits).has(symbol)) {\n        return new Unit(symbol);\n    }\n\n    // check for prefix\n    var prefix = _(_(siPrefixes).keys()).find(function(testPrefix) {\n        return new RegExp(\"^\" + testPrefix).test(symbol);\n    });\n\n    if (prefix) {\n        var base = symbol.replace(new RegExp(\"^\" + prefix), \"\");\n\n        // It's okay to be here if either:\n        // * `base` is a base unit (the seven units listed in baseUnits)\n        // * `base` is a derived unit which allows prefixes\n        //\n        // Otherwise, we're trying to parse a unit label which is not\n        // allowed (mwk, mBTU, etc).\n        if (_(baseUnits).has(base) ||\n            (derivedUnits[base] &&\n             derivedUnits[base].prefixes === hasPrefixes)) {\n\n            return new Mul(siPrefixes[prefix], new Unit(base));\n        } else {\n            throw new Error(base + \" does not allow prefixes\");\n        }\n    } else {\n        return new Unit(symbol);\n    }\n};\n\nKAS.unitParse = function(input) {\n    try {\n        var parseResult = KAS.unitParser.parse(input);\n\n        // parseResult looks like:\n        // {\n        //   magnitude: \"5\",\n        //   unit: {\n        //     num: [\n        //       { name: \"s\", pow: 2 }\n        //     ],\n        //     denom: [\n        //       { name: \"kg\", pow: 1 }\n        //     ]\n        //   }\n        // }\n        //\n        // denom is optionally null\n\n        var unitArray = [];\n\n        _(parseResult.unit.num).each(function(unitSpec) {\n            unitArray.push(\n                new Pow(unprefixify(unitSpec.name), new Int(unitSpec.pow))\n            );\n        });\n\n        _(parseResult.unit.denom).each(function(unitSpec) {\n            unitArray.push(\n                new Pow(unprefixify(unitSpec.name), new Int(-1 * unitSpec.pow))\n            );\n        });\n\n        var unit = new Mul(unitArray).flatten();\n\n        if (parseResult.type === \"unitMagnitude\") {\n            // in the first case we have a magnitude coefficient as well as the\n            // unit itself.\n            var coefArray =\n                [new Float(+parseResult.magnitude)].concat(unitArray);\n            var expr = new Mul(coefArray);\n            return {\n                parsed: true,\n                unit: unit,\n                expr: expr,\n                coefficient: parseResult.magnitude,\n                type: parseResult.type\n            };\n        } else {\n\n            // in the second case it's just the unit with no magnitude.\n            return {\n                parsed: true,\n                unit: unit,\n                type: parseResult.type,\n            };\n        }\n    } catch (e) {\n        return { parsed: false, error: e.message };\n    }\n};\n\n_.extend(Unit.prototype, {\n    func: Unit,\n    args: function() { return [this.symbol]; },\n    recurse: function() { return this; },\n\n    eval: function(vars, options) {\n        // This is called when comparing units. A unit doesn't affect the\n        // numerical value of its coefficient, so this needs to be 1.\n        //\n        // On the other hand, things must not evaluate to the same thing if\n        // they don't have the same type. I believe that's also true - form is\n        // checked before numerical equivalence. I do not know where, though.\n        // However, there are a couple tests checking this.\n        return 1;\n    },\n\n    getUnits: function() { return [{ unit: this.symbol, pow: 1 }]; },\n\n    codegen: function() { return \"1\"; },\n\n    print: function() { return this.symbol; },\n\n    tex: function() { return this.symbol; },\n\n    // Simplify units by replacing prefixes with multiplication\n    collect: function(options) {\n        if (_(baseUnits).has(this.symbol)) {\n            return this;\n        } else if (_(derivedUnits).has(this.symbol)) {\n            return derivedUnits[this.symbol].conversion;\n        } else {\n            throw new Error(\"could not understand unit: \" + this.symbol);\n        }\n    },\n});\n\nvar baseUnits = {\n    m: new Unit(\"m\"),\n    // Note: kg is the SI base unit but we use g for consistency\n    g: new Unit(\"g\"),\n    s: new Unit(\"s\"),\n    A: new Unit(\"A\"),\n    K: new Unit(\"K\"),\n    mol: new Unit(\"mol\"),\n    cd: new Unit(\"cd\"),\n};\n\nvar siPrefixes = {\n    a: new Pow(new Int(10), new Int(-18)),\n    f: new Pow(new Int(10), new Int(-15)),\n    p: new Pow(new Int(10), new Int(-12)),\n    n: new Pow(new Int(10), new Int(-9)),\n    u: new Pow(new Int(10), new Int(-6)),\n    m: new Pow(new Int(10), new Int(-3)),\n    c: new Pow(new Int(10), new Int(-2)),\n    d: new Pow(new Int(10), new Int(-1)),\n    da: new Int(10),\n    h: new Pow(new Int(10), new Int(2)),\n    k: new Pow(new Int(10), new Int(3)),\n    M: new Pow(new Int(10), new Int(6)),\n    G: new Pow(new Int(10), new Int(9)),\n    T: new Pow(new Int(10), new Int(12)),\n    P: new Pow(new Int(10), new Int(15)),\n    E: new Pow(new Int(10), new Int(18)),\n    // http://en.wikipedia.org/wiki/Metric_prefix#.22Hella.22_prefix_proposal\n    hella: new Pow(new Int(10), new Int(27)),\n};\n\n// Use these two values to mark a unit as either SI-prefixable or not.\nvar hasPrefixes = {};\nvar hasntPrefixes = {};\n\nvar makeAlias = function(str, prefixes) {\n    var splits = str.split(\"|\");\n    var coefficientStr = splits[0].trim();\n    var unitsStr = splits[1].trim();\n\n    var coefficient = Num.One;\n    if (coefficientStr !== \"\") {\n        coefficient = KAS.parse(coefficientStr).expr;\n    }\n\n    var numdenomStr = unitsStr.split(\"/\");\n    var numdenom = [coefficient];\n\n    if (numdenomStr[0]) {\n        numdenomStr[0]\n            .split(\" \")\n            .filter(function(x) {\n                return x !== \"\";\n            }).map(function(x) {\n                numdenom.push(new Unit(x));\n            });\n    }\n\n    if (numdenomStr[1]) {\n        numdenomStr[1]\n            .split(\" \")\n            .filter(function(x) {\n                return x !== \"\";\n            }).map(function(x) {\n                numdenom.push(new Pow(new Unit(x), Num.Div));\n            });\n    }\n\n    return {\n        conversion: new Mul(numdenom),\n        prefixes: prefixes,\n    };\n};\n\n// This is a mapping of derived units (or different names for a unit) to their\n// definitions. For example, an inch is defined as 0.0254 m.\n//\n// Definitions don't need to be in terms of base units. For example, tsp is\n// defined in terms of tbsp (which is defined in terms of cup -> gal -> L ->\n// m^3). However, units must get simpler. I.e. there's no loop checking.\n//\n// makeAlias takes two parameters:\n// * a string specifying the simplification to perform\n//   - a required pipe separates the constant factor from the base units\n//   - the constant factor is parsed by KAS\n//   - the base units are in a simple format which disallows exponents and\n//     requires multiplicands to be space-separated (\"m m\" rather than \"m^2)\n//     with an optional \"/\" separating numerator and denominator\n//   - prefixes are not allowed to be used in the converted to units\n//     (note that this restriction, the format of the string, and the choice to\n//     use a string in the first place are made out of laziness to minimize\n//     both typing and parsing)\n// * a boolean specifying whether or not it's acceptable to use SI units\n//\n// Where possible, these units are taken from \"The International System of\n// Units (SI)\" 8th edition (2006).\nvar derivedUnits = {\n    // mass\n    // The atomic mass unit / dalton.\n    Da: makeAlias(\"1.6605388628 x 10^-24 | g\", hasPrefixes),\n    u: makeAlias(\"| Da\", hasntPrefixes),\n\n    // length\n    \"meter\": makeAlias(\"| m\", hasntPrefixes),\n    \"meters\": makeAlias(\"| m\", hasntPrefixes),\n    \"in\": makeAlias(\"254 / 10000 | m\", hasntPrefixes),\n    \"ft\": makeAlias(\"3048  / 10000 | m\", hasntPrefixes),\n    \"yd\": makeAlias(\"9144  / 10000 | m\", hasntPrefixes),\n    \"mi\": makeAlias(\"1609344 / 1000 | m\", hasntPrefixes),\n    \"ly\": makeAlias(\"9.4607 x 10^15 | m\", hasntPrefixes),\n    \"nmi\": makeAlias(\"1852 | m\", hasntPrefixes),\n    \"Å\": makeAlias(\"10^-10 | m\", hasntPrefixes),\n    \"pc\": makeAlias(\"3.0857 x 10^16 | m\", hasntPrefixes),\n\n    // time\n    \"min\": makeAlias(\"60 | s\", hasntPrefixes),\n    \"hr\": makeAlias(\"3600 | s\", hasntPrefixes),\n    \"sec\": makeAlias(\"| s\", hasntPrefixes),\n    // TODO(joel) make day work\n    \"day\": makeAlias(\"86400 | s\", hasntPrefixes),\n    \"wk\": makeAlias(\"604800 | s\", hasntPrefixes),\n    \"fortnight\": makeAlias(\"14 | day\", hasntPrefixes),\n    \"shake\": makeAlias(\"10^-8 | s\", hasntPrefixes),\n    \"olympiad\": makeAlias(\"126200000 | s\", hasntPrefixes),\n\n    // temperature\n    \"°C\": makeAlias(\"1 | K\", hasntPrefixes),\n    \"°F\": makeAlias(\"5/9 | K\", hasntPrefixes),\n    \"°R\": makeAlias(\"5/9 | K\", hasntPrefixes),\n\n    // electric charge\n    \"e\": makeAlias(\"1.6021765314 x 10^-19 | C\", hasntPrefixes),\n\n    // speed\n    \"c\": makeAlias(\"299792458 | m / s\", hasntPrefixes),\n    \"kn\": makeAlias(\"514/1000 | m / s\", hasntPrefixes),\n    \"kt\": makeAlias(\"| kn\", hasntPrefixes),\n    \"knot\": makeAlias(\"| kn\", hasntPrefixes),\n\n    // energy\n    \"J\": makeAlias(\"| N m\", hasPrefixes),\n    \"BTU\": makeAlias(\"1060 | J\", hasntPrefixes),\n    \"cal\": makeAlias(\"4184 / 1000 | J\", hasPrefixes),\n    \"eV\": makeAlias(\"1.602176514 x 10^-19 | J\", hasPrefixes),\n    \"erg\": makeAlias(\"10^−7 | J\", hasPrefixes),\n\n    // power\n    \"W\": makeAlias(\"| J / s\", hasPrefixes),\n    \"H-e\": makeAlias(\"80 | W\", hasntPrefixes),\n\n    // force\n    \"N\": makeAlias(\"1000 | g m / s s\", hasPrefixes),\n    // \"lb\": makeAlias(\"4448 / 1000 | N\", hasntPrefixes),\n    // 4.4482216152605\n    \"lb\": makeAlias(\"4448221615 / 1000000000 | N\", hasntPrefixes),\n    \"dyn\": makeAlias(\"10^-5 | N\", hasntPrefixes),\n\n    // pressure\n    \"Pa\": makeAlias(\"1 | N / m m m\", hasPrefixes),\n    \"bar\": makeAlias(\"10^5 | Pa\", hasPrefixes),\n    \"㏔\": makeAlias(\"1/1000 | bar\", hasntPrefixes),\n    \"㍴\": makeAlias(\"| bar\", hasntPrefixes),\n    \"atm\": makeAlias(\"101325 | Pa\", hasntPrefixes),\n    \"Torr\": makeAlias(\"1/760 | atm\", hasntPrefixes),\n    \"mmHg\": makeAlias(\"| Torr\", hasntPrefixes),\n\n    // area\n    \"ha\": makeAlias(\"10^4 | m m\", hasntPrefixes),\n    \"b\": makeAlias(\"10^−28 | m m\", hasPrefixes),\n    \"barn\": makeAlias(\"| b\", hasPrefixes),\n    \"acre\": makeAlias(\"4046.87 | m m\", hasntPrefixes),\n    \"skilodge\": makeAlias(\"10^-31 | m m\", hasntPrefixes),\n    \"outhouse\": makeAlias(\"10^-34 | m m\", hasntPrefixes),\n    \"shed\": makeAlias(\"10^-52 | m m\", hasntPrefixes),\n\n    // volume\n    \"L\": makeAlias(\"1/1000 | m m m\", hasPrefixes),\n    \"gal\": makeAlias(\"3785/1000 | L\", hasPrefixes),\n    \"cup\": makeAlias(\"1/16 | gal\", hasntPrefixes),\n    \"qt\": makeAlias(\"1/4 | gal\", hasntPrefixes),\n    \"quart\": makeAlias(\"| qt\", hasntPrefixes),\n    \"p\": makeAlias(\"1/8 | gal\", hasntPrefixes),\n    \"pt\": makeAlias(\"| p\", hasntPrefixes),\n    \"pint\": makeAlias(\"| p\", hasntPrefixes),\n    \"fl oz\": makeAlias(\"1/8 | cup\", hasntPrefixes),\n    \"fl. oz.\": makeAlias(\"1/8 | cup\", hasntPrefixes),\n    \"tbsp\": makeAlias(\"1/16 | cup\", hasntPrefixes),\n    \"tsp\": makeAlias(\"1/3 | tbsp\", hasntPrefixes),\n\n    // rotational\n    // \"rad\":\n    \"rev\": makeAlias(\"2 pi | rad\", hasntPrefixes),\n    \"deg\": makeAlias(\"180 pi | rad\", hasntPrefixes),\n    \"°\": makeAlias(\"| deg\", hasntPrefixes),\n    \"arcminute\": makeAlias(\"1/60 | deg\", hasntPrefixes),\n    \"arcsec\": makeAlias(\"1/3600 | deg\", hasntPrefixes),\n\n    // dimensionless\n    // \"B\": makeAlias(\"10 | dB\", hasntPrefixes), // XXX danger - logarithmic\n    // \"dB\"\n    // \"nP\"\n    \"Hu\": makeAlias(\"1000 | dB\", hasPrefixes),\n    \"dozen\": makeAlias(\"12 |\", hasntPrefixes),\n    // XXX\n    \"mol\": makeAlias(\"6.0221412927 x 10^23 |\", hasPrefixes),\n    \"%\": makeAlias(\"1/100 |\", hasntPrefixes),\n    \"percent\": makeAlias(\"| %\", hasntPrefixes),\n    \"ppm\": makeAlias(\"1/1000000 |\", hasntPrefixes),\n\n    // electric / magnetic\n    \"V\": makeAlias(\"1000 | g m m / s s C\", hasPrefixes),\n    \"C\": makeAlias(\"| A s\", hasPrefixes),\n    \"ampere\": makeAlias(\"| A\", hasntPrefixes),\n    \"Ω\": makeAlias(\"| V / A\", hasPrefixes),\n    \"ohm\": makeAlias(\"| Ω\", hasntPrefixes),\n    \"F\": makeAlias(\"| C / V\", hasPrefixes),\n    \"H\": makeAlias(\"| ohm s\", hasPrefixes),\n    \"T\": makeAlias(\"1000 | g / C s\", hasPrefixes),\n    \"Wb\": makeAlias(\"1000 | g m m / C s\", hasPrefixes),\n\n    // photometry\n    // TODO not sure this is right\n    \"lm\": makeAlias(\"pi x 10^4 | cd / m m\", hasntPrefixes),\n    \"lx\": makeAlias(\"| lm / m m\", hasntPrefixes),\n    \"nit\": makeAlias(\"| cd / m m\", hasntPrefixes),\n    \"sb\": makeAlias(\"10^4 | cd / m m\", hasntPrefixes),\n    \"stilb\": makeAlias(\"1 | sb\", hasntPrefixes),\n    \"apostilb\": makeAlias(\"1 / pi x 10^(-4) | sb\", hasntPrefixes),\n    \"blondel\": makeAlias(\"| apostilb\", hasntPrefixes),\n    \"asb\": makeAlias(\"| apostilb\", hasntPrefixes),\n    \"la\": makeAlias(\"| lm\", hasntPrefixes),\n    \"Lb\": makeAlias(\"| lm\", hasntPrefixes),\n    \"sk\": makeAlias(\"10^-7 | lm\", hasntPrefixes),\n    \"skot\": makeAlias(\"| sk\", hasntPrefixes),\n    \"bril\": makeAlias(\"10^-11 | lm\", hasntPrefixes),\n\n    // other\n    \"Hz\": makeAlias(\"| / s\", hasPrefixes),\n};\n\nKAS.Add = Add;\nKAS.Mul = Mul;\nKAS.Pow = Pow;\nKAS.Log = Log;\nKAS.Eq = Eq;\nKAS.Trig = Trig;\nKAS.Abs = Abs;\nKAS.Func = Func;\nKAS.Var = Var;\nKAS.Const = Const;\nKAS.Unit = Unit;\nKAS.Rational = Rational;\nKAS.Int = Int;\nKAS.Float = Float;\nKAS.Zero = Num.Zero;\nKAS.One = Num.One;\n\n})(KAS);\n\n(function(KAS) {\n    // Assumes that both expressions have already been parsed\n    // TODO(alex): be able to pass a random() function to compare()\n    KAS.compare = function(expr1, expr2, options) {\n        var defaults = {\n            form: false, // Check that the two expressions have the same form\n            simplify: false, // Check that the second expression is simplified\n        };\n\n        /* Options that could be added in the future:\n         * - Allow ratios: e.g. 3/1 and 3 should both be accepted for something\n         *   like slope\n         * - Allow student to choose their own variable names\n         */\n\n        if (options !== undefined) {\n            // eslint-disable-next-line no-undef\n            options = _.extend(defaults, options);\n        } else {\n            options = defaults;\n        }\n\n        // TODO(CP-1614): Figure out how to make these messages translatable\n\n        // Variable check\n        var vars = expr1.sameVars(expr2);\n        if (!vars.equal) {\n            var message;\n            if (vars.equalIgnoringCase) {\n                message =\n                    \"Check your variables; one or more are using \" +\n                    \"the wrong case (upper or lower).\";\n            } else {\n                message =\n                    \"Check your variables; you may have used the wrong \" +\n                    \"letter for one or more of them.\";\n            }\n            return {\n                equal: false,\n                wrongVariableCase: vars.equalIgnoringCase,\n                wrongVariableNames: !vars.equalIgnoringCase,\n                message: message,\n            };\n        }\n\n        // Semantic check\n        if (!expr1.compare(expr2)) {\n            return {equal: false, message: null};\n        }\n\n        // Syntactic check\n        if (options.form && !expr1.sameForm(expr2)) {\n            return {\n                equal: false,\n                message: \"Your answer is not in the correct form.\",\n            };\n        }\n\n        // Syntactic check\n        if (options.simplify && !expr1.isSimplified()) {\n            return {\n                equal: false,\n                message: \"Your answer is not fully expanded and simplified.\",\n            };\n        }\n\n        return {equal: true, message: null};\n    };\n})(KAS);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}