{"ast":null,"code":"import _slicedToArray from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var filter=function filter(str){return str.replace(/[ \\\\]/g,'').replace(/[\\u2018\\u2019]/g,\"'\")// replace fancy single quotes with apostrophe\n.replace(/[\\u201C\\u201D]/g,\"\\\"\");};// replace fancy double quotes with quotation\nexport function cleanObjectKeys(obj){return Object.fromEntries(Object.entries(obj).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],val=_ref2[1];return[filter(key),val];}));}export function cleanArray(arr){return arr.map(filter);}","map":{"version":3,"names":["filter","str","replace","cleanObjectKeys","obj","Object","fromEntries","entries","map","key","val","cleanArray","arr"],"sources":["/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/src/util/cleanObject.js"],"sourcesContent":["const filter = str => str\n    .replace(/[ \\\\]/g, '')\n    .replace(/[\\u2018\\u2019]/g, `'`) // replace fancy single quotes with apostrophe\n    .replace(/[\\u201C\\u201D]/g, `\"`) // replace fancy double quotes with quotation\n\nexport function cleanObjectKeys(obj) {\n    return Object.fromEntries(\n        Object.entries(obj).map(([key, val]) => ([filter(key), val]))\n    )\n}\n\nexport function cleanArray(arr) {\n    return arr.map(filter)\n}\n"],"mappings":"4IAAA,GAAMA,OAAM,CAAG,QAATA,OAAS,CAAAC,GAAG,QAAIA,IAAG,CACpBC,OADiB,CACT,QADS,CACC,EADD,EAEjBA,OAFiB,CAET,iBAFS,KAEe;AAFf,CAGjBA,OAHiB,CAGT,iBAHS,MAAJ,EAAlB,CAGqC;AAErC,MAAO,SAASC,gBAAT,CAAyBC,GAAzB,CAA8B,CACjC,MAAOC,OAAM,CAACC,WAAP,CACHD,MAAM,CAACE,OAAP,CAAeH,GAAf,EAAoBI,GAApB,CAAwB,gDAAEC,GAAF,UAAOC,GAAP,gBAAiB,CAACV,MAAM,CAACS,GAAD,CAAP,CAAcC,GAAd,CAAjB,EAAxB,CADG,CAAP,CAGH,CAED,MAAO,SAASC,WAAT,CAAoBC,GAApB,CAAyB,CAC5B,MAAOA,IAAG,CAACJ,GAAJ,CAAQR,MAAR,CAAP,CACH"},"metadata":{},"sourceType":"module"}