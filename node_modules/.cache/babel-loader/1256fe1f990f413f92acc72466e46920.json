{"ast":null,"code":"import _objectSpread from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{createRef}from\"react\";import'./GridInput.css';import Button from\"@material-ui/core/Button\";import clsx from'clsx';import EquationEditor from\"equation-editor-react\";import{Box,ClickAwayListener,Grow,Paper,Popper,TextField}from\"@material-ui/core\";import CloseIcon from'@material-ui/icons/Close';import{toast}from\"react-toastify\";import{EQUATION_EDITOR_AUTO_COMMANDS,EQUATION_EDITOR_AUTO_OPERATORS}from\"../../config/config\";import generateRandomInt from\"../../util/generateRandomInt\";import{stagingProp}from\"../../util/addStagingProperty\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GridInput=/*#__PURE__*/function(_React$Component){_inherits(GridInput,_React$Component);var _super=_createSuper(GridInput);function GridInput(props){var _this;_classCallCheck(this,GridInput);_this=_super.call(this,props);_this.genEmptyGrid=function(numRows,numCols){return new Array(numRows).fill(0).map(function(_){return new Array(numCols).fill(\"\");});};_this.state={gridState:props.defaultValue||_this.genEmptyGrid(0,0),numRows:props.numRows||0,numCols:props.numCols||0,openChangeDimensions:false,fer:Math.random()// fer: force equation-editor remount\n};_this.gridRef=/*#__PURE__*/createRef();_this.changeDimRef=/*#__PURE__*/createRef();_this.rowId=\"matrix-row-count-\".concat(generateRandomInt());_this.colId=\"matrix-col-count-\".concat(generateRandomInt());_this.clearCells=_this.clearCells.bind(_assertThisInitialized(_this));return _this;}_createClass(GridInput,[{key:\"cellFieldChange\",value:function cellFieldChange(str,idx,jdx){var _this2=this;var gridState=this.state.gridState;gridState[idx][jdx]=str;this.setState({gridState:gridState},function(){_this2.props.onChange(JSON.stringify(_this2.state.gridState));});}},{key:\"dimensionFieldChange\",value:function dimensionFieldChange(evt,idx){if(idx===0){this.setState({numRows:+evt.target.value});}else{this.setState({numCols:+evt.target.value});}}},{key:\"clearCells\",value:function clearCells(evt){var _this3=this;if(evt!=null&&evt.type==='submit'){evt.preventDefault();}var _this$state=this.state,numRows=_this$state.numRows,numCols=_this$state.numCols;if(isNaN(numRows)||numRows<=0||isNaN(numCols)||numCols<=0){toast.error('Matrix must be at least 1 x 1');return;}this.setState({gridState:this.genEmptyGrid(numRows,numCols),fer:Math.random()},function(){_this3.props.onChange(JSON.stringify(_this3.state.gridState));});}},{key:\"toggleChangeDimensionsPopover\",value:function toggleChangeDimensionsPopover(to){this.setState({openChangeDimensions:to});}},{key:\"render\",value:function render(){var _this4=this;var _this$props=this.props,classes=_this$props.classes,index=_this$props.index;var _this$state2=this.state,gridState=_this$state2.gridState,fer=_this$state2.fer;var revealClearButton=gridState.reduce(function(acc,cur,_){return acc+cur.reduce(function(_acc,_cur,__){return _acc+_cur.length;},0);},0)>0;// only reveal the clear button if there is at least something in a cell\nvar showInitialSlide=gridState.length===0;return/*#__PURE__*/_jsx(Box,{textAlign:'center',display:'flex',flexDirection:'column',alignItems:'center',pt:1,pb:1,children:showInitialSlide?/*#__PURE__*/_jsx(\"form\",{onSubmit:this.clearCells,children:/*#__PURE__*/_jsxs(Box,{className:'grid-input-notice-container',p:2,bgcolor:'rgb(249,249,250)',borderRadius:8,children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:700,fontSize:18},children:\"Enter in matrix dimensions.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"(This can be changed later)\"}),/*#__PURE__*/_jsxs(Box,{display:'flex',justifyContent:'center',alignItems:'center',mt:1,children:[/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({id:this.rowId,inputProps:{\"aria-labelledby\":\"\".concat(this.rowId,\"-label\")},variant:\"outlined\",label:\"# rows (Q\".concat(index,\")\"),type:'number',className:'grid-input-dim-input'},stagingProp({\"data-selenium-target\":\"grid-answer-row-input-\".concat(index)})),{},{onChange:function onChange(evt){return _this4.dimensionFieldChange(evt,0);}})),/*#__PURE__*/_jsx(CloseIcon,{}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({id:this.colId,inputProps:{\"aria-labelledby\":\"\".concat(this.colId,\"-label\")},variant:\"outlined\",label:\"# cols (Q\".concat(index,\")\"),type:'number',className:'grid-input-dim-input'},stagingProp({\"data-selenium-target\":\"grid-answer-col-input-\".concat(index)})),{},{onChange:function onChange(evt){return _this4.dimensionFieldChange(evt,1);}}))]}),/*#__PURE__*/_jsx(Box,{mt:2,children:/*#__PURE__*/_jsx(Button,_objectSpread(_objectSpread({variant:'contained',color:'primary',type:'submit'},stagingProp({\"data-selenium-target\":\"grid-answer-next-\".concat(index)})),{},{children:\"Next\"}))})]})}):/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'100%'},children:[/*#__PURE__*/_jsxs(Box,{mb:1,display:'flex',width:'100%',alignItems:'center',justifyContent:'flex-end',children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(){return _this4.toggleChangeDimensionsPopover(true);},ref:this.changeDimRef,children:[\"DIMENSIONS: \",gridState.length,\" x \",gridState[0].length]}),/*#__PURE__*/_jsx(Popper,{open:this.state.openChangeDimensions,anchorEl:this.changeDimRef.current,role:undefined,transition:true,disablePortal:true,placement:'bottom-end',style:{zIndex:10},children:function children(_ref){var TransitionProps=_ref.TransitionProps,placement=_ref.placement;return/*#__PURE__*/_jsx(Grow,_objectSpread(_objectSpread({},TransitionProps),{},{style:{transformOrigin:placement==='bottom'?'center top':'center bottom'},children:/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(ClickAwayListener,{onClickAway:function onClickAway(){return _this4.toggleChangeDimensionsPopover(false);},children:/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();_this4.clearCells();_this4.toggleChangeDimensionsPopover(false);},children:/*#__PURE__*/_jsxs(Box,{className:'grid-input-notice-container',p:2,display:'flex',flexDirection:'column',alignItems:'flex-end',boxShadow:3,borderRadius:3,children:[/*#__PURE__*/_jsxs(Box,{display:'flex',justifyContent:'center',alignItems:'center',mt:1,children:[/*#__PURE__*/_jsx(TextField,{size:'small',variant:\"filled\",label:'# Rows',type:'number',className:'grid-input-dim-input',onChange:function onChange(evt){return _this4.dimensionFieldChange(evt,0);}}),/*#__PURE__*/_jsx(CloseIcon,{}),/*#__PURE__*/_jsx(TextField,{size:'small',variant:\"filled\",label:'# Cols',type:'number',className:'grid-input-dim-input',onChange:function onChange(evt){return _this4.dimensionFieldChange(evt,1);}})]}),/*#__PURE__*/_jsx(Box,{mt:1,children:/*#__PURE__*/_jsx(Button,{variant:'contained',color:'primary',type:'submit',size:'small',children:\"Done\"})})]})})})})}));}})]}),/*#__PURE__*/_jsxs(\"div\",{ref:this.gridRef,className:clsx(this.props.isMatrix&&'matrix-container'),children:[this.props.isMatrix&&/*#__PURE__*/_jsx(\"div\",{className:'matrix-bracket-left'}),/*#__PURE__*/_jsx(Box,{display:'grid',gridTemplateColumns:\"repeat(\".concat(gridState[0].length,\", 1fr)\"),overflow:'auto',pt:1,pb:1,gridGap:8,justifyItems:'center',children:gridState.map(function(row,idx){return row.map(function(val,jdx){return/*#__PURE__*/_jsx(\"center\",_objectSpread(_objectSpread({className:clsx(classes.textBoxLatex,'grid-cell'),\"aria-label\":\"Cell (\".concat(idx,\", \").concat(jdx,\")\")},stagingProp({\"data-selenium-target\":\"grid-answer-cell-\".concat(jdx+idx*_this4.state.numCols,\"-\").concat(index)})),{},{children:/*#__PURE__*/_jsx(EquationEditor,{value:val,onChange:function onChange(str){return _this4.cellFieldChange(str,idx,jdx);},style:{width:\"100%\"},autoCommands:EQUATION_EDITOR_AUTO_COMMANDS,autoOperatorNames:EQUATION_EDITOR_AUTO_OPERATORS})}),\"cell-\".concat(idx,\"-\").concat(jdx,\"-\").concat(fer));});})}),this.props.isMatrix&&/*#__PURE__*/_jsx(\"div\",{className:'matrix-bracket-right'})]}),/*#__PURE__*/_jsx(Box,{mt:1,display:'flex',width:'100%',alignItems:'center',justifyContent:'flex-end',children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:this.clearCells,className:clsx(\"revealable\",revealClearButton&&\"revealed\"),children:\"clear all cells\"})})]})});}}]);return GridInput;}(React.Component);export default GridInput;","map":{"version":3,"names":["React","createRef","Button","clsx","EquationEditor","Box","ClickAwayListener","Grow","Paper","Popper","TextField","CloseIcon","toast","EQUATION_EDITOR_AUTO_COMMANDS","EQUATION_EDITOR_AUTO_OPERATORS","generateRandomInt","stagingProp","GridInput","props","genEmptyGrid","numRows","numCols","Array","fill","map","_","state","gridState","defaultValue","openChangeDimensions","fer","Math","random","gridRef","changeDimRef","rowId","colId","clearCells","bind","str","idx","jdx","setState","onChange","JSON","stringify","evt","target","value","type","preventDefault","isNaN","error","to","classes","index","revealClearButton","reduce","acc","cur","_acc","_cur","__","length","showInitialSlide","fontWeight","fontSize","dimensionFieldChange","maxWidth","toggleChangeDimensionsPopover","current","undefined","zIndex","TransitionProps","placement","transformOrigin","e","isMatrix","row","val","textBoxLatex","cellFieldChange","width","Component"],"sources":["/Users/allisonwang/Downloads/chem-final/OATutor-Chem1A/src/components/problem-input/GridInput.js"],"sourcesContent":["import React, { createRef } from \"react\";\nimport './GridInput.css'\nimport Button from \"@material-ui/core/Button\";\nimport clsx from 'clsx';\nimport EquationEditor from \"equation-editor-react\";\nimport { Box, ClickAwayListener, Grow, Paper, Popper, TextField } from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { toast } from \"react-toastify\";\nimport { EQUATION_EDITOR_AUTO_COMMANDS, EQUATION_EDITOR_AUTO_OPERATORS } from \"../../config/config\";\nimport generateRandomInt from \"../../util/generateRandomInt\";\nimport { stagingProp } from \"../../util/addStagingProperty\";\n\nclass GridInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gridState: props.defaultValue || this.genEmptyGrid(0, 0),\n            numRows: props.numRows || 0,\n            numCols: props.numCols || 0,\n            openChangeDimensions: false,\n            fer: Math.random() // fer: force equation-editor remount\n        };\n\n        this.gridRef = createRef()\n\n        this.changeDimRef = createRef()\n\n        this.rowId = `matrix-row-count-${generateRandomInt()}`\n        this.colId = `matrix-col-count-${generateRandomInt()}`\n\n        this.clearCells = this.clearCells.bind(this)\n    }\n\n    genEmptyGrid = (numRows, numCols) => new Array(numRows)\n        .fill(0)\n        .map(_ => new Array(numCols).fill(\"\"))\n\n    cellFieldChange(str, idx, jdx) {\n        const gridState = this.state.gridState\n        gridState[idx][jdx] = str;\n\n        this.setState({\n            gridState\n        }, () => {\n            this.props.onChange(JSON.stringify(this.state.gridState))\n        })\n    }\n\n    dimensionFieldChange(evt, idx) {\n        if (idx === 0) {\n            this.setState({\n                numRows: +evt.target.value\n            })\n        } else {\n            this.setState({\n                numCols: +evt.target.value\n            })\n        }\n    }\n\n    clearCells(evt) {\n        if (evt != null && evt.type === 'submit') {\n            evt.preventDefault()\n        }\n        const { numRows, numCols } = this.state;\n\n        if (isNaN(numRows) || numRows <= 0 || isNaN(numCols) || numCols <= 0) {\n            toast.error('Matrix must be at least 1 x 1')\n            return\n        }\n\n        this.setState({\n            gridState: this.genEmptyGrid(numRows, numCols),\n            fer: Math.random()\n        }, () => {\n            this.props.onChange(JSON.stringify(this.state.gridState))\n        })\n    }\n\n    toggleChangeDimensionsPopover(to) {\n        this.setState({\n            openChangeDimensions: to\n        })\n    }\n\n    render() {\n        const { classes, index } = this.props;\n\n        const { gridState, fer } = this.state;\n\n        const revealClearButton = gridState.reduce((acc, cur, _) =>\n                acc + cur.reduce((_acc, _cur, __) =>\n                    _acc + _cur.length, 0\n                ), 0\n        ) > 0; // only reveal the clear button if there is at least something in a cell\n\n        const showInitialSlide = gridState.length === 0;\n\n        return (\n            <Box textAlign={'center'} display={'flex'} flexDirection={'column'} alignItems={'center'} pt={1} pb={1}>\n                {showInitialSlide ? (\n                    <form onSubmit={this.clearCells}>\n                        <Box className={'grid-input-notice-container'} p={2} bgcolor={'rgb(249,249,250)'}\n                             borderRadius={8}>\n                            <div style={{\n                                fontWeight: 700,\n                                fontSize: 18\n                            }}>\n                                Enter in matrix dimensions.\n                            </div>\n                            <p>(This can be changed later)</p>\n                            <Box display={'flex'} justifyContent={'center'} alignItems={'center'} mt={1}>\n                                <TextField\n                                    id={this.rowId}\n                                    inputProps={{\n                                        \"aria-labelledby\": `${this.rowId}-label`\n                                    }}\n                                    variant={\"outlined\"} label={`# rows (Q${index})`} type={'number'}\n                                    className={'grid-input-dim-input'}\n                                    {...stagingProp({\n                                        \"data-selenium-target\": `grid-answer-row-input-${index}`\n                                    })}\n                                    onChange={(evt) => this.dimensionFieldChange(evt, 0)}\n                                />\n                                <CloseIcon/>\n                                <TextField\n                                    id={this.colId}\n                                    inputProps={{\n                                        \"aria-labelledby\": `${this.colId}-label`\n                                    }}\n                                    variant={\"outlined\"} label={`# cols (Q${index})`} type={'number'}\n                                    className={'grid-input-dim-input'}\n                                    {...stagingProp({\n                                        \"data-selenium-target\": `grid-answer-col-input-${index}`\n                                    })}\n                                    onChange={(evt) => this.dimensionFieldChange(evt, 1)}\n                                />\n                            </Box>\n                            <Box mt={2}>\n                                <Button variant={'contained'} color={'primary'} type={'submit'}\n                                        {...stagingProp({\n                                            \"data-selenium-target\": `grid-answer-next-${index}`\n                                        })}\n                                >\n                                    Next\n                                </Button>\n                            </Box>\n                        </Box>\n                    </form>\n                ) : (\n                    <div style={{\n                        maxWidth: '100%'\n                    }}>\n                        <Box mb={1} display={'flex'} width={'100%'} alignItems={'center'} justifyContent={'flex-end'}>\n                            <Button variant=\"contained\" color=\"primary\"\n                                    onClick={() => this.toggleChangeDimensionsPopover(true)}\n                                    ref={this.changeDimRef}>DIMENSIONS: {gridState.length} x {gridState[0].length}</Button>\n                            <Popper open={this.state.openChangeDimensions}\n                                    anchorEl={this.changeDimRef.current} role={undefined}\n                                    transition disablePortal\n                                    placement={'bottom-end'}\n                                    style={{\n                                        zIndex: 10\n                                    }}\n                            >\n                                {({ TransitionProps, placement }) => (\n                                    <Grow\n                                        {...TransitionProps}\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                    >\n                                        <Paper>\n                                            <ClickAwayListener\n                                                onClickAway={() => this.toggleChangeDimensionsPopover(false)}>\n                                                <form onSubmit={(e) => {\n                                                    e.preventDefault()\n                                                    this.clearCells()\n                                                    this.toggleChangeDimensionsPopover(false)\n                                                }}>\n                                                    <Box className={'grid-input-notice-container'} p={2}\n                                                         display={'flex'}\n                                                         flexDirection={'column'} alignItems={'flex-end'} boxShadow={3}\n                                                         borderRadius={3}>\n                                                        <Box display={'flex'} justifyContent={'center'}\n                                                             alignItems={'center'} mt={1}>\n                                                            <TextField\n                                                                size={'small'}\n                                                                variant={\"filled\"} label={'# Rows'} type={'number'}\n                                                                className={'grid-input-dim-input'}\n                                                                onChange={(evt) => this.dimensionFieldChange(evt, 0)}\n                                                            />\n                                                            <CloseIcon/>\n                                                            <TextField\n                                                                size={'small'}\n                                                                variant={\"filled\"} label={'# Cols'} type={'number'}\n                                                                className={'grid-input-dim-input'}\n                                                                onChange={(evt) => this.dimensionFieldChange(evt, 1)}\n                                                            />\n                                                        </Box>\n                                                        <Box mt={1}>\n                                                            <Button variant={'contained'} color={'primary'}\n                                                                    type={'submit'} size={'small'}>\n                                                                Done\n                                                            </Button>\n                                                        </Box>\n                                                    </Box>\n                                                </form>\n                                            </ClickAwayListener>\n                                        </Paper>\n                                    </Grow>\n                                )}\n                            </Popper>\n                        </Box>\n                        <div ref={this.gridRef} className={clsx(this.props.isMatrix && 'matrix-container')}>\n                            {this.props.isMatrix && <div className={'matrix-bracket-left'}/>}\n                            <Box display={'grid'}\n                                 gridTemplateColumns={`repeat(${gridState[0].length}, 1fr)`}\n                                 overflow={'auto'}\n                                 pt={1}\n                                 pb={1}\n                                 gridGap={8}\n                                 justifyItems={'center'}\n                            >\n                                {\n                                    gridState.map((row, idx) =>\n                                        row.map((val, jdx) => {\n                                            return (\n                                                <center\n                                                    className={clsx(classes.textBoxLatex, 'grid-cell')}\n                                                    key={`cell-${idx}-${jdx}-${fer}`}\n                                                    aria-label={`Cell (${idx}, ${jdx})`}\n                                                    {...stagingProp({\n                                                        \"data-selenium-target\": `grid-answer-cell-${jdx + idx * this.state.numCols}-${index}`\n                                                    })}\n                                                >\n                                                    <EquationEditor\n                                                        value={val}\n                                                        onChange={(str) => this.cellFieldChange(str, idx, jdx)}\n                                                        style={{ width: \"100%\" }}\n                                                        autoCommands={EQUATION_EDITOR_AUTO_COMMANDS}\n                                                        autoOperatorNames={EQUATION_EDITOR_AUTO_OPERATORS}\n                                                    />\n                                                </center>\n                                            )\n                                        })\n                                    )\n                                }\n                            </Box>\n                            {this.props.isMatrix && <div className={'matrix-bracket-right'}/>}\n                        </div>\n                        <Box mt={1} display={'flex'} width={'100%'} alignItems={'center'} justifyContent={'flex-end'}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.clearCells}\n                                    className={clsx(\"revealable\", revealClearButton && \"revealed\")}>clear all\n                                cells</Button>\n                        </Box>\n                    </div>\n                )}\n            </Box>\n        )\n    }\n\n}\n\n\nexport default GridInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}