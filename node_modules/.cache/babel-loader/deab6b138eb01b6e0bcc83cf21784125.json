{"ast":null,"code":"export function parseMatrixTex(solTex){var solutionMatrices=[];(Array.isArray(solTex)?solTex:[solTex]).forEach(function(sol){var _start=sol.indexOf(\"matrix} \")+\"matrix} \".length;var _end=sol.indexOf(\"\\\\end{\");var _solutionMatrix=sol.substring(_start,_end).trim().split(\"\\\\\\\\\").map(function(row){return row.split(\"&\").map(function(val){return val.trim();});});solutionMatrices.push(_solutionMatrix);});return solutionMatrices;}","map":{"version":3,"names":["parseMatrixTex","solTex","solutionMatrices","Array","isArray","forEach","sol","_start","indexOf","length","_end","_solutionMatrix","substring","trim","split","map","row","val","push"],"sources":["/Users/songwang/allison/chem/OATutor-Chem1A/src/util/parseMatrixTex.js"],"sourcesContent":["export function parseMatrixTex(solTex) {\n    const solutionMatrices = []\n\n    ;(Array.isArray(solTex) ? solTex : [solTex]).forEach(sol => {\n        const _start = sol.indexOf(\"matrix} \") + \"matrix} \".length\n        const _end = sol.indexOf(\"\\\\end{\")\n        let _solutionMatrix = sol\n            .substring(_start, _end)\n            .trim()\n            .split(\"\\\\\\\\\")\n            .map(row => row.split(\"&\").map(val => val.trim()))\n        solutionMatrices.push(_solutionMatrix)\n    })\n    return solutionMatrices;\n}\n"],"mappings":"AAAA,MAAO,SAASA,eAAT,CAAwBC,MAAxB,CAAgC,CACnC,GAAMC,iBAAgB,CAAG,EAAzB,CAEC,CAACC,KAAK,CAACC,OAAN,CAAcH,MAAd,EAAwBA,MAAxB,CAAiC,CAACA,MAAD,CAAlC,EAA4CI,OAA5C,CAAoD,SAAAC,GAAG,CAAI,CACxD,GAAMC,OAAM,CAAGD,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAA0B,WAAWC,MAApD,CACA,GAAMC,KAAI,CAAGJ,GAAG,CAACE,OAAJ,CAAY,QAAZ,CAAb,CACA,GAAIG,gBAAe,CAAGL,GAAG,CACpBM,SADiB,CACPL,MADO,CACCG,IADD,EAEjBG,IAFiB,GAGjBC,KAHiB,CAGX,MAHW,EAIjBC,GAJiB,CAIb,SAAAC,GAAG,QAAIA,IAAG,CAACF,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmB,SAAAE,GAAG,QAAIA,IAAG,CAACJ,IAAJ,EAAJ,EAAtB,CAAJ,EAJU,CAAtB,CAKAX,gBAAgB,CAACgB,IAAjB,CAAsBP,eAAtB,EACH,CATA,EAUD,MAAOT,iBAAP,CACH"},"metadata":{},"sourceType":"module"}